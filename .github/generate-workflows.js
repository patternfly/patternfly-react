/* For some reason Github's composite actions are limited to a small set
 * of actions AND even if you get them working, the composite actions don't
 * list all the steps out in an easily debuggable way.
 *
 * I've written this so common parts of pr preview/release builds need not
 * be repeated.
 */
const path = require('path');
const fs = require('fs');

const inDir = path.join(__dirname, 'workflows-src');
const outDir = path.join(__dirname, 'workflows');
const partialsDir = path.join(inDir, 'partials');
const yamlRegex = /\.ya?ml$/;

const partials = fs.readdirSync(partialsDir).reduce((acc, f) => {
  acc[f.replace(yamlRegex, '')] = fs.readFileSync(path.join(partialsDir, f), 'utf8').trim();
  return acc;
}, {});

function templateReplace(contents) {
  Object.entries(partials).forEach(([key, val]) => {
    const regexText = `([ \\t]*)%${key}%`;
    const match = contents.match(new RegExp(regexText));
    if (match) {
      const spacing = match[1];
      val = `${spacing}${val.replace(/\n/g, '\n' + spacing)}`;
      contents = contents.replace(new RegExp(regexText, 'g'), val);
    }
  });
  
  return contents;
}

// Partials can have other partials
Object.entries(partials).forEach(([key, val]) => {
  partials[key] = templateReplace(val);
});

if (!fs.existsSync(outDir)) {
  fs.mkdirSync(outDir);
}

fs.readdirSync(inDir)
  .filter(f => f.match(yamlRegex))
  .forEach(f => {
    let contents = fs.readFileSync(path.join(inDir, f), 'utf8');

    contents = templateReplace(contents);
    contents = `### WARNING -- this file was generated by ${process.argv[1].split(path.sep).pop()}\n${contents}`;
    fs.writeFileSync(path.join(outDir, f), contents);
  });


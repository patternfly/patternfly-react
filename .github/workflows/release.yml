### WARNING -- this file was generated by generate-workflows.js
name: release
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GH_PR_NUM: ${{ github.event.number }}
    steps:
      - uses: actions/checkout@v2
      # Yes, we really want to checkout the PR
      - run: |
          if [[ ! -z "${GH_PR_NUM}" ]]; then 
            echo "Checking out PR"
            git fetch origin pull/$GH_PR_NUM/head:tmp
            git checkout tmp
          fi
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      - uses: actions/cache@v2
        id: yarn-cache
        name: Cache npm deps
        with:
          path: |
           node_modules
           **/node_modules
           ~/.cache/Cypress
          key: ${{ runner.os }}-yarn-14-${{ secrets.CACHE_VERSION }}-${{ hashFiles('yarn.lock') }}
      - run: yarn install --frozen-lockfile
        if: steps.yarn-cache.outputs.cache-hit != 'true'
      - uses: actions/cache@v2
        id: dist
        name: Cache dist
        with:
          path: |
            packages/*/dist
            packages/react-styles/css
          key: ${{ runner.os }}-dist-14-${{ secrets.CACHE_VERSION }}-${{ hashFiles('yarn.lock', 'package.json', 'packages/*/*', '!packages/*/dist', '!packages/*/node_modules') }}
      - name: Build dist
        run: yarn build && yarn build:umd
        if: steps.dist.outputs.cache-hit != 'true'
  lint:
    runs-on: ubuntu-latest
    env:
      GH_PR_NUM: ${{ github.event.number }}
    needs: build
    steps:
      - uses: actions/checkout@v2
      # Yes, we really want to checkout the PR
      - run: |
          if [[ ! -z "${GH_PR_NUM}" ]]; then 
            echo "Checking out PR"
            git fetch origin pull/$GH_PR_NUM/head:tmp
            git checkout tmp
          fi
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      - uses: actions/cache@v2
        id: yarn-cache
        name: Cache npm deps
        with:
          path: |
           node_modules
           **/node_modules
           ~/.cache/Cypress
          key: ${{ runner.os }}-yarn-14-${{ secrets.CACHE_VERSION }}-${{ hashFiles('yarn.lock') }}
      - run: yarn install --frozen-lockfile
        if: steps.yarn-cache.outputs.cache-hit != 'true'
      - uses: actions/cache@v2
        id: lint-cache
        name: Load lint cache
        with:
          path: '.eslintcache'
          key: ${{ runner.os }}-lint-14-${{ secrets.CACHE_VERSION }}-${{ hashFiles('yarn.lock') }}
      - name: ESLint
        run: yarn lint:ts
      - name: MDLint
        run: yarn lint:md
      - name: '@patternfly/patternfly versions match'
        run: yarn lint:versions
  test_jest:
    runs-on: ubuntu-latest
    env:
      GH_PR_NUM: ${{ github.event.number }}
    needs: build
    steps:
      - uses: actions/checkout@v2
      # Yes, we really want to checkout the PR
      - run: |
          if [[ ! -z "${GH_PR_NUM}" ]]; then 
            echo "Checking out PR"
            git fetch origin pull/$GH_PR_NUM/head:tmp
            git checkout tmp
          fi
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      - uses: actions/cache@v2
        id: yarn-cache
        name: Cache npm deps
        with:
          path: |
           node_modules
           **/node_modules
           ~/.cache/Cypress
          key: ${{ runner.os }}-yarn-14-${{ secrets.CACHE_VERSION }}-${{ hashFiles('yarn.lock') }}
      - run: yarn install --frozen-lockfile
        if: steps.yarn-cache.outputs.cache-hit != 'true'
      - uses: actions/cache@v2
        id: dist
        name: Cache dist
        with:
          path: |
            packages/*/dist
            packages/react-styles/css
          key: ${{ runner.os }}-dist-14-${{ secrets.CACHE_VERSION }}-${{ hashFiles('yarn.lock', 'package.json', 'packages/*/*', '!packages/*/dist', '!packages/*/node_modules') }}
      - name: Build dist
        run: yarn build && yarn build:umd
        if: steps.dist.outputs.cache-hit != 'true'
      - name: PF4 Jest Tests
        run: yarn test --maxWorkers=2
  docs:
    runs-on: ubuntu-latest
    needs: build
    env:
      SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
      SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
      GH_PR_TOKEN: ${{ secrets.GH_PR_TOKEN }}
      GH_PR_NUM: ${{ github.event.number }}
    steps:
      - uses: actions/checkout@v2
      # Yes, we really want to checkout the PR
      - run: |
          if [[ ! -z "${GH_PR_NUM}" ]]; then 
            echo "Checking out PR"
            git fetch origin pull/$GH_PR_NUM/head:tmp
            git checkout tmp
          fi
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      - uses: actions/cache@v2
        id: yarn-cache
        name: Cache npm deps
        with:
          path: |
           node_modules
           **/node_modules
           ~/.cache/Cypress
          key: ${{ runner.os }}-yarn-14-${{ secrets.CACHE_VERSION }}-${{ hashFiles('yarn.lock') }}
      - run: yarn install --frozen-lockfile
        if: steps.yarn-cache.outputs.cache-hit != 'true'
      - uses: actions/cache@v2
        id: dist
        name: Cache dist
        with:
          path: |
            packages/*/dist
            packages/react-styles/css
          key: ${{ runner.os }}-dist-14-${{ secrets.CACHE_VERSION }}-${{ hashFiles('yarn.lock', 'package.json', 'packages/*/*', '!packages/*/dist', '!packages/*/node_modules') }}
      - name: Build dist
        run: yarn build && yarn build:umd
        if: steps.dist.outputs.cache-hit != 'true'
      - uses: actions/cache@v2
        id: docs-cache
        name: Cache webpack
        with:
          path: '.cache'
          key: ${{ runner.os }}-v4-${{ secrets.CACHE_VERSION }}-${{ hashFiles('yarn.lock') }}
      - name: Build docs
        run: yarn build:docs
      - name: Upload docs
        run: node .github/upload-preview.js packages/react-docs/public
        if: always()
      - name: a11y tests
        run: yarn serve:docs & yarn test:a11y
      - name: Upload a11y results
        run: node .github/upload-preview.js packages/react-docs/coverage
        if: always()
  demo_app:
    runs-on: ubuntu-latest
    env:
      GH_PR_NUM: ${{ github.event.number }}
    needs: build
    steps:
      - uses: actions/checkout@v2
      # Yes, we really want to checkout the PR
      - run: |
          if [[ ! -z "${GH_PR_NUM}" ]]; then 
            echo "Checking out PR"
            git fetch origin pull/$GH_PR_NUM/head:tmp
            git checkout tmp
          fi
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      - uses: actions/cache@v2
        id: yarn-cache
        name: Cache npm deps
        with:
          path: |
           node_modules
           **/node_modules
           ~/.cache/Cypress
          key: ${{ runner.os }}-yarn-14-${{ secrets.CACHE_VERSION }}-${{ hashFiles('yarn.lock') }}
      - run: yarn install --frozen-lockfile
        if: steps.yarn-cache.outputs.cache-hit != 'true'
      - uses: actions/cache@v2
        id: dist
        name: Cache dist
        with:
          path: |
            packages/*/dist
            packages/react-styles/css
          key: ${{ runner.os }}-dist-14-${{ secrets.CACHE_VERSION }}-${{ hashFiles('yarn.lock', 'package.json', 'packages/*/*', '!packages/*/dist', '!packages/*/node_modules') }}
      - name: Build dist
        run: yarn build && yarn build:umd
        if: steps.dist.outputs.cache-hit != 'true'
      - name: Build demo app
        run: yarn build:integration
      - name: Upload demo app
        uses: actions/upload-artifact@v2
        with:
          name: demo-app
          path: packages/react-integration/demo-app-ts/public
  test_integration:
    runs-on: ubuntu-latest
    env:
      GH_PR_NUM: ${{ github.event.number }}
    needs: demo_app
    strategy:
      fail-fast: false
      matrix:
        worker_num: [0, 1, 2, 3, 4]
        worker_count: [5]
    steps:
      - uses: actions/checkout@v2
      # Yes, we really want to checkout the PR
      - run: |
          if [[ ! -z "${GH_PR_NUM}" ]]; then 
            echo "Checking out PR"
            git fetch origin pull/$GH_PR_NUM/head:tmp
            git checkout tmp
          fi
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      - uses: actions/cache@v2
        id: yarn-cache
        name: Cache npm deps
        with:
          path: |
           node_modules
           **/node_modules
           ~/.cache/Cypress
          key: ${{ runner.os }}-yarn-14-${{ secrets.CACHE_VERSION }}-${{ hashFiles('yarn.lock') }}
      - run: yarn install --frozen-lockfile
        if: steps.yarn-cache.outputs.cache-hit != 'true'
      - uses: actions/cache@v2
        id: dist
        name: Cache dist
        with:
          path: |
            packages/*/dist
            packages/react-styles/css
          key: ${{ runner.os }}-dist-14-${{ secrets.CACHE_VERSION }}-${{ hashFiles('yarn.lock', 'package.json', 'packages/*/*', '!packages/*/dist', '!packages/*/node_modules') }}
      - name: Build dist
        run: yarn build && yarn build:umd
        if: steps.dist.outputs.cache-hit != 'true'
      - name: Download demo app
        uses: actions/download-artifact@v2
        with:
          name: demo-app
          path: packages/react-integration/demo-app-ts/public
      - run: printenv
      - name: Cypress tests
        run: yarn serve:integration & yarn test:integration -s $(node .github/split.js)
        env:
          WORKER_NUM: ${{ matrix.worker_num }}
          WORKER_COUNT: ${{ matrix.worker_count }}
  deploy:
    runs-on: ubuntu-latest
    needs: [lint, test_jest, docs, test_integration]
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      GH_TOKEN: ${{ secrets.GH_TOKEN_REDALLEN }} # needs to be an admin token to get around branch protection
      GH_PR_TOKEN: ${{ secrets.GH_PR_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN_REDALLEN }} # needs to be an admin token to get around branch protection
          fetch-depth: "0"
      - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      - uses: actions/cache@v2
        id: yarn-cache
        name: Cache npm deps
        with:
          path: |
           node_modules
           **/node_modules
           ~/.cache/Cypress
          key: ${{ runner.os }}-yarn-14-${{ secrets.CACHE_VERSION }}-${{ hashFiles('yarn.lock') }}
      - run: yarn install --frozen-lockfile
        if: steps.yarn-cache.outputs.cache-hit != 'true'
      - uses: actions/cache@v2
        id: dist
        name: Cache dist
        with:
          path: |
            packages/*/dist
            packages/react-styles/css
          key: ${{ runner.os }}-dist-14-${{ secrets.CACHE_VERSION }}-${{ hashFiles('yarn.lock', 'package.json', 'packages/*/*', '!packages/*/dist', '!packages/*/node_modules') }}
      - name: Build dist
        run: yarn build && yarn build:umd
        if: steps.dist.outputs.cache-hit != 'true'
      - name: Deploy to NPM and Github
        run: .github/release.sh


version: 2

# Adapted from https://github.com/circleci/circleci-docs/blob/master/.circleci/config.yml
# I'd love to find docs on this syntax.
references:
  js_deps_paths: &js_deps_paths
  - node_modules/
  - packages/patternfly-3/patternfly-react-extensions/node_modules/
  - packages/patternfly-3/patternfly-react-wooden-tree/node_modules/
  - packages/patternfly-3/patternfly-react/node_modules/
  - packages/patternfly-3/react-console/node_modules/
  - packages/react-codemods/node_modules/
  build_cache_paths: &build_cache_paths
  - .cache/
  - packages/patternfly-3/patternfly-react-extensions/dist/
  - packages/patternfly-3/patternfly-react-wooden-tree/dist/
  - packages/patternfly-3/patternfly-react/dist/
  - packages/patternfly-3/react-console/dist/
  lint_cache_paths: &lint_cache_paths
  - .eslintcache
  js_deps_cache_key: &js_deps_cache_key
    js-deps-v{{.Environment.CACHE_VERSION}}-{{checksum "yarn.lock"}}
  build_cache_key: &build_cache_key
    build-cache-v{{.Environment.CACHE_VERSION}}-{{checksum "yarn.lock"}}
  lint_cache_key: &lint_cache_key
    lint-cache-v{{.Environment.CACHE_VERSION}}-{{checksum "package.json"}}
  attach_workspace: &attach_workspace
    attach_workspace:
      at: ~/project
  install_node: &install_node
    run:
      name: Install node@10 (need right version for `yarn`)
      command: |
        set +e             
        curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.5/install.sh | bash
        export NVM_DIR="/opt/circleci/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
        nvm install v10
        nvm alias default v10
        
        # Each step uses the same `$BASH_ENV`, so need to modify it
        echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
        echo "[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"" >> $BASH_ENV
  install_yarn: &install_yarn
    run:
      name: Install yarn
      command: curl -o- -L https://yarnpkg.com/install.sh | bash
workflows:
  version: 2
  build_test_deploy:
    jobs:
    - build
    - build_pf3_docs:
        requires:
        - build
    - test_jest_other:
        requires:
        - build
    - lint:
        requires:
        - build
    - deploy_prerelease:
        requires:
        - test_jest_other
        - test_integration
        - build_pf3_docs
        filters:
          branches:
            only: master
jobs:
  build:
    docker:
    - image: circleci/node:10
    steps:
    - checkout
    - persist_to_workspace:
        root: ~/project
        paths:
          - "*"
    - restore_cache:
        keys:
        - *js_deps_cache_key
    - run:
        name: Conditional install
        command: if [ ! -d node_modules ]; then yarn install --frozen-lockfile; fi
    - save_cache:
        paths: *js_deps_paths
        key: *js_deps_cache_key
    - save_cache:
        paths:
          - ~/.cache/Cypress
        key: *cypress_cache_key
    - restore_cache:
        keys:
        - *build_cache_key
    - run:
        name: Build Dist
        command: yarn build
    - save_cache:
        paths: *build_cache_paths
        key: *build_cache_key
    - persist_to_workspace:
        root: ~/project
        paths: *build_cache_paths
  test_jest_other:
    docker:
    - image: circleci/node:10
    steps:
    - *attach_workspace
    - restore_cache:
        keys:
        - *js_deps_cache_key
    - run:
        name: PF3 Jest Tests
        command: yarn test:pf3 --maxWorkers=2
    - run:
        name: Upload results to codecov
        command: yarn run codecov -F patternfly3
        when: always
    - run:
        name: Clear Coverage
        command: rm -rf coverage
        when: always
    - run:
        name: Other Tests
        command: yarn test:misc --maxWorkers=2
        when: always
    - run:
        name: Upload results to codecov
        command: yarn run codecov -F misc
        when: always
  lint:
    docker:
    - image: circleci/node:10
    steps:
    - *attach_workspace
    - restore_cache:
        keys:
        - *js_deps_cache_key
    - restore_cache:
        keys:
        - *lint_cache_key
    - run:
        name: ESLint
        command: yarn lint:ts
    - run:
        name: MDLint
        command: yarn lint:md
    - save_cache:
        paths: *lint_cache_paths
        key: *lint_cache_key
    - run:
        name: "@patternfly/patternfly Versions Match"
        command: yarn lint:versions
        when: always
    - run:
        name: StyleLint
        command: yarn lint:style
        when: always
    - run:
        name: Breaking Change Lint
        # https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit
        command: |
            if git log origin/master..HEAD --format="%b" | grep -i "breaking change";
            then
                echo "Breaking change above detected"
                exit 1
            fi
        when: always
  build_pf3_docs:
    docker:
    - image: circleci/node:10
    steps:
    - *attach_workspace
    - restore_cache:
        keys:
        - *js_deps_cache_key
    - run:
        name: Build PF3 Storybook Static Site
        command: yarn build:storybook
    - run:
        name: Upload docs to surge.sh
        command: node .circleci/upload-preview.js .out
  deploy_prerelease:
    docker:
    - image: circleci/node:10
    steps:
    - *attach_workspace
    - restore_cache:
        keys:
        - *js_deps_cache_key
    - run:
        name: Avoid Unknown Host for github.com
        command: mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
    - run:
        name: Deploy to NPM and Github
        command: .circleci/release.sh

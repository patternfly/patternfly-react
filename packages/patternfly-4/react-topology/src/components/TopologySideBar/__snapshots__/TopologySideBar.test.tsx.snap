// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TopologySideBar should display topology sidebar correctly 1`] = `
.pf-topology-side-bar__header {
  display: block;
}
.pf-topology-side-bar.fade.my-test-class.shown {
  display: block;
  position: absolute;
  top: 0px;
  right: 0px;
  width: 100%;
  max-width: 100%;
  height: 100%;
  background-color: #ffffff;
  overflow-x: hidden;
  opacity: 0;
  z-index: 5;
  transition: opacity 0.15s linear,transform 0.15s linear;
  transform: translate3d(25%,0,0);
}

<TopologySideBar
  className="my-test-class"
  header={
    <span
      id="test-header-id"
    >
      Header
    </span>
  }
  show={true}
>
  <div
    className="pf-topology-side-bar fade my-test-class shown"
    role="dialog"
  >
    <div
      className="pf-topology-side-bar__header"
    >
      <span
        id="test-header-id"
      >
        Header
      </span>
    </div>
    <div
      className="pf-topology-side-bar__body"
    >
      <div
        id="test-canvas"
      />
    </div>
  </div>
</TopologySideBar>
`;

exports[`TopologySideBar should display topology sidebar w/ close correctly 1`] = `
.pf-c-button.pf-m-plain.pf-topology-side-bar__dismiss {
  display: block;
  position: absolute;
  right: 1rem;
}
.pf-topology-side-bar__dismiss {
  display: block;
}
.pf-topology-side-bar.fade.my-test-class.shown {
  display: block;
  position: absolute;
  top: 0px;
  right: 0px;
  width: 100%;
  max-width: 100%;
  height: 100%;
  background-color: #ffffff;
  overflow-x: hidden;
  opacity: 0;
  z-index: 5;
  transition: opacity 0.15s linear,transform 0.15s linear;
  transform: translate3d(25%,0,0);
}

<TopologySideBar
  className="my-test-class"
  onClose={[MockFunction]}
  show={true}
>
  <div
    className="pf-topology-side-bar fade my-test-class shown"
    role="dialog"
  >
    <Button
      aria-label="Close"
      className="pf-topology-side-bar__dismiss"
      onClick={[MockFunction]}
      variant="plain"
    >
      <button
        aria-disabled={null}
        aria-label="Close"
        className="pf-c-button pf-m-plain pf-topology-side-bar__dismiss"
        disabled={false}
        onClick={[MockFunction]}
        tabIndex={null}
        type="button"
      >
        <TimesIcon
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
          title={null}
        >
          <svg
            aria-hidden={true}
            aria-labelledby={null}
            fill="currentColor"
            height="1em"
            role="img"
            style={
              Object {
                "verticalAlign": "-0.125em",
              }
            }
            viewBox="0 0 352 512"
            width="1em"
          >
            <path
              d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
              transform=""
            />
          </svg>
        </TimesIcon>
      </button>
    </Button>
    <div
      className="pf-topology-side-bar__body"
    >
      &gt;
      <div
        id="test-canvas"
      />
    </div>
  </div>
</TopologySideBar>
`;

exports[`TopologySideBar should hide the sidebar correctly 1`] = `
.pf-topology-side-bar.fade.my-test-class {
  display: block;
  position: absolute;
  top: 0px;
  right: 0px;
  width: 0px;
  max-width: 100%;
  height: 100%;
  background-color: #ffffff;
  overflow-x: hidden;
  opacity: 0;
  z-index: 5;
  transition: opacity 0.15s linear,transform 0.15s linear;
  transform: translate3d(25%,0,0);
}

<TopologySideBar
  className="my-test-class"
  header={
    <span
      id="test-header-id"
    >
      Header
    </span>
  }
  show={false}
>
  <div
    className="pf-topology-side-bar fade my-test-class"
    role="dialog"
  />
</TopologySideBar>
`;

{
  "id": 0,
  "name": "@patternfly/react-core",
  "kind": 0,
  "flags": {},
  "groups": [
    {
      "title": "Interfaces",
      "kind": 256,
      "children": [
        7
      ]
    },
    {
      "title": "Type aliases",
      "kind": 4194304,
      "children": [
        4,
        1
      ]
    },
    {
      "title": "Variables",
      "kind": 32,
      "children": [
        33
      ]
    },
    {
      "title": "Functions",
      "kind": 64,
      "children": [
        14,
        34,
        40,
        56,
        37,
        47,
        60,
        52
      ]
    },
    {
      "title": "Object literals",
      "kind": 2097152,
      "children": [
        30,
        19,
        25,
        11
      ]
    }
  ],
  "data": [
    {
      "id": 7,
      "name": "AvatarProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {
        "isExported": true
      },
      "comment": {
        "shortText": "Column properties."
      },
      "children": [
        {
          "id": 10,
          "name": "alt",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Attribute that specifies the alt text of the image for the Avatar."
          },
          "sources": [
            {
              "fileName": "components/Avatar/Avatar.tsx",
              "line": 20,
              "character": 5
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 8,
          "name": "className",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExported": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Additional classes added to the Avatar."
          },
          "sources": [
            {
              "fileName": "components/Avatar/Avatar.tsx",
              "line": 16,
              "character": 11
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 9,
          "name": "src",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExported": true,
            "isOptional": true
          },
          "comment": {
            "shortText": "Attribute that specifies the URL of the image for the Avatar."
          },
          "sources": [
            {
              "fileName": "components/Avatar/Avatar.tsx",
              "line": 18,
              "character": 5
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "kind": 1024,
          "children": [
            10,
            8,
            9
          ]
        }
      ],
      "sources": [
        {
          "fileName": "components/Avatar/Avatar.tsx",
          "line": 13,
          "character": 28
        }
      ],
      "extendedTypes": [
        {
          "type": "intersection",
          "types": [
            {
              "type": "reference",
              "name": "ClassAttributes",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "HTMLImageElement"
                }
              ]
            },
            {
              "type": "reference",
              "name": "ImgHTMLAttributes",
              "typeArguments": [
                {
                  "type": "reference",
                  "name": "HTMLImageElement"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "id": 4,
      "name": "Omit",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {
        "isExported": true
      },
      "typeParameter": [
        {
          "id": 5,
          "name": "T",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {}
        },
        {
          "id": 6,
          "name": "K",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "typeOperator",
            "operator": "keyof",
            "target": {
              "type": "typeParameter",
              "name": "T"
            }
          }
        }
      ],
      "sources": [
        {
          "fileName": "helpers/typeUtils.ts",
          "line": 4,
          "character": 16
        }
      ],
      "type": {
        "type": "reference",
        "name": "Pick",
        "typeArguments": [
          {
            "type": "typeParameter",
            "name": "T"
          },
          {
            "type": "unknown",
            "name": "({ [P in keyof T]: P; } & { [P in K]: never; } & { [x: string]: never; [x: number]: never; })[keyof T]"
          }
        ]
      }
    },
    {
      "id": 1,
      "name": "OneOf",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {
        "isExported": true
      },
      "typeParameter": [
        {
          "id": 2,
          "name": "T",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {}
        },
        {
          "id": 3,
          "name": "K",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "type": {
            "type": "typeOperator",
            "operator": "keyof",
            "target": {
              "type": "typeParameter",
              "name": "T"
            }
          }
        }
      ],
      "sources": [
        {
          "fileName": "helpers/typeUtils.ts",
          "line": 1,
          "character": 17
        }
      ],
      "type": {
        "type": "unknown",
        "name": "T[K]"
      }
    },
    {
      "id": 33,
      "name": "ASTERISK",
      "kind": 32,
      "kindString": "Variable",
      "flags": {
        "isExported": true,
        "isConst": true
      },
      "sources": [
        {
          "fileName": "helpers/htmlConstants.ts",
          "line": 1,
          "character": 21
        }
      ],
      "type": {
        "type": "stringLiteral",
        "value": "*"
      },
      "defaultValue": "\"*\""
    },
    {
      "id": 14,
      "name": "Avatar",
      "kind": 64,
      "kindString": "Function",
      "flags": {
        "isExported": true,
        "isConst": true
      },
      "signatures": [
        {
          "id": 15,
          "name": "Avatar",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 16,
              "name": "props",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "intersection",
                "types": [
                  {
                    "type": "reference",
                    "name": "AvatarProps",
                    "id": 7
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 17,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 18,
                          "name": "children",
                          "kind": 32,
                          "kindString": "Variable",
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "/Users/kmcfaul/Documents/workspace/patternfly-react/node_modules/@types/react/index.d.ts",
                              "line": 730,
                              "character": 46
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "name": "ReactNode"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Variables",
                          "kind": 32,
                          "children": [
                            18
                          ]
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element"
          }
        }
      ],
      "sources": [
        {
          "fileName": "components/Avatar/Avatar.tsx",
          "line": 23,
          "character": 12
        }
      ]
    },
    {
      "id": 34,
      "name": "capitalize",
      "kind": 64,
      "kindString": "Function",
      "flags": {
        "isExported": true
      },
      "signatures": [
        {
          "id": 35,
          "name": "capitalize",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 36,
              "name": "input",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "sources": [
        {
          "fileName": "helpers/util.ts",
          "line": 4,
          "character": 26
        }
      ]
    },
    {
      "id": 40,
      "name": "debounce",
      "kind": 64,
      "kindString": "Function",
      "flags": {
        "isExported": true
      },
      "signatures": [
        {
          "id": 41,
          "name": "debounce",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 42,
              "name": "func",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 43,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "signatures": [
                    {
                      "id": 44,
                      "name": "__call",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 45,
                          "name": "args",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {
                            "isRest": true
                          },
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "intrinsic",
                              "name": "any"
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "helpers/util.ts",
                      "line": 17,
                      "character": 30
                    }
                  ]
                }
              }
            },
            {
              "id": 46,
              "name": "wait",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "(Anonymous function)"
          }
        }
      ],
      "sources": [
        {
          "fileName": "helpers/util.ts",
          "line": 17,
          "character": 24
        }
      ]
    },
    {
      "id": 56,
      "name": "fillTemplate",
      "kind": 64,
      "kindString": "Function",
      "flags": {
        "isExported": true
      },
      "signatures": [
        {
          "id": 57,
          "name": "fillTemplate",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "shortText": "This function returns the side the element is out of view on (right, left or both)",
            "returns": "The template string literal result\n"
          },
          "parameters": [
            {
              "id": 58,
              "name": "templateString",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "The string passed by the consumer"
              },
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 59,
              "name": "templateVars",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "The variables passed to the string\n"
              },
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "any"
          }
        }
      ],
      "sources": [
        {
          "fileName": "helpers/util.ts",
          "line": 82,
          "character": 28
        }
      ]
    },
    {
      "id": 37,
      "name": "getUniqueId",
      "kind": 64,
      "kindString": "Function",
      "flags": {
        "isExported": true
      },
      "signatures": [
        {
          "id": 38,
          "name": "getUniqueId",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 39,
              "name": "prefix",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "\"pf\""
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "sources": [
        {
          "fileName": "helpers/util.ts",
          "line": 8,
          "character": 27
        }
      ]
    },
    {
      "id": 47,
      "name": "isElementInView",
      "kind": 64,
      "kindString": "Function",
      "flags": {
        "isExported": true
      },
      "signatures": [
        {
          "id": 48,
          "name": "isElementInView",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "shortText": "This function returns the side the element is out of view on (right, left or both)",
            "returns": "True if the component is in View.\n"
          },
          "parameters": [
            {
              "id": 49,
              "name": "container",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "The container to check if the element is in view of."
              },
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 50,
              "name": "element",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "The element to check if it is view"
              },
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 51,
              "name": "partial",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "true if partial view is allowed\n"
              },
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        }
      ],
      "sources": [
        {
          "fileName": "helpers/util.ts",
          "line": 32,
          "character": 31
        }
      ]
    },
    {
      "id": 60,
      "name": "keyHandler",
      "kind": 64,
      "kindString": "Function",
      "flags": {
        "isExported": true
      },
      "signatures": [
        {
          "id": 61,
          "name": "keyHandler",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "shortText": "This function allows for keyboard navigation through dropdowns. The custom argument is optional."
          },
          "parameters": [
            {
              "id": 62,
              "name": "index",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "The index of the element you're on"
              },
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 63,
              "name": "position",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "The orientation of the dropdown"
              },
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 64,
              "name": "refsCollection",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "Array of refs to the items in the dropdown"
              },
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 65,
              "name": "kids",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "Array of items in the dropdown"
              },
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 66,
              "name": "custom",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "false"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "void"
          }
        }
      ],
      "sources": [
        {
          "fileName": "helpers/util.ts",
          "line": 94,
          "character": 26
        }
      ]
    },
    {
      "id": 52,
      "name": "sideElementIsOutOfView",
      "kind": 64,
      "kindString": "Function",
      "flags": {
        "isExported": true
      },
      "signatures": [
        {
          "id": 53,
          "name": "sideElementIsOutOfView",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "shortText": "This function returns the side the element is out of view on (right, left or both)",
            "returns": "right if the element is of the right, left if element is off the left or both if it is off on both sides.\n"
          },
          "parameters": [
            {
              "id": 54,
              "name": "container",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "The container to check if the element is in view of."
              },
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 55,
              "name": "element",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "comment": {
                "text": "The element to check if it is view\n"
              },
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "sources": [
        {
          "fileName": "helpers/util.ts",
          "line": 53,
          "character": 38
        }
      ]
    },
    {
      "id": 30,
      "name": "KEYHANDLER_DIRECTION",
      "kind": 2097152,
      "kindString": "Object literal",
      "flags": {
        "isExported": true,
        "isConst": true
      },
      "children": [
        {
          "id": 32,
          "name": "DOWN",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isExported": true
          },
          "sources": [
            {
              "fileName": "helpers/constants.ts",
              "line": 5,
              "character": 52
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "defaultValue": "\"down\""
        },
        {
          "id": 31,
          "name": "UP",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isExported": true
          },
          "sources": [
            {
              "fileName": "helpers/constants.ts",
              "line": 5,
              "character": 40
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "defaultValue": "\"up\""
        }
      ],
      "groups": [
        {
          "title": "Variables",
          "kind": 32,
          "children": [
            32,
            31
          ]
        }
      ],
      "sources": [
        {
          "fileName": "helpers/constants.ts",
          "line": 5,
          "character": 33
        }
      ],
      "type": {
        "type": "intrinsic",
        "name": "object"
      }
    },
    {
      "id": 19,
      "name": "KEY_CODES",
      "kind": 2097152,
      "kindString": "Object literal",
      "flags": {
        "isExported": true,
        "isConst": true
      },
      "children": [
        {
          "id": 21,
          "name": "ARROW_DOWN",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isExported": true
          },
          "sources": [
            {
              "fileName": "helpers/constants.ts",
              "line": 1,
              "character": 51
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "defaultValue": "40"
        },
        {
          "id": 20,
          "name": "ARROW_UP",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isExported": true
          },
          "sources": [
            {
              "fileName": "helpers/constants.ts",
              "line": 1,
              "character": 35
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "defaultValue": "38"
        },
        {
          "id": 24,
          "name": "ENTER",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isExported": true
          },
          "sources": [
            {
              "fileName": "helpers/constants.ts",
              "line": 1,
              "character": 86
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "defaultValue": "13"
        },
        {
          "id": 22,
          "name": "ESCAPE_KEY",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isExported": true
          },
          "sources": [
            {
              "fileName": "helpers/constants.ts",
              "line": 1,
              "character": 67
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "defaultValue": "27"
        },
        {
          "id": 23,
          "name": "TAB",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isExported": true
          },
          "sources": [
            {
              "fileName": "helpers/constants.ts",
              "line": 1,
              "character": 76
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "defaultValue": "9"
        }
      ],
      "groups": [
        {
          "title": "Variables",
          "kind": 32,
          "children": [
            21,
            20,
            24,
            22,
            23
          ]
        }
      ],
      "sources": [
        {
          "fileName": "helpers/constants.ts",
          "line": 1,
          "character": 22
        }
      ],
      "type": {
        "type": "intrinsic",
        "name": "object"
      }
    },
    {
      "id": 25,
      "name": "SIDE",
      "kind": 2097152,
      "kindString": "Object literal",
      "flags": {
        "isExported": true,
        "isConst": true
      },
      "children": [
        {
          "id": 28,
          "name": "BOTH",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isExported": true
          },
          "sources": [
            {
              "fileName": "helpers/constants.ts",
              "line": 3,
              "character": 56
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "defaultValue": "\"both\""
        },
        {
          "id": 27,
          "name": "LEFT",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isExported": true
          },
          "sources": [
            {
              "fileName": "helpers/constants.ts",
              "line": 3,
              "character": 42
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "defaultValue": "\"left\""
        },
        {
          "id": 29,
          "name": "NONE",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isExported": true
          },
          "sources": [
            {
              "fileName": "helpers/constants.ts",
              "line": 3,
              "character": 70
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "defaultValue": "\"none\""
        },
        {
          "id": 26,
          "name": "RIGHT",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isExported": true
          },
          "sources": [
            {
              "fileName": "helpers/constants.ts",
              "line": 3,
              "character": 27
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "defaultValue": "\"right\""
        }
      ],
      "groups": [
        {
          "title": "Variables",
          "kind": 32,
          "children": [
            28,
            27,
            29,
            26
          ]
        }
      ],
      "sources": [
        {
          "fileName": "helpers/constants.ts",
          "line": 3,
          "character": 17
        }
      ],
      "type": {
        "type": "intrinsic",
        "name": "object"
      }
    },
    {
      "id": 11,
      "name": "defaultProps",
      "kind": 2097152,
      "kindString": "Object literal",
      "flags": {
        "isConst": true
      },
      "children": [
        {
          "id": 12,
          "name": "className",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "components/Avatar/Avatar.tsx",
              "line": 6,
              "character": 11
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "defaultValue": "\"\""
        },
        {
          "id": 13,
          "name": "src",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "components/Avatar/Avatar.tsx",
              "line": 7,
              "character": 5
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "defaultValue": "\"\""
        }
      ],
      "groups": [
        {
          "title": "Variables",
          "kind": 32,
          "children": [
            12,
            13
          ]
        }
      ],
      "sources": [
        {
          "fileName": "components/Avatar/Avatar.tsx",
          "line": 5,
          "character": 18
        }
      ],
      "type": {
        "type": "intrinsic",
        "name": "object"
      }
    }
  ]
}
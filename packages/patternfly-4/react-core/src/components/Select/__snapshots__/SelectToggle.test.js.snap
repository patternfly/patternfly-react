// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`state active 1`] = `
<SelectToggle
  ariaLabelToggle={null}
  ariaLabelledBy={null}
  className=""
  handleTypeaheadKeys={[Function]}
  id="Select Toggle"
  isActive={true}
  isExpanded={false}
  isFocused={false}
  isHovered={false}
  isPlain={false}
  onClose={[Function]}
  onEnter={[Function]}
  onToggle={[Function]}
  parentRef={<div />}
  type="button"
  variant={false}
>
  <button
    aria-expanded={false}
    aria-haspopup="listbox"
    aria-labelledby={null}
    className="pf-c-select__toggle pf-m-active"
    id="Select Toggle"
    onClick={[Function]}
    onKeyDown={[Function]}
    type="button"
  >
    Select
    <CaretDownIcon
      className="pf-c-select__toggle-arrow"
      color="currentColor"
      size="sm"
      title={null}
    >
      <svg
        aria-hidden={true}
        aria-labelledby={null}
        className="pf-c-select__toggle-arrow"
        fill="currentColor"
        height="1em"
        role="img"
        style={
          Object {
            "verticalAlign": "-0.125em",
          }
        }
        viewBox="0 0 320 512"
        width="1em"
      >
        <path
          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
          transform=""
        />
      </svg>
    </CaretDownIcon>
  </button>
</SelectToggle>
`;

exports[`state focus 1`] = `
<SelectToggle
  ariaLabelToggle={null}
  ariaLabelledBy={null}
  className=""
  handleTypeaheadKeys={[Function]}
  id="Select Toggle"
  isActive={false}
  isExpanded={false}
  isFocused={true}
  isHovered={false}
  isPlain={false}
  onClose={[Function]}
  onEnter={[Function]}
  onToggle={[Function]}
  parentRef={<div />}
  type="button"
  variant={false}
>
  <button
    aria-expanded={false}
    aria-haspopup="listbox"
    aria-labelledby={null}
    className="pf-c-select__toggle pf-m-focus"
    id="Select Toggle"
    onClick={[Function]}
    onKeyDown={[Function]}
    type="button"
  >
    Select
    <CaretDownIcon
      className="pf-c-select__toggle-arrow"
      color="currentColor"
      size="sm"
      title={null}
    >
      <svg
        aria-hidden={true}
        aria-labelledby={null}
        className="pf-c-select__toggle-arrow"
        fill="currentColor"
        height="1em"
        role="img"
        style={
          Object {
            "verticalAlign": "-0.125em",
          }
        }
        viewBox="0 0 320 512"
        width="1em"
      >
        <path
          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
          transform=""
        />
      </svg>
    </CaretDownIcon>
  </button>
</SelectToggle>
`;

exports[`state hover 1`] = `
<SelectToggle
  ariaLabelToggle={null}
  ariaLabelledBy={null}
  className=""
  handleTypeaheadKeys={[Function]}
  id="Select Toggle"
  isActive={false}
  isExpanded={false}
  isFocused={false}
  isHovered={true}
  isPlain={false}
  onClose={[Function]}
  onEnter={[Function]}
  onToggle={[Function]}
  parentRef={<div />}
  type="button"
  variant={false}
>
  <button
    aria-expanded={false}
    aria-haspopup="listbox"
    aria-labelledby={null}
    className="pf-c-select__toggle pf-m-hover"
    id="Select Toggle"
    onClick={[Function]}
    onKeyDown={[Function]}
    type="button"
  >
    Select
    <CaretDownIcon
      className="pf-c-select__toggle-arrow"
      color="currentColor"
      size="sm"
      title={null}
    >
      <svg
        aria-hidden={true}
        aria-labelledby={null}
        className="pf-c-select__toggle-arrow"
        fill="currentColor"
        height="1em"
        role="img"
        style={
          Object {
            "verticalAlign": "-0.125em",
          }
        }
        viewBox="0 0 320 512"
        width="1em"
      >
        <path
          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
          transform=""
        />
      </svg>
    </CaretDownIcon>
  </button>
</SelectToggle>
`;

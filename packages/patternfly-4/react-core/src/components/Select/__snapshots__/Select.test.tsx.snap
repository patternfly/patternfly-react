// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`checkbox select renders checkbox select groups successfully - old classes 1`] = `
<Select
  aria-label=""
  ariaLabelClear="Clear all"
  ariaLabelRemove="Remove"
  ariaLabelToggle="Options menu"
  ariaLabelTypeAhead=""
  ariaLabelledBy=""
  className=""
  isExpanded={true}
  isGrouped={true}
  isPlain={false}
  onClear={[Function]}
  onSelect={[MockFunction]}
  onToggle={[MockFunction]}
  placeholderText=""
  selections=""
  toggleId={null}
  variant="checkbox"
  width=""
>
  <div
    className="pf-c-select pf-m-expanded"
    style={
      Object {
        "width": "",
      }
    }
  >
    <SelectToggle
      ariaLabelToggle="Options menu"
      ariaLabelledBy=" pf-toggle-id-12"
      className=""
      handleTypeaheadKeys={[Function]}
      id="pf-toggle-id-12"
      isActive={false}
      isExpanded={true}
      isFocused={false}
      isHovered={false}
      isPlain={false}
      onClose={[Function]}
      onEnter={[Function]}
      onToggle={[MockFunction]}
      parentRef={
        Object {
          "current": <div
            class="pf-c-select pf-m-expanded"
          >
            <button
              aria-expanded="true"
              aria-labelledby=" pf-toggle-id-12"
              class="pf-c-select__toggle"
              id="pf-toggle-id-12"
              type="button"
            >
              <div
                class="pf-c-select__toggle-wrapper"
              >
                <span
                  class="pf-c-select__toggle-text"
                />
                
              </div>
              <svg
                aria-hidden="true"
                class="pf-c-select__toggle-arrow"
                fill="currentColor"
                height="1em"
                role="img"
                style="vertical-align: -0.125em;"
                viewBox="0 0 320 512"
                width="1em"
              >
                <path
                  d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                  transform=""
                />
              </svg>
            </button>
            <div>
              <div
                class="pf-c-select__menu"
              >
                <form
                  class="pf-c-form"
                  novalidate=""
                >
                  <div
                    class="pf-c-form__group"
                  >
                    <div
                      class="pf-c-select__menu-group"
                    >
                      <div
                        aria-hidden="true"
                        class="pf-c-select__menu-group-title"
                        id="group-1"
                      >
                        group 1
                      </div>
                      <fieldset
                        aria-labelledby="group-1"
                        class="pf-c-form__fieldset"
                      >
                        <label
                          class="pf-c-check pf-c-select__menu-item"
                        >
                          <input
                            class="pf-c-check__input"
                            id="Mr"
                            type="checkbox"
                          />
                          <span
                            class="pf-c-check__label"
                          >
                            Mr
                          </span>
                        </label>
                        <label
                          class="pf-c-check pf-c-select__menu-item"
                        >
                          <input
                            class="pf-c-check__input"
                            id="Mrs"
                            type="checkbox"
                          />
                          <span
                            class="pf-c-check__label"
                          >
                            Mrs
                          </span>
                        </label>
                        <label
                          class="pf-c-check pf-c-select__menu-item"
                        >
                          <input
                            class="pf-c-check__input"
                            id="Ms"
                            type="checkbox"
                          />
                          <span
                            class="pf-c-check__label"
                          >
                            Ms
                          </span>
                        </label>
                        <label
                          class="pf-c-check pf-c-select__menu-item"
                        >
                          <input
                            class="pf-c-check__input"
                            id="Other"
                            type="checkbox"
                          />
                          <span
                            class="pf-c-check__label"
                          >
                            Other
                          </span>
                        </label>
                      </fieldset>
                    </div>
                    <div
                      class="pf-c-select__menu-group"
                    >
                      <div
                        aria-hidden="true"
                        class="pf-c-select__menu-group-title"
                        id="group-2"
                      >
                        group 2
                      </div>
                      <fieldset
                        aria-labelledby="group-2"
                        class="pf-c-form__fieldset"
                      >
                        <label
                          class="pf-c-check pf-c-select__menu-item"
                        >
                          <input
                            class="pf-c-check__input"
                            id="Mr"
                            type="checkbox"
                          />
                          <span
                            class="pf-c-check__label"
                          >
                            Mr
                          </span>
                        </label>
                        <label
                          class="pf-c-check pf-c-select__menu-item"
                        >
                          <input
                            class="pf-c-check__input"
                            id="Mrs"
                            type="checkbox"
                          />
                          <span
                            class="pf-c-check__label"
                          >
                            Mrs
                          </span>
                        </label>
                        <label
                          class="pf-c-check pf-c-select__menu-item"
                        >
                          <input
                            class="pf-c-check__input"
                            id="Ms"
                            type="checkbox"
                          />
                          <span
                            class="pf-c-check__label"
                          >
                            Ms
                          </span>
                        </label>
                        <label
                          class="pf-c-check pf-c-select__menu-item"
                        >
                          <input
                            class="pf-c-check__input"
                            id="Other"
                            type="checkbox"
                          />
                          <span
                            class="pf-c-check__label"
                          >
                            Other
                          </span>
                        </label>
                      </fieldset>
                    </div>
                  </div>
                </form>
              </div>
            </div>
          </div>,
        }
      }
      type="button"
      variant="checkbox"
    >
      <button
        aria-expanded={true}
        aria-haspopup={null}
        aria-labelledby=" pf-toggle-id-12"
        className="pf-c-select__toggle"
        id="pf-toggle-id-12"
        onClick={[Function]}
        onKeyDown={[Function]}
        type="button"
      >
        <div
          className="pf-c-select__toggle-wrapper"
        >
          <span
            className="pf-c-select__toggle-text"
          />
        </div>
        <CaretDownIcon
          className="pf-c-select__toggle-arrow"
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
          title={null}
        >
          <svg
            aria-hidden={true}
            aria-labelledby={null}
            className="pf-c-select__toggle-arrow"
            fill="currentColor"
            height="1em"
            role="img"
            style={
              Object {
                "verticalAlign": "-0.125em",
              }
            }
            viewBox="0 0 320 512"
            width="1em"
          >
            <path
              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
              transform=""
            />
          </svg>
        </CaretDownIcon>
      </button>
    </SelectToggle>
    <SelectMenu
      aria-label=""
      aria-labelledby=""
      checked=""
      className=""
      isExpanded={false}
      isGrouped={true}
      keyHandler={[Function]}
      openedOnEnter={false}
      selected=""
      sendRef={[Function]}
    >
      <FocusTrap
        _createFocusTrap={[Function]}
        active={true}
        focusTrapOptions={
          Object {
            "clickOutsideDeactivates": true,
          }
        }
        paused={false}
        tag="div"
      >
        <div>
          <div
            className="pf-c-select__menu"
          >
            <form
              className="pf-c-form"
              noValidate={true}
            >
              <div
                className="pf-c-form__group"
              >
                <Component
                  key=".0"
                  label="group 1"
                  titleId="group-1"
                >
                  <div
                    className="pf-c-select__menu-group"
                  >
                    <div
                      aria-hidden={true}
                      className="pf-c-select__menu-group-title"
                      id="group-1"
                    >
                      group 1
                    </div>
                    <fieldset
                      aria-labelledby="group-1"
                      className="pf-c-form__fieldset"
                    >
                      <CheckboxSelectOption
                        className=""
                        index={0}
                        isChecked=""
                        isDisabled={false}
                        key="0"
                        keyHandler={[Function]}
                        onClick={[Function]}
                        sendRef={[Function]}
                        value="Mr"
                      >
                        <label
                          className="pf-c-check pf-c-select__menu-item"
                          onKeyDown={[Function]}
                        >
                          <input
                            checked={false}
                            className="pf-c-check__input"
                            disabled={false}
                            id="Mr"
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <span
                            className="pf-c-check__label"
                          >
                            Mr
                          </span>
                        </label>
                      </CheckboxSelectOption>
                      <CheckboxSelectOption
                        className=""
                        index={1}
                        isChecked=""
                        isDisabled={false}
                        key="1"
                        keyHandler={[Function]}
                        onClick={[Function]}
                        sendRef={[Function]}
                        value="Mrs"
                      >
                        <label
                          className="pf-c-check pf-c-select__menu-item"
                          onKeyDown={[Function]}
                        >
                          <input
                            checked={false}
                            className="pf-c-check__input"
                            disabled={false}
                            id="Mrs"
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <span
                            className="pf-c-check__label"
                          >
                            Mrs
                          </span>
                        </label>
                      </CheckboxSelectOption>
                      <CheckboxSelectOption
                        className=""
                        index={2}
                        isChecked=""
                        isDisabled={false}
                        key="2"
                        keyHandler={[Function]}
                        onClick={[Function]}
                        sendRef={[Function]}
                        value="Ms"
                      >
                        <label
                          className="pf-c-check pf-c-select__menu-item"
                          onKeyDown={[Function]}
                        >
                          <input
                            checked={false}
                            className="pf-c-check__input"
                            disabled={false}
                            id="Ms"
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <span
                            className="pf-c-check__label"
                          >
                            Ms
                          </span>
                        </label>
                      </CheckboxSelectOption>
                      <CheckboxSelectOption
                        className=""
                        index={3}
                        isChecked=""
                        isDisabled={false}
                        key="3"
                        keyHandler={[Function]}
                        onClick={[Function]}
                        sendRef={[Function]}
                        value="Other"
                      >
                        <label
                          className="pf-c-check pf-c-select__menu-item"
                          onKeyDown={[Function]}
                        >
                          <input
                            checked={false}
                            className="pf-c-check__input"
                            disabled={false}
                            id="Other"
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <span
                            className="pf-c-check__label"
                          >
                            Other
                          </span>
                        </label>
                      </CheckboxSelectOption>
                    </fieldset>
                  </div>
                </Component>
                <Component
                  key=".1"
                  label="group 2"
                  titleId="group-2"
                >
                  <div
                    className="pf-c-select__menu-group"
                  >
                    <div
                      aria-hidden={true}
                      className="pf-c-select__menu-group-title"
                      id="group-2"
                    >
                      group 2
                    </div>
                    <fieldset
                      aria-labelledby="group-2"
                      className="pf-c-form__fieldset"
                    >
                      <CheckboxSelectOption
                        className=""
                        index={4}
                        isChecked=""
                        isDisabled={false}
                        key="0"
                        keyHandler={[Function]}
                        onClick={[Function]}
                        sendRef={[Function]}
                        value="Mr"
                      >
                        <label
                          className="pf-c-check pf-c-select__menu-item"
                          onKeyDown={[Function]}
                        >
                          <input
                            checked={false}
                            className="pf-c-check__input"
                            disabled={false}
                            id="Mr"
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <span
                            className="pf-c-check__label"
                          >
                            Mr
                          </span>
                        </label>
                      </CheckboxSelectOption>
                      <CheckboxSelectOption
                        className=""
                        index={5}
                        isChecked=""
                        isDisabled={false}
                        key="1"
                        keyHandler={[Function]}
                        onClick={[Function]}
                        sendRef={[Function]}
                        value="Mrs"
                      >
                        <label
                          className="pf-c-check pf-c-select__menu-item"
                          onKeyDown={[Function]}
                        >
                          <input
                            checked={false}
                            className="pf-c-check__input"
                            disabled={false}
                            id="Mrs"
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <span
                            className="pf-c-check__label"
                          >
                            Mrs
                          </span>
                        </label>
                      </CheckboxSelectOption>
                      <CheckboxSelectOption
                        className=""
                        index={6}
                        isChecked=""
                        isDisabled={false}
                        key="2"
                        keyHandler={[Function]}
                        onClick={[Function]}
                        sendRef={[Function]}
                        value="Ms"
                      >
                        <label
                          className="pf-c-check pf-c-select__menu-item"
                          onKeyDown={[Function]}
                        >
                          <input
                            checked={false}
                            className="pf-c-check__input"
                            disabled={false}
                            id="Ms"
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <span
                            className="pf-c-check__label"
                          >
                            Ms
                          </span>
                        </label>
                      </CheckboxSelectOption>
                      <CheckboxSelectOption
                        className=""
                        index={7}
                        isChecked=""
                        isDisabled={false}
                        key="3"
                        keyHandler={[Function]}
                        onClick={[Function]}
                        sendRef={[Function]}
                        value="Other"
                      >
                        <label
                          className="pf-c-check pf-c-select__menu-item"
                          onKeyDown={[Function]}
                        >
                          <input
                            checked={false}
                            className="pf-c-check__input"
                            disabled={false}
                            id="Other"
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <span
                            className="pf-c-check__label"
                          >
                            Other
                          </span>
                        </label>
                      </CheckboxSelectOption>
                    </fieldset>
                  </div>
                </Component>
              </div>
            </form>
          </div>
        </div>
      </FocusTrap>
    </SelectMenu>
  </div>
</Select>
`;

exports[`checkbox select renders checkbox select groups successfully 1`] = `
<Select
  aria-label=""
  ariaLabelClear="Clear all"
  ariaLabelRemove="Remove"
  ariaLabelToggle="Options menu"
  ariaLabelTypeAhead=""
  ariaLabelledBy=""
  className=""
  isExpanded={true}
  isGrouped={true}
  isPlain={false}
  onClear={[Function]}
  onSelect={[MockFunction]}
  onToggle={[MockFunction]}
  placeholderText=""
  selections=""
  toggleId={null}
  variant="checkbox"
  width=""
>
  <div
    className="pf-c-select pf-m-expanded"
    style={
      Object {
        "width": "",
      }
    }
  >
    <SelectToggle
      ariaLabelToggle="Options menu"
      ariaLabelledBy=" pf-toggle-id-11"
      className=""
      handleTypeaheadKeys={[Function]}
      id="pf-toggle-id-11"
      isActive={false}
      isExpanded={true}
      isFocused={false}
      isHovered={false}
      isPlain={false}
      onClose={[Function]}
      onEnter={[Function]}
      onToggle={[MockFunction]}
      parentRef={
        Object {
          "current": <div
            class="pf-c-select pf-m-expanded"
          >
            <button
              aria-expanded="true"
              aria-labelledby=" pf-toggle-id-11"
              class="pf-c-select__toggle"
              id="pf-toggle-id-11"
              type="button"
            >
              <div
                class="pf-c-select__toggle-wrapper"
              >
                <span
                  class="pf-c-select__toggle-text"
                />
                
              </div>
              <svg
                aria-hidden="true"
                class="pf-c-select__toggle-arrow"
                fill="currentColor"
                height="1em"
                role="img"
                style="vertical-align: -0.125em;"
                viewBox="0 0 320 512"
                width="1em"
              >
                <path
                  d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                  transform=""
                />
              </svg>
            </button>
            <div>
              <div
                class="pf-c-select__menu"
              >
                <form
                  class="pf-c-form"
                  novalidate=""
                >
                  <div
                    class="pf-c-form__group"
                  >
                    <div
                      class="pf-c-select__menu-group"
                    >
                      <div
                        aria-hidden="true"
                        class="pf-c-select__menu-group-title"
                        id="group-1"
                      >
                        group 1
                      </div>
                      <fieldset
                        aria-labelledby="group-1"
                        class="pf-c-form__fieldset"
                      >
                        <label
                          class="pf-c-check pf-c-select__menu-item"
                        >
                          <input
                            class="pf-c-check__input"
                            id="Mr"
                            type="checkbox"
                          />
                          <span
                            class="pf-c-check__label"
                          >
                            Mr
                          </span>
                        </label>
                        <label
                          class="pf-c-check pf-c-select__menu-item"
                        >
                          <input
                            class="pf-c-check__input"
                            id="Mrs"
                            type="checkbox"
                          />
                          <span
                            class="pf-c-check__label"
                          >
                            Mrs
                          </span>
                        </label>
                        <label
                          class="pf-c-check pf-c-select__menu-item"
                        >
                          <input
                            class="pf-c-check__input"
                            id="Ms"
                            type="checkbox"
                          />
                          <span
                            class="pf-c-check__label"
                          >
                            Ms
                          </span>
                        </label>
                        <label
                          class="pf-c-check pf-c-select__menu-item"
                        >
                          <input
                            class="pf-c-check__input"
                            id="Other"
                            type="checkbox"
                          />
                          <span
                            class="pf-c-check__label"
                          >
                            Other
                          </span>
                        </label>
                      </fieldset>
                    </div>
                    <div
                      class="pf-c-select__menu-group"
                    >
                      <div
                        aria-hidden="true"
                        class="pf-c-select__menu-group-title"
                        id="group-2"
                      >
                        group 2
                      </div>
                      <fieldset
                        aria-labelledby="group-2"
                        class="pf-c-form__fieldset"
                      >
                        <label
                          class="pf-c-check pf-c-select__menu-item"
                        >
                          <input
                            class="pf-c-check__input"
                            id="Mr"
                            type="checkbox"
                          />
                          <span
                            class="pf-c-check__label"
                          >
                            Mr
                          </span>
                        </label>
                        <label
                          class="pf-c-check pf-c-select__menu-item"
                        >
                          <input
                            class="pf-c-check__input"
                            id="Mrs"
                            type="checkbox"
                          />
                          <span
                            class="pf-c-check__label"
                          >
                            Mrs
                          </span>
                        </label>
                        <label
                          class="pf-c-check pf-c-select__menu-item"
                        >
                          <input
                            class="pf-c-check__input"
                            id="Ms"
                            type="checkbox"
                          />
                          <span
                            class="pf-c-check__label"
                          >
                            Ms
                          </span>
                        </label>
                        <label
                          class="pf-c-check pf-c-select__menu-item"
                        >
                          <input
                            class="pf-c-check__input"
                            id="Other"
                            type="checkbox"
                          />
                          <span
                            class="pf-c-check__label"
                          >
                            Other
                          </span>
                        </label>
                      </fieldset>
                    </div>
                  </div>
                </form>
              </div>
            </div>
          </div>,
        }
      }
      type="button"
      variant="checkbox"
    >
      <button
        aria-expanded={true}
        aria-haspopup={null}
        aria-labelledby=" pf-toggle-id-11"
        className="pf-c-select__toggle"
        id="pf-toggle-id-11"
        onClick={[Function]}
        onKeyDown={[Function]}
        type="button"
      >
        <div
          className="pf-c-select__toggle-wrapper"
        >
          <span
            className="pf-c-select__toggle-text"
          />
        </div>
        <CaretDownIcon
          className="pf-c-select__toggle-arrow"
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
          title={null}
        >
          <svg
            aria-hidden={true}
            aria-labelledby={null}
            className="pf-c-select__toggle-arrow"
            fill="currentColor"
            height="1em"
            role="img"
            style={
              Object {
                "verticalAlign": "-0.125em",
              }
            }
            viewBox="0 0 320 512"
            width="1em"
          >
            <path
              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
              transform=""
            />
          </svg>
        </CaretDownIcon>
      </button>
    </SelectToggle>
    <SelectMenu
      aria-label=""
      aria-labelledby=""
      checked=""
      className=""
      isExpanded={false}
      isGrouped={true}
      keyHandler={[Function]}
      openedOnEnter={false}
      selected=""
      sendRef={[Function]}
    >
      <FocusTrap
        _createFocusTrap={[Function]}
        active={true}
        focusTrapOptions={
          Object {
            "clickOutsideDeactivates": true,
          }
        }
        paused={false}
        tag="div"
      >
        <div>
          <div
            className="pf-c-select__menu"
          >
            <form
              className="pf-c-form"
              noValidate={true}
            >
              <div
                className="pf-c-form__group"
              >
                <Component
                  key=".0"
                  label="group 1"
                  titleId="group-1"
                >
                  <div
                    className="pf-c-select__menu-group"
                  >
                    <div
                      aria-hidden={true}
                      className="pf-c-select__menu-group-title"
                      id="group-1"
                    >
                      group 1
                    </div>
                    <fieldset
                      aria-labelledby="group-1"
                      className="pf-c-form__fieldset"
                    >
                      <SelectOption
                        className=""
                        index={0}
                        isChecked=""
                        isDisabled={false}
                        isFocused={false}
                        isPlaceholder={false}
                        isSelected={false}
                        key="0"
                        keyHandler={[Function]}
                        onClick={[Function]}
                        sendRef={[Function]}
                        value="Mr"
                      >
                        <label
                          className="pf-c-check pf-c-select__menu-item"
                          onKeyDown={[Function]}
                        >
                          <input
                            checked={false}
                            className="pf-c-check__input"
                            disabled={false}
                            id="Mr"
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <span
                            className="pf-c-check__label"
                          >
                            Mr
                          </span>
                        </label>
                      </SelectOption>
                      <SelectOption
                        className=""
                        index={1}
                        isChecked=""
                        isDisabled={false}
                        isFocused={false}
                        isPlaceholder={false}
                        isSelected={false}
                        key="1"
                        keyHandler={[Function]}
                        onClick={[Function]}
                        sendRef={[Function]}
                        value="Mrs"
                      >
                        <label
                          className="pf-c-check pf-c-select__menu-item"
                          onKeyDown={[Function]}
                        >
                          <input
                            checked={false}
                            className="pf-c-check__input"
                            disabled={false}
                            id="Mrs"
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <span
                            className="pf-c-check__label"
                          >
                            Mrs
                          </span>
                        </label>
                      </SelectOption>
                      <SelectOption
                        className=""
                        index={2}
                        isChecked=""
                        isDisabled={false}
                        isFocused={false}
                        isPlaceholder={false}
                        isSelected={false}
                        key="2"
                        keyHandler={[Function]}
                        onClick={[Function]}
                        sendRef={[Function]}
                        value="Ms"
                      >
                        <label
                          className="pf-c-check pf-c-select__menu-item"
                          onKeyDown={[Function]}
                        >
                          <input
                            checked={false}
                            className="pf-c-check__input"
                            disabled={false}
                            id="Ms"
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <span
                            className="pf-c-check__label"
                          >
                            Ms
                          </span>
                        </label>
                      </SelectOption>
                      <SelectOption
                        className=""
                        index={3}
                        isChecked=""
                        isDisabled={false}
                        isFocused={false}
                        isPlaceholder={false}
                        isSelected={false}
                        key="3"
                        keyHandler={[Function]}
                        onClick={[Function]}
                        sendRef={[Function]}
                        value="Other"
                      >
                        <label
                          className="pf-c-check pf-c-select__menu-item"
                          onKeyDown={[Function]}
                        >
                          <input
                            checked={false}
                            className="pf-c-check__input"
                            disabled={false}
                            id="Other"
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <span
                            className="pf-c-check__label"
                          >
                            Other
                          </span>
                        </label>
                      </SelectOption>
                    </fieldset>
                  </div>
                </Component>
                <Component
                  key=".1"
                  label="group 2"
                  titleId="group-2"
                >
                  <div
                    className="pf-c-select__menu-group"
                  >
                    <div
                      aria-hidden={true}
                      className="pf-c-select__menu-group-title"
                      id="group-2"
                    >
                      group 2
                    </div>
                    <fieldset
                      aria-labelledby="group-2"
                      className="pf-c-form__fieldset"
                    >
                      <SelectOption
                        className=""
                        index={4}
                        isChecked=""
                        isDisabled={false}
                        isFocused={false}
                        isPlaceholder={false}
                        isSelected={false}
                        key="0"
                        keyHandler={[Function]}
                        onClick={[Function]}
                        sendRef={[Function]}
                        value="Mr"
                      >
                        <label
                          className="pf-c-check pf-c-select__menu-item"
                          onKeyDown={[Function]}
                        >
                          <input
                            checked={false}
                            className="pf-c-check__input"
                            disabled={false}
                            id="Mr"
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <span
                            className="pf-c-check__label"
                          >
                            Mr
                          </span>
                        </label>
                      </SelectOption>
                      <SelectOption
                        className=""
                        index={5}
                        isChecked=""
                        isDisabled={false}
                        isFocused={false}
                        isPlaceholder={false}
                        isSelected={false}
                        key="1"
                        keyHandler={[Function]}
                        onClick={[Function]}
                        sendRef={[Function]}
                        value="Mrs"
                      >
                        <label
                          className="pf-c-check pf-c-select__menu-item"
                          onKeyDown={[Function]}
                        >
                          <input
                            checked={false}
                            className="pf-c-check__input"
                            disabled={false}
                            id="Mrs"
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <span
                            className="pf-c-check__label"
                          >
                            Mrs
                          </span>
                        </label>
                      </SelectOption>
                      <SelectOption
                        className=""
                        index={6}
                        isChecked=""
                        isDisabled={false}
                        isFocused={false}
                        isPlaceholder={false}
                        isSelected={false}
                        key="2"
                        keyHandler={[Function]}
                        onClick={[Function]}
                        sendRef={[Function]}
                        value="Ms"
                      >
                        <label
                          className="pf-c-check pf-c-select__menu-item"
                          onKeyDown={[Function]}
                        >
                          <input
                            checked={false}
                            className="pf-c-check__input"
                            disabled={false}
                            id="Ms"
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <span
                            className="pf-c-check__label"
                          >
                            Ms
                          </span>
                        </label>
                      </SelectOption>
                      <SelectOption
                        className=""
                        index={7}
                        isChecked=""
                        isDisabled={false}
                        isFocused={false}
                        isPlaceholder={false}
                        isSelected={false}
                        key="3"
                        keyHandler={[Function]}
                        onClick={[Function]}
                        sendRef={[Function]}
                        value="Other"
                      >
                        <label
                          className="pf-c-check pf-c-select__menu-item"
                          onKeyDown={[Function]}
                        >
                          <input
                            checked={false}
                            className="pf-c-check__input"
                            disabled={false}
                            id="Other"
                            onChange={[Function]}
                            type="checkbox"
                          />
                          <span
                            className="pf-c-check__label"
                          >
                            Other
                          </span>
                        </label>
                      </SelectOption>
                    </fieldset>
                  </div>
                </Component>
              </div>
            </form>
          </div>
        </div>
      </FocusTrap>
    </SelectMenu>
  </div>
</Select>
`;

exports[`checkbox select renders closed successfully - old classes 1`] = `
<Select
  aria-label=""
  ariaLabelClear="Clear all"
  ariaLabelRemove="Remove"
  ariaLabelToggle="Options menu"
  ariaLabelTypeAhead=""
  ariaLabelledBy=""
  className=""
  isExpanded={false}
  isGrouped={false}
  isPlain={false}
  onClear={[Function]}
  onSelect={[MockFunction]}
  onToggle={[MockFunction]}
  placeholderText=""
  selections=""
  toggleId={null}
  variant="checkbox"
  width=""
>
  <div
    className="pf-c-select"
    style={
      Object {
        "width": "",
      }
    }
  >
    <SelectToggle
      ariaLabelToggle="Options menu"
      ariaLabelledBy=" pf-toggle-id-7"
      className=""
      handleTypeaheadKeys={[Function]}
      id="pf-toggle-id-7"
      isActive={false}
      isExpanded={false}
      isFocused={false}
      isHovered={false}
      isPlain={false}
      onClose={[Function]}
      onEnter={[Function]}
      onToggle={[MockFunction]}
      parentRef={
        Object {
          "current": <div
            class="pf-c-select"
          >
            <button
              aria-expanded="false"
              aria-labelledby=" pf-toggle-id-7"
              class="pf-c-select__toggle"
              id="pf-toggle-id-7"
              type="button"
            >
              <div
                class="pf-c-select__toggle-wrapper"
              >
                <span
                  class="pf-c-select__toggle-text"
                />
                
              </div>
              <svg
                aria-hidden="true"
                class="pf-c-select__toggle-arrow"
                fill="currentColor"
                height="1em"
                role="img"
                style="vertical-align: -0.125em;"
                viewBox="0 0 320 512"
                width="1em"
              >
                <path
                  d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                  transform=""
                />
              </svg>
            </button>
          </div>,
        }
      }
      type="button"
      variant="checkbox"
    >
      <button
        aria-expanded={false}
        aria-haspopup={null}
        aria-labelledby=" pf-toggle-id-7"
        className="pf-c-select__toggle"
        id="pf-toggle-id-7"
        onClick={[Function]}
        onKeyDown={[Function]}
        type="button"
      >
        <div
          className="pf-c-select__toggle-wrapper"
        >
          <span
            className="pf-c-select__toggle-text"
          />
        </div>
        <CaretDownIcon
          className="pf-c-select__toggle-arrow"
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
          title={null}
        >
          <svg
            aria-hidden={true}
            aria-labelledby={null}
            className="pf-c-select__toggle-arrow"
            fill="currentColor"
            height="1em"
            role="img"
            style={
              Object {
                "verticalAlign": "-0.125em",
              }
            }
            viewBox="0 0 320 512"
            width="1em"
          >
            <path
              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
              transform=""
            />
          </svg>
        </CaretDownIcon>
      </button>
    </SelectToggle>
  </div>
</Select>
`;

exports[`checkbox select renders closed successfully 1`] = `
<Select
  aria-label=""
  ariaLabelClear="Clear all"
  ariaLabelRemove="Remove"
  ariaLabelToggle="Options menu"
  ariaLabelTypeAhead=""
  ariaLabelledBy=""
  className=""
  isExpanded={false}
  isGrouped={false}
  isPlain={false}
  onClear={[Function]}
  onSelect={[MockFunction]}
  onToggle={[MockFunction]}
  placeholderText=""
  selections=""
  toggleId={null}
  variant="checkbox"
  width=""
>
  <div
    className="pf-c-select"
    style={
      Object {
        "width": "",
      }
    }
  >
    <SelectToggle
      ariaLabelToggle="Options menu"
      ariaLabelledBy=" pf-toggle-id-6"
      className=""
      handleTypeaheadKeys={[Function]}
      id="pf-toggle-id-6"
      isActive={false}
      isExpanded={false}
      isFocused={false}
      isHovered={false}
      isPlain={false}
      onClose={[Function]}
      onEnter={[Function]}
      onToggle={[MockFunction]}
      parentRef={
        Object {
          "current": <div
            class="pf-c-select"
          >
            <button
              aria-expanded="false"
              aria-labelledby=" pf-toggle-id-6"
              class="pf-c-select__toggle"
              id="pf-toggle-id-6"
              type="button"
            >
              <div
                class="pf-c-select__toggle-wrapper"
              >
                <span
                  class="pf-c-select__toggle-text"
                />
                
              </div>
              <svg
                aria-hidden="true"
                class="pf-c-select__toggle-arrow"
                fill="currentColor"
                height="1em"
                role="img"
                style="vertical-align: -0.125em;"
                viewBox="0 0 320 512"
                width="1em"
              >
                <path
                  d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                  transform=""
                />
              </svg>
            </button>
          </div>,
        }
      }
      type="button"
      variant="checkbox"
    >
      <button
        aria-expanded={false}
        aria-haspopup={null}
        aria-labelledby=" pf-toggle-id-6"
        className="pf-c-select__toggle"
        id="pf-toggle-id-6"
        onClick={[Function]}
        onKeyDown={[Function]}
        type="button"
      >
        <div
          className="pf-c-select__toggle-wrapper"
        >
          <span
            className="pf-c-select__toggle-text"
          />
        </div>
        <CaretDownIcon
          className="pf-c-select__toggle-arrow"
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
          title={null}
        >
          <svg
            aria-hidden={true}
            aria-labelledby={null}
            className="pf-c-select__toggle-arrow"
            fill="currentColor"
            height="1em"
            role="img"
            style={
              Object {
                "verticalAlign": "-0.125em",
              }
            }
            viewBox="0 0 320 512"
            width="1em"
          >
            <path
              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
              transform=""
            />
          </svg>
        </CaretDownIcon>
      </button>
    </SelectToggle>
  </div>
</Select>
`;

exports[`checkbox select renders expanded successfully - old classes 1`] = `
<Select
  aria-label=""
  ariaLabelClear="Clear all"
  ariaLabelRemove="Remove"
  ariaLabelToggle="Options menu"
  ariaLabelTypeAhead=""
  ariaLabelledBy=""
  className=""
  isExpanded={true}
  isGrouped={false}
  isPlain={false}
  onClear={[Function]}
  onSelect={[MockFunction]}
  onToggle={[MockFunction]}
  placeholderText=""
  selections=""
  toggleId={null}
  variant="checkbox"
  width=""
>
  <div
    className="pf-c-select pf-m-expanded"
    style={
      Object {
        "width": "",
      }
    }
  >
    <SelectToggle
      ariaLabelToggle="Options menu"
      ariaLabelledBy=" pf-toggle-id-9"
      className=""
      handleTypeaheadKeys={[Function]}
      id="pf-toggle-id-9"
      isActive={false}
      isExpanded={true}
      isFocused={false}
      isHovered={false}
      isPlain={false}
      onClose={[Function]}
      onEnter={[Function]}
      onToggle={[MockFunction]}
      parentRef={
        Object {
          "current": <div
            class="pf-c-select pf-m-expanded"
          >
            <button
              aria-expanded="true"
              aria-labelledby=" pf-toggle-id-9"
              class="pf-c-select__toggle"
              id="pf-toggle-id-9"
              type="button"
            >
              <div
                class="pf-c-select__toggle-wrapper"
              >
                <span
                  class="pf-c-select__toggle-text"
                />
                
              </div>
              <svg
                aria-hidden="true"
                class="pf-c-select__toggle-arrow"
                fill="currentColor"
                height="1em"
                role="img"
                style="vertical-align: -0.125em;"
                viewBox="0 0 320 512"
                width="1em"
              >
                <path
                  d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                  transform=""
                />
              </svg>
            </button>
            <div>
              <div
                class="pf-c-select__menu"
              >
                <form
                  class="pf-c-form"
                  novalidate=""
                >
                  <div
                    class="pf-c-form__group"
                  >
                    <fieldset
                      aria-label=""
                      class="pf-c-form__fieldset"
                    >
                      <label
                        class="pf-c-check pf-c-select__menu-item"
                      >
                        <input
                          class="pf-c-check__input"
                          id="Mr"
                          type="checkbox"
                        />
                        <span
                          class="pf-c-check__label"
                        >
                          Mr
                        </span>
                      </label>
                      <label
                        class="pf-c-check pf-c-select__menu-item"
                      >
                        <input
                          class="pf-c-check__input"
                          id="Mrs"
                          type="checkbox"
                        />
                        <span
                          class="pf-c-check__label"
                        >
                          Mrs
                        </span>
                      </label>
                      <label
                        class="pf-c-check pf-c-select__menu-item"
                      >
                        <input
                          class="pf-c-check__input"
                          id="Ms"
                          type="checkbox"
                        />
                        <span
                          class="pf-c-check__label"
                        >
                          Ms
                        </span>
                      </label>
                      <label
                        class="pf-c-check pf-c-select__menu-item"
                      >
                        <input
                          class="pf-c-check__input"
                          id="Other"
                          type="checkbox"
                        />
                        <span
                          class="pf-c-check__label"
                        >
                          Other
                        </span>
                      </label>
                    </fieldset>
                  </div>
                </form>
              </div>
            </div>
          </div>,
        }
      }
      type="button"
      variant="checkbox"
    >
      <button
        aria-expanded={true}
        aria-haspopup={null}
        aria-labelledby=" pf-toggle-id-9"
        className="pf-c-select__toggle"
        id="pf-toggle-id-9"
        onClick={[Function]}
        onKeyDown={[Function]}
        type="button"
      >
        <div
          className="pf-c-select__toggle-wrapper"
        >
          <span
            className="pf-c-select__toggle-text"
          />
        </div>
        <CaretDownIcon
          className="pf-c-select__toggle-arrow"
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
          title={null}
        >
          <svg
            aria-hidden={true}
            aria-labelledby={null}
            className="pf-c-select__toggle-arrow"
            fill="currentColor"
            height="1em"
            role="img"
            style={
              Object {
                "verticalAlign": "-0.125em",
              }
            }
            viewBox="0 0 320 512"
            width="1em"
          >
            <path
              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
              transform=""
            />
          </svg>
        </CaretDownIcon>
      </button>
    </SelectToggle>
    <SelectMenu
      aria-label=""
      aria-labelledby=""
      checked=""
      className=""
      isExpanded={false}
      isGrouped={false}
      keyHandler={[Function]}
      openedOnEnter={false}
      selected=""
      sendRef={[Function]}
    >
      <FocusTrap
        _createFocusTrap={[Function]}
        active={true}
        focusTrapOptions={
          Object {
            "clickOutsideDeactivates": true,
          }
        }
        paused={false}
        tag="div"
      >
        <div>
          <div
            className="pf-c-select__menu"
          >
            <form
              className="pf-c-form"
              noValidate={true}
            >
              <div
                className="pf-c-form__group"
              >
                <fieldset
                  aria-label=""
                  aria-labelledby={null}
                  className="pf-c-form__fieldset"
                >
                  <CheckboxSelectOption
                    className=""
                    index={0}
                    isChecked=""
                    isDisabled={false}
                    key=".$0"
                    keyHandler={[Function]}
                    onClick={[Function]}
                    sendRef={[Function]}
                    value="Mr"
                  >
                    <label
                      className="pf-c-check pf-c-select__menu-item"
                      onKeyDown={[Function]}
                    >
                      <input
                        checked={false}
                        className="pf-c-check__input"
                        disabled={false}
                        id="Mr"
                        onChange={[Function]}
                        type="checkbox"
                      />
                      <span
                        className="pf-c-check__label"
                      >
                        Mr
                      </span>
                    </label>
                  </CheckboxSelectOption>
                  <CheckboxSelectOption
                    className=""
                    index={1}
                    isChecked=""
                    isDisabled={false}
                    key=".$1"
                    keyHandler={[Function]}
                    onClick={[Function]}
                    sendRef={[Function]}
                    value="Mrs"
                  >
                    <label
                      className="pf-c-check pf-c-select__menu-item"
                      onKeyDown={[Function]}
                    >
                      <input
                        checked={false}
                        className="pf-c-check__input"
                        disabled={false}
                        id="Mrs"
                        onChange={[Function]}
                        type="checkbox"
                      />
                      <span
                        className="pf-c-check__label"
                      >
                        Mrs
                      </span>
                    </label>
                  </CheckboxSelectOption>
                  <CheckboxSelectOption
                    className=""
                    index={2}
                    isChecked=""
                    isDisabled={false}
                    key=".$2"
                    keyHandler={[Function]}
                    onClick={[Function]}
                    sendRef={[Function]}
                    value="Ms"
                  >
                    <label
                      className="pf-c-check pf-c-select__menu-item"
                      onKeyDown={[Function]}
                    >
                      <input
                        checked={false}
                        className="pf-c-check__input"
                        disabled={false}
                        id="Ms"
                        onChange={[Function]}
                        type="checkbox"
                      />
                      <span
                        className="pf-c-check__label"
                      >
                        Ms
                      </span>
                    </label>
                  </CheckboxSelectOption>
                  <CheckboxSelectOption
                    className=""
                    index={3}
                    isChecked=""
                    isDisabled={false}
                    key=".$3"
                    keyHandler={[Function]}
                    onClick={[Function]}
                    sendRef={[Function]}
                    value="Other"
                  >
                    <label
                      className="pf-c-check pf-c-select__menu-item"
                      onKeyDown={[Function]}
                    >
                      <input
                        checked={false}
                        className="pf-c-check__input"
                        disabled={false}
                        id="Other"
                        onChange={[Function]}
                        type="checkbox"
                      />
                      <span
                        className="pf-c-check__label"
                      >
                        Other
                      </span>
                    </label>
                  </CheckboxSelectOption>
                </fieldset>
              </div>
            </form>
          </div>
        </div>
      </FocusTrap>
    </SelectMenu>
  </div>
</Select>
`;

exports[`checkbox select renders expanded successfully 1`] = `
<Select
  aria-label=""
  ariaLabelClear="Clear all"
  ariaLabelRemove="Remove"
  ariaLabelToggle="Options menu"
  ariaLabelTypeAhead=""
  ariaLabelledBy=""
  className=""
  isExpanded={true}
  isGrouped={false}
  isPlain={false}
  onClear={[Function]}
  onSelect={[MockFunction]}
  onToggle={[MockFunction]}
  placeholderText=""
  selections=""
  toggleId={null}
  variant="checkbox"
  width=""
>
  <div
    className="pf-c-select pf-m-expanded"
    style={
      Object {
        "width": "",
      }
    }
  >
    <SelectToggle
      ariaLabelToggle="Options menu"
      ariaLabelledBy=" pf-toggle-id-8"
      className=""
      handleTypeaheadKeys={[Function]}
      id="pf-toggle-id-8"
      isActive={false}
      isExpanded={true}
      isFocused={false}
      isHovered={false}
      isPlain={false}
      onClose={[Function]}
      onEnter={[Function]}
      onToggle={[MockFunction]}
      parentRef={
        Object {
          "current": <div
            class="pf-c-select pf-m-expanded"
          >
            <button
              aria-expanded="true"
              aria-labelledby=" pf-toggle-id-8"
              class="pf-c-select__toggle"
              id="pf-toggle-id-8"
              type="button"
            >
              <div
                class="pf-c-select__toggle-wrapper"
              >
                <span
                  class="pf-c-select__toggle-text"
                />
                
              </div>
              <svg
                aria-hidden="true"
                class="pf-c-select__toggle-arrow"
                fill="currentColor"
                height="1em"
                role="img"
                style="vertical-align: -0.125em;"
                viewBox="0 0 320 512"
                width="1em"
              >
                <path
                  d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                  transform=""
                />
              </svg>
            </button>
            <div>
              <div
                class="pf-c-select__menu"
              >
                <form
                  class="pf-c-form"
                  novalidate=""
                >
                  <div
                    class="pf-c-form__group"
                  >
                    <fieldset
                      aria-label=""
                      class="pf-c-form__fieldset"
                    >
                      <label
                        class="pf-c-check pf-c-select__menu-item"
                      >
                        <input
                          class="pf-c-check__input"
                          id="Mr"
                          type="checkbox"
                        />
                        <span
                          class="pf-c-check__label"
                        >
                          Mr
                        </span>
                      </label>
                      <label
                        class="pf-c-check pf-c-select__menu-item"
                      >
                        <input
                          class="pf-c-check__input"
                          id="Mrs"
                          type="checkbox"
                        />
                        <span
                          class="pf-c-check__label"
                        >
                          Mrs
                        </span>
                      </label>
                      <label
                        class="pf-c-check pf-c-select__menu-item"
                      >
                        <input
                          class="pf-c-check__input"
                          id="Ms"
                          type="checkbox"
                        />
                        <span
                          class="pf-c-check__label"
                        >
                          Ms
                        </span>
                      </label>
                      <label
                        class="pf-c-check pf-c-select__menu-item"
                      >
                        <input
                          class="pf-c-check__input"
                          id="Other"
                          type="checkbox"
                        />
                        <span
                          class="pf-c-check__label"
                        >
                          Other
                        </span>
                      </label>
                    </fieldset>
                  </div>
                </form>
              </div>
            </div>
          </div>,
        }
      }
      type="button"
      variant="checkbox"
    >
      <button
        aria-expanded={true}
        aria-haspopup={null}
        aria-labelledby=" pf-toggle-id-8"
        className="pf-c-select__toggle"
        id="pf-toggle-id-8"
        onClick={[Function]}
        onKeyDown={[Function]}
        type="button"
      >
        <div
          className="pf-c-select__toggle-wrapper"
        >
          <span
            className="pf-c-select__toggle-text"
          />
        </div>
        <CaretDownIcon
          className="pf-c-select__toggle-arrow"
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
          title={null}
        >
          <svg
            aria-hidden={true}
            aria-labelledby={null}
            className="pf-c-select__toggle-arrow"
            fill="currentColor"
            height="1em"
            role="img"
            style={
              Object {
                "verticalAlign": "-0.125em",
              }
            }
            viewBox="0 0 320 512"
            width="1em"
          >
            <path
              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
              transform=""
            />
          </svg>
        </CaretDownIcon>
      </button>
    </SelectToggle>
    <SelectMenu
      aria-label=""
      aria-labelledby=""
      checked=""
      className=""
      isExpanded={false}
      isGrouped={false}
      keyHandler={[Function]}
      openedOnEnter={false}
      selected=""
      sendRef={[Function]}
    >
      <FocusTrap
        _createFocusTrap={[Function]}
        active={true}
        focusTrapOptions={
          Object {
            "clickOutsideDeactivates": true,
          }
        }
        paused={false}
        tag="div"
      >
        <div>
          <div
            className="pf-c-select__menu"
          >
            <form
              className="pf-c-form"
              noValidate={true}
            >
              <div
                className="pf-c-form__group"
              >
                <fieldset
                  aria-label=""
                  aria-labelledby={null}
                  className="pf-c-form__fieldset"
                >
                  <SelectOption
                    className=""
                    index={0}
                    isChecked=""
                    isDisabled={false}
                    isFocused={false}
                    isPlaceholder={false}
                    isSelected={false}
                    key=".$0"
                    keyHandler={[Function]}
                    onClick={[Function]}
                    sendRef={[Function]}
                    value="Mr"
                  >
                    <label
                      className="pf-c-check pf-c-select__menu-item"
                      onKeyDown={[Function]}
                    >
                      <input
                        checked={false}
                        className="pf-c-check__input"
                        disabled={false}
                        id="Mr"
                        onChange={[Function]}
                        type="checkbox"
                      />
                      <span
                        className="pf-c-check__label"
                      >
                        Mr
                      </span>
                    </label>
                  </SelectOption>
                  <SelectOption
                    className=""
                    index={1}
                    isChecked=""
                    isDisabled={false}
                    isFocused={false}
                    isPlaceholder={false}
                    isSelected={false}
                    key=".$1"
                    keyHandler={[Function]}
                    onClick={[Function]}
                    sendRef={[Function]}
                    value="Mrs"
                  >
                    <label
                      className="pf-c-check pf-c-select__menu-item"
                      onKeyDown={[Function]}
                    >
                      <input
                        checked={false}
                        className="pf-c-check__input"
                        disabled={false}
                        id="Mrs"
                        onChange={[Function]}
                        type="checkbox"
                      />
                      <span
                        className="pf-c-check__label"
                      >
                        Mrs
                      </span>
                    </label>
                  </SelectOption>
                  <SelectOption
                    className=""
                    index={2}
                    isChecked=""
                    isDisabled={false}
                    isFocused={false}
                    isPlaceholder={false}
                    isSelected={false}
                    key=".$2"
                    keyHandler={[Function]}
                    onClick={[Function]}
                    sendRef={[Function]}
                    value="Ms"
                  >
                    <label
                      className="pf-c-check pf-c-select__menu-item"
                      onKeyDown={[Function]}
                    >
                      <input
                        checked={false}
                        className="pf-c-check__input"
                        disabled={false}
                        id="Ms"
                        onChange={[Function]}
                        type="checkbox"
                      />
                      <span
                        className="pf-c-check__label"
                      >
                        Ms
                      </span>
                    </label>
                  </SelectOption>
                  <SelectOption
                    className=""
                    index={3}
                    isChecked=""
                    isDisabled={false}
                    isFocused={false}
                    isPlaceholder={false}
                    isSelected={false}
                    key=".$3"
                    keyHandler={[Function]}
                    onClick={[Function]}
                    sendRef={[Function]}
                    value="Other"
                  >
                    <label
                      className="pf-c-check pf-c-select__menu-item"
                      onKeyDown={[Function]}
                    >
                      <input
                        checked={false}
                        className="pf-c-check__input"
                        disabled={false}
                        id="Other"
                        onChange={[Function]}
                        type="checkbox"
                      />
                      <span
                        className="pf-c-check__label"
                      >
                        Other
                      </span>
                    </label>
                  </SelectOption>
                </fieldset>
              </div>
            </form>
          </div>
        </div>
      </FocusTrap>
    </SelectMenu>
  </div>
</Select>
`;

exports[`checkbox select renders expanded successfully with custom objects 1`] = `
<Select
  aria-label=""
  ariaLabelClear="Clear all"
  ariaLabelRemove="Remove"
  ariaLabelToggle="Options menu"
  ariaLabelTypeAhead=""
  ariaLabelledBy=""
  className=""
  isExpanded={true}
  isGrouped={false}
  isPlain={false}
  onClear={[Function]}
  onSelect={[MockFunction]}
  onToggle={[MockFunction]}
  placeholderText=""
  selections=""
  toggleId={null}
  variant="checkbox"
  width=""
>
  <div
    className="pf-c-select pf-m-expanded"
    style={
      Object {
        "width": "",
      }
    }
  >
    <SelectToggle
      ariaLabelToggle="Options menu"
      ariaLabelledBy=" pf-toggle-id-10"
      className=""
      handleTypeaheadKeys={[Function]}
      id="pf-toggle-id-10"
      isActive={false}
      isExpanded={true}
      isFocused={false}
      isHovered={false}
      isPlain={false}
      onClose={[Function]}
      onEnter={[Function]}
      onToggle={[MockFunction]}
      parentRef={
        Object {
          "current": <div
            class="pf-c-select pf-m-expanded"
          >
            <button
              aria-expanded="true"
              aria-labelledby=" pf-toggle-id-10"
              class="pf-c-select__toggle"
              id="pf-toggle-id-10"
              type="button"
            >
              <div
                class="pf-c-select__toggle-wrapper"
              >
                <span
                  class="pf-c-select__toggle-text"
                />
                
              </div>
              <svg
                aria-hidden="true"
                class="pf-c-select__toggle-arrow"
                fill="currentColor"
                height="1em"
                role="img"
                style="vertical-align: -0.125em;"
                viewBox="0 0 320 512"
                width="1em"
              >
                <path
                  d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                  transform=""
                />
              </svg>
            </button>
            <div>
              <div
                class="pf-c-select__menu"
              >
                <form
                  class="pf-c-form"
                  novalidate=""
                >
                  <div
                    class="pf-c-form__group"
                  >
                    <fieldset
                      aria-label=""
                      class="pf-c-form__fieldset"
                    >
                      <label
                        class="pf-c-check pf-c-select__menu-item"
                      >
                        <input
                          class="pf-c-check__input"
                          id="Mr: User One"
                          type="checkbox"
                        />
                        <span
                          class="pf-c-check__label"
                        >
                          Mr: User One
                        </span>
                      </label>
                      <label
                        class="pf-c-check pf-c-select__menu-item"
                      >
                        <input
                          class="pf-c-check__input"
                          id="Mrs: New User"
                          type="checkbox"
                        />
                        <span
                          class="pf-c-check__label"
                        >
                          Mrs: New User
                        </span>
                      </label>
                      <label
                        class="pf-c-check pf-c-select__menu-item"
                      >
                        <input
                          class="pf-c-check__input"
                          id="Ms: Test Three"
                          type="checkbox"
                        />
                        <span
                          class="pf-c-check__label"
                        >
                          Ms: Test Three
                        </span>
                      </label>
                    </fieldset>
                  </div>
                </form>
              </div>
            </div>
          </div>,
        }
      }
      type="button"
      variant="checkbox"
    >
      <button
        aria-expanded={true}
        aria-haspopup={null}
        aria-labelledby=" pf-toggle-id-10"
        className="pf-c-select__toggle"
        id="pf-toggle-id-10"
        onClick={[Function]}
        onKeyDown={[Function]}
        type="button"
      >
        <div
          className="pf-c-select__toggle-wrapper"
        >
          <span
            className="pf-c-select__toggle-text"
          />
        </div>
        <CaretDownIcon
          className="pf-c-select__toggle-arrow"
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
          title={null}
        >
          <svg
            aria-hidden={true}
            aria-labelledby={null}
            className="pf-c-select__toggle-arrow"
            fill="currentColor"
            height="1em"
            role="img"
            style={
              Object {
                "verticalAlign": "-0.125em",
              }
            }
            viewBox="0 0 320 512"
            width="1em"
          >
            <path
              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
              transform=""
            />
          </svg>
        </CaretDownIcon>
      </button>
    </SelectToggle>
    <SelectMenu
      aria-label=""
      aria-labelledby=""
      checked=""
      className=""
      isExpanded={false}
      isGrouped={false}
      keyHandler={[Function]}
      openedOnEnter={false}
      selected=""
      sendRef={[Function]}
    >
      <FocusTrap
        _createFocusTrap={[Function]}
        active={true}
        focusTrapOptions={
          Object {
            "clickOutsideDeactivates": true,
          }
        }
        paused={false}
        tag="div"
      >
        <div>
          <div
            className="pf-c-select__menu"
          >
            <form
              className="pf-c-form"
              noValidate={true}
            >
              <div
                className="pf-c-form__group"
              >
                <fieldset
                  aria-label=""
                  aria-labelledby={null}
                  className="pf-c-form__fieldset"
                >
                  <SelectOption
                    className=""
                    index={0}
                    isChecked=""
                    isDisabled={false}
                    isFocused={false}
                    isPlaceholder={false}
                    isSelected={false}
                    key=".$0"
                    keyHandler={[Function]}
                    onClick={[Function]}
                    sendRef={[Function]}
                    value={
                      User {
                        "firstName": "User",
                        "lastName": "One",
                        "title": "Mr",
                        "toString": [Function],
                      }
                    }
                  >
                    <label
                      className="pf-c-check pf-c-select__menu-item"
                      onKeyDown={[Function]}
                    >
                      <input
                        checked={false}
                        className="pf-c-check__input"
                        disabled={false}
                        id="Mr: User One"
                        onChange={[Function]}
                        type="checkbox"
                      />
                      <span
                        className="pf-c-check__label"
                      >
                        Mr: User One
                      </span>
                    </label>
                  </SelectOption>
                  <SelectOption
                    className=""
                    index={1}
                    isChecked=""
                    isDisabled={false}
                    isFocused={false}
                    isPlaceholder={false}
                    isSelected={false}
                    key=".$1"
                    keyHandler={[Function]}
                    onClick={[Function]}
                    sendRef={[Function]}
                    value={
                      User {
                        "firstName": "New",
                        "lastName": "User",
                        "title": "Mrs",
                        "toString": [Function],
                      }
                    }
                  >
                    <label
                      className="pf-c-check pf-c-select__menu-item"
                      onKeyDown={[Function]}
                    >
                      <input
                        checked={false}
                        className="pf-c-check__input"
                        disabled={false}
                        id="Mrs: New User"
                        onChange={[Function]}
                        type="checkbox"
                      />
                      <span
                        className="pf-c-check__label"
                      >
                        Mrs: New User
                      </span>
                    </label>
                  </SelectOption>
                  <SelectOption
                    className=""
                    index={2}
                    isChecked=""
                    isDisabled={false}
                    isFocused={false}
                    isPlaceholder={false}
                    isSelected={false}
                    key=".$2"
                    keyHandler={[Function]}
                    onClick={[Function]}
                    sendRef={[Function]}
                    value={
                      User {
                        "firstName": "Test",
                        "lastName": "Three",
                        "title": "Ms",
                        "toString": [Function],
                      }
                    }
                  >
                    <label
                      className="pf-c-check pf-c-select__menu-item"
                      onKeyDown={[Function]}
                    >
                      <input
                        checked={false}
                        className="pf-c-check__input"
                        disabled={false}
                        id="Ms: Test Three"
                        onChange={[Function]}
                        type="checkbox"
                      />
                      <span
                        className="pf-c-check__label"
                      >
                        Ms: Test Three
                      </span>
                    </label>
                  </SelectOption>
                </fieldset>
              </div>
            </form>
          </div>
        </div>
      </FocusTrap>
    </SelectMenu>
  </div>
</Select>
`;

exports[`select custom select filter filters properly 1`] = `
<Select
  aria-label=""
  ariaLabelClear="Clear all"
  ariaLabelRemove="Remove"
  ariaLabelToggle="Options menu"
  ariaLabelTypeAhead=""
  ariaLabelledBy=""
  className=""
  isExpanded={true}
  isGrouped={false}
  isPlain={false}
  onClear={[Function]}
  onFilter={[Function]}
  onSelect={[MockFunction]}
  onToggle={[MockFunction]}
  placeholderText=""
  selections=""
  toggleId={null}
  variant="typeahead"
  width=""
>
  <div
    className="pf-c-select pf-m-expanded"
    style={
      Object {
        "width": "",
      }
    }
  >
    <SelectToggle
      ariaLabelToggle="Options menu"
      ariaLabelledBy=" pf-toggle-id-4"
      className=""
      handleTypeaheadKeys={[Function]}
      id="pf-toggle-id-4"
      isActive={false}
      isExpanded={true}
      isFocused={false}
      isHovered={false}
      isPlain={false}
      onClose={[Function]}
      onEnter={[Function]}
      onToggle={[MockFunction]}
      parentRef={
        Object {
          "current": <div
            class="pf-c-select pf-m-expanded"
          >
            <div
              class="pf-c-select__toggle pf-m-typeahead"
            >
              <div
                class="pf-c-select__toggle-wrapper"
              >
                <input
                  aria-label=""
                  autocomplete="off"
                  class="pf-c-form-control pf-c-select__toggle-typeahead"
                  id="select-typeahead"
                  placeholder=""
                  type="text"
                  value="r"
                />
              </div>
              
              <button
                aria-expanded="true"
                aria-haspopup="listbox"
                aria-label="Options menu"
                aria-labelledby=" pf-toggle-id-4"
                class="pf-c-button pf-c-select__toggle-button"
                id="pf-toggle-id-4"
              >
                <svg
                  aria-hidden="true"
                  class="pf-c-select__toggle-arrow"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  style="vertical-align: -0.125em;"
                  viewBox="0 0 320 512"
                  width="1em"
                >
                  <path
                    d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                    transform=""
                  />
                </svg>
              </button>
            </div>
            <ul
              aria-label=""
              aria-labelledby=""
              class="pf-c-select__menu"
              role="listbox"
            >
              <li
                role="presentation"
              >
                <button
                  class="pf-c-select__menu-item"
                  id="Mr-0"
                  role="option"
                  type="button"
                >
                  Mr
                </button>
              </li>
              <li
                role="presentation"
              >
                <button
                  class="pf-c-select__menu-item"
                  id="Mrs-1"
                  role="option"
                  type="button"
                >
                  Mrs
                </button>
              </li>
              <li
                role="presentation"
              >
                <button
                  class="pf-c-select__menu-item"
                  id="Other-2"
                  role="option"
                  type="button"
                >
                  Other
                </button>
              </li>
            </ul>
          </div>,
        }
      }
      type="button"
      variant="typeahead"
    >
      <div
        className="pf-c-select__toggle pf-m-typeahead"
        onClick={[Function]}
        onKeyDown={[Function]}
      >
        <div
          className="pf-c-select__toggle-wrapper"
        >
          <input
            aria-activedescendant={null}
            aria-label=""
            autoComplete="off"
            className="pf-c-form-control pf-c-select__toggle-typeahead"
            id="select-typeahead"
            onChange={[Function]}
            onFocus={[Function]}
            placeholder=""
            type="text"
            value="r"
          />
        </div>
        <button
          aria-expanded={true}
          aria-haspopup="listbox"
          aria-label="Options menu"
          aria-labelledby=" pf-toggle-id-4"
          className="pf-c-button pf-c-select__toggle-button"
          id="pf-toggle-id-4"
          onClick={[Function]}
        >
          <CaretDownIcon
            className="pf-c-select__toggle-arrow"
            color="currentColor"
            noVerticalAlign={false}
            size="sm"
            title={null}
          >
            <svg
              aria-hidden={true}
              aria-labelledby={null}
              className="pf-c-select__toggle-arrow"
              fill="currentColor"
              height="1em"
              role="img"
              style={
                Object {
                  "verticalAlign": "-0.125em",
                }
              }
              viewBox="0 0 320 512"
              width="1em"
            >
              <path
                d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                transform=""
              />
            </svg>
          </CaretDownIcon>
        </button>
      </div>
    </SelectToggle>
    <SelectMenu
      aria-label=""
      aria-labelledby=""
      className=""
      isExpanded={false}
      isGrouped={false}
      keyHandler={[Function]}
      openedOnEnter={false}
      selected=""
      sendRef={[Function]}
    >
      <ul
        aria-label=""
        aria-labelledby=""
        className="pf-c-select__menu"
        role="listbox"
      >
        <SelectOption
          className=""
          id="Mr-0"
          index={0}
          isChecked={false}
          isDisabled={false}
          isFocused={null}
          isPlaceholder={false}
          isSelected={false}
          key=".$0"
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          value="Mr"
        >
          <li
            role="presentation"
          >
            <button
              aria-selected={null}
              className="pf-c-select__menu-item"
              id="Mr-0"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="option"
              type="button"
            >
              Mr
            </button>
          </li>
        </SelectOption>
        <SelectOption
          className=""
          id="Mrs-1"
          index={1}
          isChecked={false}
          isDisabled={false}
          isFocused={null}
          isPlaceholder={false}
          isSelected={false}
          key=".$1"
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          value="Mrs"
        >
          <li
            role="presentation"
          >
            <button
              aria-selected={null}
              className="pf-c-select__menu-item"
              id="Mrs-1"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="option"
              type="button"
            >
              Mrs
            </button>
          </li>
        </SelectOption>
        <SelectOption
          className=""
          id="Other-2"
          index={2}
          isChecked={false}
          isDisabled={false}
          isFocused={null}
          isPlaceholder={false}
          isSelected={false}
          key=".$3"
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          value="Other"
        >
          <li
            role="presentation"
          >
            <button
              aria-selected={null}
              className="pf-c-select__menu-item"
              id="Other-2"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="option"
              type="button"
            >
              Other
            </button>
          </li>
        </SelectOption>
      </ul>
    </SelectMenu>
  </div>
</Select>
`;

exports[`select renders select groups successfully 1`] = `
<Select
  aria-label=""
  ariaLabelClear="Clear all"
  ariaLabelRemove="Remove"
  ariaLabelToggle="Options menu"
  ariaLabelTypeAhead=""
  ariaLabelledBy=""
  className=""
  isExpanded={true}
  isGrouped={true}
  isPlain={false}
  onClear={[Function]}
  onSelect={[MockFunction]}
  onToggle={[MockFunction]}
  placeholderText=""
  selections=""
  toggleId={null}
  variant="single"
  width=""
>
  <div
    className="pf-c-select pf-m-expanded"
    style={
      Object {
        "width": "",
      }
    }
  >
    <SelectToggle
      ariaLabelToggle="Options menu"
      ariaLabelledBy=" pf-toggle-id-5"
      className=""
      handleTypeaheadKeys={[Function]}
      id="pf-toggle-id-5"
      isActive={false}
      isExpanded={true}
      isFocused={false}
      isHovered={false}
      isPlain={false}
      onClose={[Function]}
      onEnter={[Function]}
      onToggle={[MockFunction]}
      parentRef={
        Object {
          "current": <div
            class="pf-c-select pf-m-expanded"
          >
            <button
              aria-expanded="true"
              aria-haspopup="listbox"
              aria-labelledby=" pf-toggle-id-5"
              class="pf-c-select__toggle"
              id="pf-toggle-id-5"
              type="button"
            >
              <div
                class="pf-c-select__toggle-wrapper"
              >
                <span
                  class="pf-c-select__toggle-text"
                />
              </div>
              <svg
                aria-hidden="true"
                class="pf-c-select__toggle-arrow"
                fill="currentColor"
                height="1em"
                role="img"
                style="vertical-align: -0.125em;"
                viewBox="0 0 320 512"
                width="1em"
              >
                <path
                  d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                  transform=""
                />
              </svg>
            </button>
            <ul
              aria-label=""
              aria-labelledby=""
              class="pf-c-select__menu"
              role="listbox"
            >
              <div
                class="pf-c-select__menu-group"
                id="-0"
                index="0"
              >
                <div
                  aria-hidden="true"
                  class="pf-c-select__menu-group-title"
                  id=""
                >
                  group 1
                </div>
                <li
                  role="presentation"
                >
                  <button
                    class="pf-c-select__menu-item"
                    role="option"
                    type="button"
                  >
                    Mr
                  </button>
                </li>
                <li
                  role="presentation"
                >
                  <button
                    class="pf-c-select__menu-item"
                    role="option"
                    type="button"
                  >
                    Mrs
                  </button>
                </li>
                <li
                  role="presentation"
                >
                  <button
                    class="pf-c-select__menu-item"
                    role="option"
                    type="button"
                  >
                    Ms
                  </button>
                </li>
                <li
                  role="presentation"
                >
                  <button
                    class="pf-c-select__menu-item"
                    role="option"
                    type="button"
                  >
                    Other
                  </button>
                </li>
              </div>
              <div
                class="pf-c-select__menu-group"
                id="-1"
                index="1"
              >
                <div
                  aria-hidden="true"
                  class="pf-c-select__menu-group-title"
                  id=""
                >
                  group 2
                </div>
                <li
                  role="presentation"
                >
                  <button
                    class="pf-c-select__menu-item"
                    role="option"
                    type="button"
                  >
                    Mr
                  </button>
                </li>
                <li
                  role="presentation"
                >
                  <button
                    class="pf-c-select__menu-item"
                    role="option"
                    type="button"
                  >
                    Mrs
                  </button>
                </li>
                <li
                  role="presentation"
                >
                  <button
                    class="pf-c-select__menu-item"
                    role="option"
                    type="button"
                  >
                    Ms
                  </button>
                </li>
                <li
                  role="presentation"
                >
                  <button
                    class="pf-c-select__menu-item"
                    role="option"
                    type="button"
                  >
                    Other
                  </button>
                </li>
              </div>
            </ul>
          </div>,
        }
      }
      type="button"
      variant="single"
    >
      <button
        aria-expanded={true}
        aria-haspopup="listbox"
        aria-labelledby=" pf-toggle-id-5"
        className="pf-c-select__toggle"
        id="pf-toggle-id-5"
        onClick={[Function]}
        onKeyDown={[Function]}
        type="button"
      >
        <div
          className="pf-c-select__toggle-wrapper"
        >
          <span
            className="pf-c-select__toggle-text"
          />
        </div>
        <CaretDownIcon
          className="pf-c-select__toggle-arrow"
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
          title={null}
        >
          <svg
            aria-hidden={true}
            aria-labelledby={null}
            className="pf-c-select__toggle-arrow"
            fill="currentColor"
            height="1em"
            role="img"
            style={
              Object {
                "verticalAlign": "-0.125em",
              }
            }
            viewBox="0 0 320 512"
            width="1em"
          >
            <path
              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
              transform=""
            />
          </svg>
        </CaretDownIcon>
      </button>
    </SelectToggle>
    <SelectMenu
      aria-label=""
      aria-labelledby=""
      className=""
      isExpanded={false}
      isGrouped={false}
      keyHandler={[Function]}
      openedOnEnter={false}
      selected=""
      sendRef={[Function]}
    >
      <ul
        aria-label=""
        aria-labelledby=""
        className="pf-c-select__menu"
        role="listbox"
      >
        <Component
          id="-0"
          index={0}
          isSelected={false}
          key=".0"
          keyHandler={[Function]}
          label="group 1"
          sendRef={[Function]}
        >
          <div
            className="pf-c-select__menu-group"
            id="-0"
            index={0}
            isSelected={false}
            keyHandler={[Function]}
            sendRef={[Function]}
          >
            <div
              aria-hidden={true}
              className="pf-c-select__menu-group-title"
              id=""
            >
              group 1
            </div>
            <SelectOption
              className=""
              index={0}
              isChecked={false}
              isDisabled={false}
              isFocused={false}
              isPlaceholder={false}
              isSelected={false}
              key="0"
              keyHandler={[Function]}
              onClick={[Function]}
              sendRef={[Function]}
              value="Mr"
            >
              <li
                role="presentation"
              >
                <button
                  aria-selected={null}
                  className="pf-c-select__menu-item"
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  role="option"
                  type="button"
                >
                  Mr
                </button>
              </li>
            </SelectOption>
            <SelectOption
              className=""
              index={0}
              isChecked={false}
              isDisabled={false}
              isFocused={false}
              isPlaceholder={false}
              isSelected={false}
              key="1"
              keyHandler={[Function]}
              onClick={[Function]}
              sendRef={[Function]}
              value="Mrs"
            >
              <li
                role="presentation"
              >
                <button
                  aria-selected={null}
                  className="pf-c-select__menu-item"
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  role="option"
                  type="button"
                >
                  Mrs
                </button>
              </li>
            </SelectOption>
            <SelectOption
              className=""
              index={0}
              isChecked={false}
              isDisabled={false}
              isFocused={false}
              isPlaceholder={false}
              isSelected={false}
              key="2"
              keyHandler={[Function]}
              onClick={[Function]}
              sendRef={[Function]}
              value="Ms"
            >
              <li
                role="presentation"
              >
                <button
                  aria-selected={null}
                  className="pf-c-select__menu-item"
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  role="option"
                  type="button"
                >
                  Ms
                </button>
              </li>
            </SelectOption>
            <SelectOption
              className=""
              index={0}
              isChecked={false}
              isDisabled={false}
              isFocused={false}
              isPlaceholder={false}
              isSelected={false}
              key="3"
              keyHandler={[Function]}
              onClick={[Function]}
              sendRef={[Function]}
              value="Other"
            >
              <li
                role="presentation"
              >
                <button
                  aria-selected={null}
                  className="pf-c-select__menu-item"
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  role="option"
                  type="button"
                >
                  Other
                </button>
              </li>
            </SelectOption>
          </div>
        </Component>
        <Component
          id="-1"
          index={1}
          isSelected={false}
          key=".1"
          keyHandler={[Function]}
          label="group 2"
          sendRef={[Function]}
        >
          <div
            className="pf-c-select__menu-group"
            id="-1"
            index={1}
            isSelected={false}
            keyHandler={[Function]}
            sendRef={[Function]}
          >
            <div
              aria-hidden={true}
              className="pf-c-select__menu-group-title"
              id=""
            >
              group 2
            </div>
            <SelectOption
              className=""
              index={0}
              isChecked={false}
              isDisabled={false}
              isFocused={false}
              isPlaceholder={false}
              isSelected={false}
              key="0"
              keyHandler={[Function]}
              onClick={[Function]}
              sendRef={[Function]}
              value="Mr"
            >
              <li
                role="presentation"
              >
                <button
                  aria-selected={null}
                  className="pf-c-select__menu-item"
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  role="option"
                  type="button"
                >
                  Mr
                </button>
              </li>
            </SelectOption>
            <SelectOption
              className=""
              index={0}
              isChecked={false}
              isDisabled={false}
              isFocused={false}
              isPlaceholder={false}
              isSelected={false}
              key="1"
              keyHandler={[Function]}
              onClick={[Function]}
              sendRef={[Function]}
              value="Mrs"
            >
              <li
                role="presentation"
              >
                <button
                  aria-selected={null}
                  className="pf-c-select__menu-item"
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  role="option"
                  type="button"
                >
                  Mrs
                </button>
              </li>
            </SelectOption>
            <SelectOption
              className=""
              index={0}
              isChecked={false}
              isDisabled={false}
              isFocused={false}
              isPlaceholder={false}
              isSelected={false}
              key="2"
              keyHandler={[Function]}
              onClick={[Function]}
              sendRef={[Function]}
              value="Ms"
            >
              <li
                role="presentation"
              >
                <button
                  aria-selected={null}
                  className="pf-c-select__menu-item"
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  role="option"
                  type="button"
                >
                  Ms
                </button>
              </li>
            </SelectOption>
            <SelectOption
              className=""
              index={0}
              isChecked={false}
              isDisabled={false}
              isFocused={false}
              isPlaceholder={false}
              isSelected={false}
              key="3"
              keyHandler={[Function]}
              onClick={[Function]}
              sendRef={[Function]}
              value="Other"
            >
              <li
                role="presentation"
              >
                <button
                  aria-selected={null}
                  className="pf-c-select__menu-item"
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  role="option"
                  type="button"
                >
                  Other
                </button>
              </li>
            </SelectOption>
          </div>
        </Component>
      </ul>
    </SelectMenu>
  </div>
</Select>
`;

exports[`select single select renders closed successfully 1`] = `
<Select
  aria-label=""
  ariaLabelClear="Clear all"
  ariaLabelRemove="Remove"
  ariaLabelToggle="Options menu"
  ariaLabelTypeAhead=""
  ariaLabelledBy=""
  className=""
  isExpanded={false}
  isGrouped={false}
  isPlain={false}
  onClear={[Function]}
  onSelect={[MockFunction]}
  onToggle={[MockFunction]}
  placeholderText=""
  selections=""
  toggleId={null}
  variant="single"
  width=""
>
  <div
    className="pf-c-select"
    style={
      Object {
        "width": "",
      }
    }
  >
    <SelectToggle
      ariaLabelToggle="Options menu"
      ariaLabelledBy=" pf-toggle-id-0"
      className=""
      handleTypeaheadKeys={[Function]}
      id="pf-toggle-id-0"
      isActive={false}
      isExpanded={false}
      isFocused={false}
      isHovered={false}
      isPlain={false}
      onClose={[Function]}
      onEnter={[Function]}
      onToggle={[MockFunction]}
      parentRef={
        Object {
          "current": <div
            class="pf-c-select"
          >
            <button
              aria-expanded="false"
              aria-haspopup="listbox"
              aria-labelledby=" pf-toggle-id-0"
              class="pf-c-select__toggle"
              id="pf-toggle-id-0"
              type="button"
            >
              <div
                class="pf-c-select__toggle-wrapper"
              >
                <span
                  class="pf-c-select__toggle-text"
                >
                  Mr
                </span>
              </div>
              <svg
                aria-hidden="true"
                class="pf-c-select__toggle-arrow"
                fill="currentColor"
                height="1em"
                role="img"
                style="vertical-align: -0.125em;"
                viewBox="0 0 320 512"
                width="1em"
              >
                <path
                  d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                  transform=""
                />
              </svg>
            </button>
          </div>,
        }
      }
      type="button"
      variant="single"
    >
      <button
        aria-expanded={false}
        aria-haspopup="listbox"
        aria-labelledby=" pf-toggle-id-0"
        className="pf-c-select__toggle"
        id="pf-toggle-id-0"
        onClick={[Function]}
        onKeyDown={[Function]}
        type="button"
      >
        <div
          className="pf-c-select__toggle-wrapper"
        >
          <span
            className="pf-c-select__toggle-text"
          >
            Mr
          </span>
        </div>
        <CaretDownIcon
          className="pf-c-select__toggle-arrow"
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
          title={null}
        >
          <svg
            aria-hidden={true}
            aria-labelledby={null}
            className="pf-c-select__toggle-arrow"
            fill="currentColor"
            height="1em"
            role="img"
            style={
              Object {
                "verticalAlign": "-0.125em",
              }
            }
            viewBox="0 0 320 512"
            width="1em"
          >
            <path
              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
              transform=""
            />
          </svg>
        </CaretDownIcon>
      </button>
    </SelectToggle>
  </div>
</Select>
`;

exports[`select single select renders expanded successfully 1`] = `
<Select
  aria-label=""
  ariaLabelClear="Clear all"
  ariaLabelRemove="Remove"
  ariaLabelToggle="Options menu"
  ariaLabelTypeAhead=""
  ariaLabelledBy=""
  className=""
  isExpanded={true}
  isGrouped={false}
  isPlain={false}
  onClear={[Function]}
  onSelect={[MockFunction]}
  onToggle={[MockFunction]}
  placeholderText=""
  selections=""
  toggleId={null}
  variant="single"
  width=""
>
  <div
    className="pf-c-select pf-m-expanded"
    style={
      Object {
        "width": "",
      }
    }
  >
    <SelectToggle
      ariaLabelToggle="Options menu"
      ariaLabelledBy=" pf-toggle-id-1"
      className=""
      handleTypeaheadKeys={[Function]}
      id="pf-toggle-id-1"
      isActive={false}
      isExpanded={true}
      isFocused={false}
      isHovered={false}
      isPlain={false}
      onClose={[Function]}
      onEnter={[Function]}
      onToggle={[MockFunction]}
      parentRef={
        Object {
          "current": <div
            class="pf-c-select pf-m-expanded"
          >
            <button
              aria-expanded="true"
              aria-haspopup="listbox"
              aria-labelledby=" pf-toggle-id-1"
              class="pf-c-select__toggle"
              id="pf-toggle-id-1"
              type="button"
            >
              <div
                class="pf-c-select__toggle-wrapper"
              >
                <span
                  class="pf-c-select__toggle-text"
                >
                  Mr
                </span>
              </div>
              <svg
                aria-hidden="true"
                class="pf-c-select__toggle-arrow"
                fill="currentColor"
                height="1em"
                role="img"
                style="vertical-align: -0.125em;"
                viewBox="0 0 320 512"
                width="1em"
              >
                <path
                  d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                  transform=""
                />
              </svg>
            </button>
            <ul
              aria-label=""
              aria-labelledby=""
              class="pf-c-select__menu"
              role="listbox"
            >
              <li
                role="presentation"
              >
                <button
                  class="pf-c-select__menu-item"
                  id="Mr-0"
                  role="option"
                  type="button"
                >
                  Mr
                </button>
              </li>
              <li
                role="presentation"
              >
                <button
                  class="pf-c-select__menu-item"
                  id="Mrs-1"
                  role="option"
                  type="button"
                >
                  Mrs
                </button>
              </li>
              <li
                role="presentation"
              >
                <button
                  class="pf-c-select__menu-item"
                  id="Ms-2"
                  role="option"
                  type="button"
                >
                  Ms
                </button>
              </li>
              <li
                role="presentation"
              >
                <button
                  class="pf-c-select__menu-item"
                  id="Other-3"
                  role="option"
                  type="button"
                >
                  Other
                </button>
              </li>
            </ul>
          </div>,
        }
      }
      type="button"
      variant="single"
    >
      <button
        aria-expanded={true}
        aria-haspopup="listbox"
        aria-labelledby=" pf-toggle-id-1"
        className="pf-c-select__toggle"
        id="pf-toggle-id-1"
        onClick={[Function]}
        onKeyDown={[Function]}
        type="button"
      >
        <div
          className="pf-c-select__toggle-wrapper"
        >
          <span
            className="pf-c-select__toggle-text"
          >
            Mr
          </span>
        </div>
        <CaretDownIcon
          className="pf-c-select__toggle-arrow"
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
          title={null}
        >
          <svg
            aria-hidden={true}
            aria-labelledby={null}
            className="pf-c-select__toggle-arrow"
            fill="currentColor"
            height="1em"
            role="img"
            style={
              Object {
                "verticalAlign": "-0.125em",
              }
            }
            viewBox="0 0 320 512"
            width="1em"
          >
            <path
              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
              transform=""
            />
          </svg>
        </CaretDownIcon>
      </button>
    </SelectToggle>
    <SelectMenu
      aria-label=""
      aria-labelledby=""
      className=""
      isExpanded={false}
      isGrouped={false}
      keyHandler={[Function]}
      openedOnEnter={false}
      selected=""
      sendRef={[Function]}
    >
      <ul
        aria-label=""
        aria-labelledby=""
        className="pf-c-select__menu"
        role="listbox"
      >
        <SelectOption
          className=""
          id="Mr-0"
          index={0}
          isChecked={false}
          isDisabled={false}
          isFocused={false}
          isPlaceholder={false}
          isSelected={false}
          key=".$0"
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          value="Mr"
        >
          <li
            role="presentation"
          >
            <button
              aria-selected={null}
              className="pf-c-select__menu-item"
              id="Mr-0"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="option"
              type="button"
            >
              Mr
            </button>
          </li>
        </SelectOption>
        <SelectOption
          className=""
          id="Mrs-1"
          index={1}
          isChecked={false}
          isDisabled={false}
          isFocused={false}
          isPlaceholder={false}
          isSelected={false}
          key=".$1"
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          value="Mrs"
        >
          <li
            role="presentation"
          >
            <button
              aria-selected={null}
              className="pf-c-select__menu-item"
              id="Mrs-1"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="option"
              type="button"
            >
              Mrs
            </button>
          </li>
        </SelectOption>
        <SelectOption
          className=""
          id="Ms-2"
          index={2}
          isChecked={false}
          isDisabled={false}
          isFocused={false}
          isPlaceholder={false}
          isSelected={false}
          key=".$2"
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          value="Ms"
        >
          <li
            role="presentation"
          >
            <button
              aria-selected={null}
              className="pf-c-select__menu-item"
              id="Ms-2"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="option"
              type="button"
            >
              Ms
            </button>
          </li>
        </SelectOption>
        <SelectOption
          className=""
          id="Other-3"
          index={3}
          isChecked={false}
          isDisabled={false}
          isFocused={false}
          isPlaceholder={false}
          isSelected={false}
          key=".$3"
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          value="Other"
        >
          <li
            role="presentation"
          >
            <button
              aria-selected={null}
              className="pf-c-select__menu-item"
              id="Other-3"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="option"
              type="button"
            >
              Other
            </button>
          </li>
        </SelectOption>
      </ul>
    </SelectMenu>
  </div>
</Select>
`;

exports[`select single select renders expanded successfully with custom objects 1`] = `
<Select
  aria-label=""
  ariaLabelClear="Clear all"
  ariaLabelRemove="Remove"
  ariaLabelToggle="Options menu"
  ariaLabelTypeAhead=""
  ariaLabelledBy=""
  className=""
  isExpanded={true}
  isGrouped={false}
  isPlain={false}
  onClear={[Function]}
  onSelect={[MockFunction]}
  onToggle={[MockFunction]}
  placeholderText=""
  selections=""
  toggleId={null}
  variant="single"
  width=""
>
  <div
    className="pf-c-select pf-m-expanded"
    style={
      Object {
        "width": "",
      }
    }
  >
    <SelectToggle
      ariaLabelToggle="Options menu"
      ariaLabelledBy=" pf-toggle-id-2"
      className=""
      handleTypeaheadKeys={[Function]}
      id="pf-toggle-id-2"
      isActive={false}
      isExpanded={true}
      isFocused={false}
      isHovered={false}
      isPlain={false}
      onClose={[Function]}
      onEnter={[Function]}
      onToggle={[MockFunction]}
      parentRef={
        Object {
          "current": <div
            class="pf-c-select pf-m-expanded"
          >
            <button
              aria-expanded="true"
              aria-haspopup="listbox"
              aria-labelledby=" pf-toggle-id-2"
              class="pf-c-select__toggle"
              id="pf-toggle-id-2"
              type="button"
            >
              <div
                class="pf-c-select__toggle-wrapper"
              >
                <span
                  class="pf-c-select__toggle-text"
                >
                  Mr: User One
                </span>
              </div>
              <svg
                aria-hidden="true"
                class="pf-c-select__toggle-arrow"
                fill="currentColor"
                height="1em"
                role="img"
                style="vertical-align: -0.125em;"
                viewBox="0 0 320 512"
                width="1em"
              >
                <path
                  d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                  transform=""
                />
              </svg>
            </button>
            <ul
              aria-label=""
              aria-labelledby=""
              class="pf-c-select__menu"
              role="listbox"
            >
              <li
                role="presentation"
              >
                <button
                  class="pf-c-select__menu-item"
                  id="Mr: User One-0"
                  role="option"
                  type="button"
                >
                  Mr: User One
                </button>
              </li>
              <li
                role="presentation"
              >
                <button
                  class="pf-c-select__menu-item"
                  id="Mrs: New User-1"
                  role="option"
                  type="button"
                >
                  Mrs: New User
                </button>
              </li>
              <li
                role="presentation"
              >
                <button
                  class="pf-c-select__menu-item"
                  id="Ms: Test Three-2"
                  role="option"
                  type="button"
                >
                  Ms: Test Three
                </button>
              </li>
            </ul>
          </div>,
        }
      }
      type="button"
      variant="single"
    >
      <button
        aria-expanded={true}
        aria-haspopup="listbox"
        aria-labelledby=" pf-toggle-id-2"
        className="pf-c-select__toggle"
        id="pf-toggle-id-2"
        onClick={[Function]}
        onKeyDown={[Function]}
        type="button"
      >
        <div
          className="pf-c-select__toggle-wrapper"
        >
          <span
            className="pf-c-select__toggle-text"
          >
            Mr: User One
          </span>
        </div>
        <CaretDownIcon
          className="pf-c-select__toggle-arrow"
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
          title={null}
        >
          <svg
            aria-hidden={true}
            aria-labelledby={null}
            className="pf-c-select__toggle-arrow"
            fill="currentColor"
            height="1em"
            role="img"
            style={
              Object {
                "verticalAlign": "-0.125em",
              }
            }
            viewBox="0 0 320 512"
            width="1em"
          >
            <path
              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
              transform=""
            />
          </svg>
        </CaretDownIcon>
      </button>
    </SelectToggle>
    <SelectMenu
      aria-label=""
      aria-labelledby=""
      className=""
      isExpanded={false}
      isGrouped={false}
      keyHandler={[Function]}
      openedOnEnter={false}
      selected=""
      sendRef={[Function]}
    >
      <ul
        aria-label=""
        aria-labelledby=""
        className="pf-c-select__menu"
        role="listbox"
      >
        <SelectOption
          className=""
          id="Mr: User One-0"
          index={0}
          isChecked={false}
          isDisabled={false}
          isFocused={false}
          isPlaceholder={false}
          isSelected={false}
          key=".$0"
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          value={
            User {
              "firstName": "User",
              "lastName": "One",
              "title": "Mr",
              "toString": [Function],
            }
          }
        >
          <li
            role="presentation"
          >
            <button
              aria-selected={null}
              className="pf-c-select__menu-item"
              id="Mr: User One-0"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="option"
              type="button"
            >
              Mr: User One
            </button>
          </li>
        </SelectOption>
        <SelectOption
          className=""
          id="Mrs: New User-1"
          index={1}
          isChecked={false}
          isDisabled={false}
          isFocused={false}
          isPlaceholder={false}
          isSelected={false}
          key=".$1"
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          value={
            User {
              "firstName": "New",
              "lastName": "User",
              "title": "Mrs",
              "toString": [Function],
            }
          }
        >
          <li
            role="presentation"
          >
            <button
              aria-selected={null}
              className="pf-c-select__menu-item"
              id="Mrs: New User-1"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="option"
              type="button"
            >
              Mrs: New User
            </button>
          </li>
        </SelectOption>
        <SelectOption
          className=""
          id="Ms: Test Three-2"
          index={2}
          isChecked={false}
          isDisabled={false}
          isFocused={false}
          isPlaceholder={false}
          isSelected={false}
          key=".$2"
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          value={
            User {
              "firstName": "Test",
              "lastName": "Three",
              "title": "Ms",
              "toString": [Function],
            }
          }
        >
          <li
            role="presentation"
          >
            <button
              aria-selected={null}
              className="pf-c-select__menu-item"
              id="Ms: Test Three-2"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="option"
              type="button"
            >
              Ms: Test Three
            </button>
          </li>
        </SelectOption>
      </ul>
    </SelectMenu>
  </div>
</Select>
`;

exports[`typeahead multi select renders closed successfully 1`] = `
<Select
  aria-label=""
  ariaLabelClear="Clear all"
  ariaLabelRemove="Remove"
  ariaLabelToggle="Options menu"
  ariaLabelTypeAhead=""
  ariaLabelledBy=""
  className=""
  isExpanded={false}
  isGrouped={false}
  isPlain={false}
  onClear={[Function]}
  onSelect={[MockFunction]}
  onToggle={[MockFunction]}
  placeholderText=""
  selections=""
  toggleId={null}
  variant="typeaheadmulti"
  width=""
>
  <div
    className="pf-c-select"
    style={
      Object {
        "width": "",
      }
    }
  >
    <SelectToggle
      ariaLabelToggle="Options menu"
      ariaLabelledBy=" pf-toggle-id-18"
      className=""
      handleTypeaheadKeys={[Function]}
      id="pf-toggle-id-18"
      isActive={false}
      isExpanded={false}
      isFocused={false}
      isHovered={false}
      isPlain={false}
      onClose={[Function]}
      onEnter={[Function]}
      onToggle={[MockFunction]}
      parentRef={
        Object {
          "current": <div
            class="pf-c-select"
          >
            <div
              class="pf-c-select__toggle pf-m-typeahead"
            >
              <div
                class="pf-c-select__toggle-wrapper"
              >
                
                <input
                  aria-label=""
                  autocomplete="off"
                  class="pf-c-form-control pf-c-select__toggle-typeahead"
                  id="select-multi-typeahead-typeahead"
                  placeholder=""
                  type="text"
                  value=""
                />
              </div>
              
              <button
                aria-expanded="false"
                aria-haspopup="listbox"
                aria-label="Options menu"
                aria-labelledby=" pf-toggle-id-18"
                class="pf-c-button pf-c-select__toggle-button"
                id="pf-toggle-id-18"
              >
                <svg
                  aria-hidden="true"
                  class="pf-c-select__toggle-arrow"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  style="vertical-align: -0.125em;"
                  viewBox="0 0 320 512"
                  width="1em"
                >
                  <path
                    d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                    transform=""
                  />
                </svg>
              </button>
            </div>
          </div>,
        }
      }
      type="button"
      variant="typeaheadmulti"
    >
      <div
        className="pf-c-select__toggle pf-m-typeahead"
        onClick={[Function]}
        onKeyDown={[Function]}
      >
        <div
          className="pf-c-select__toggle-wrapper"
        >
          <input
            aria-activedescendant={null}
            aria-label=""
            autoComplete="off"
            className="pf-c-form-control pf-c-select__toggle-typeahead"
            id="select-multi-typeahead-typeahead"
            onChange={[Function]}
            onFocus={[Function]}
            placeholder=""
            type="text"
            value=""
          />
        </div>
        <button
          aria-expanded={false}
          aria-haspopup="listbox"
          aria-label="Options menu"
          aria-labelledby=" pf-toggle-id-18"
          className="pf-c-button pf-c-select__toggle-button"
          id="pf-toggle-id-18"
          onClick={[Function]}
        >
          <CaretDownIcon
            className="pf-c-select__toggle-arrow"
            color="currentColor"
            noVerticalAlign={false}
            size="sm"
            title={null}
          >
            <svg
              aria-hidden={true}
              aria-labelledby={null}
              className="pf-c-select__toggle-arrow"
              fill="currentColor"
              height="1em"
              role="img"
              style={
                Object {
                  "verticalAlign": "-0.125em",
                }
              }
              viewBox="0 0 320 512"
              width="1em"
            >
              <path
                d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                transform=""
              />
            </svg>
          </CaretDownIcon>
        </button>
      </div>
    </SelectToggle>
  </div>
</Select>
`;

exports[`typeahead multi select renders expanded successfully 1`] = `
<Select
  aria-label=""
  ariaLabelClear="Clear all"
  ariaLabelRemove="Remove"
  ariaLabelToggle="Options menu"
  ariaLabelTypeAhead=""
  ariaLabelledBy=""
  className=""
  isExpanded={true}
  isGrouped={false}
  isPlain={false}
  onClear={[Function]}
  onSelect={[MockFunction]}
  onToggle={[MockFunction]}
  placeholderText=""
  selections=""
  toggleId={null}
  variant="typeaheadmulti"
  width=""
>
  <div
    className="pf-c-select pf-m-expanded"
    style={
      Object {
        "width": "",
      }
    }
  >
    <SelectToggle
      ariaLabelToggle="Options menu"
      ariaLabelledBy=" pf-toggle-id-19"
      className=""
      handleTypeaheadKeys={[Function]}
      id="pf-toggle-id-19"
      isActive={false}
      isExpanded={true}
      isFocused={false}
      isHovered={false}
      isPlain={false}
      onClose={[Function]}
      onEnter={[Function]}
      onToggle={[MockFunction]}
      parentRef={
        Object {
          "current": <div
            class="pf-c-select pf-m-expanded"
          >
            <div
              class="pf-c-select__toggle pf-m-typeahead"
            >
              <div
                class="pf-c-select__toggle-wrapper"
              >
                
                <input
                  aria-label=""
                  autocomplete="off"
                  class="pf-c-form-control pf-c-select__toggle-typeahead"
                  id="select-multi-typeahead-typeahead"
                  placeholder=""
                  type="text"
                  value=""
                />
              </div>
              
              <button
                aria-expanded="true"
                aria-haspopup="listbox"
                aria-label="Options menu"
                aria-labelledby=" pf-toggle-id-19"
                class="pf-c-button pf-c-select__toggle-button"
                id="pf-toggle-id-19"
              >
                <svg
                  aria-hidden="true"
                  class="pf-c-select__toggle-arrow"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  style="vertical-align: -0.125em;"
                  viewBox="0 0 320 512"
                  width="1em"
                >
                  <path
                    d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                    transform=""
                  />
                </svg>
              </button>
            </div>
            <ul
              aria-label=""
              aria-labelledby=""
              class="pf-c-select__menu"
              role="listbox"
            >
              <li
                role="presentation"
              >
                <button
                  class="pf-c-select__menu-item"
                  id="Mr-0"
                  role="option"
                  type="button"
                >
                  Mr
                </button>
              </li>
              <li
                role="presentation"
              >
                <button
                  class="pf-c-select__menu-item"
                  id="Mrs-1"
                  role="option"
                  type="button"
                >
                  Mrs
                </button>
              </li>
              <li
                role="presentation"
              >
                <button
                  class="pf-c-select__menu-item"
                  id="Ms-2"
                  role="option"
                  type="button"
                >
                  Ms
                </button>
              </li>
              <li
                role="presentation"
              >
                <button
                  class="pf-c-select__menu-item"
                  id="Other-3"
                  role="option"
                  type="button"
                >
                  Other
                </button>
              </li>
            </ul>
          </div>,
        }
      }
      type="button"
      variant="typeaheadmulti"
    >
      <div
        className="pf-c-select__toggle pf-m-typeahead"
        onClick={[Function]}
        onKeyDown={[Function]}
      >
        <div
          className="pf-c-select__toggle-wrapper"
        >
          <input
            aria-activedescendant={null}
            aria-label=""
            autoComplete="off"
            className="pf-c-form-control pf-c-select__toggle-typeahead"
            id="select-multi-typeahead-typeahead"
            onChange={[Function]}
            onFocus={[Function]}
            placeholder=""
            type="text"
            value=""
          />
        </div>
        <button
          aria-expanded={true}
          aria-haspopup="listbox"
          aria-label="Options menu"
          aria-labelledby=" pf-toggle-id-19"
          className="pf-c-button pf-c-select__toggle-button"
          id="pf-toggle-id-19"
          onClick={[Function]}
        >
          <CaretDownIcon
            className="pf-c-select__toggle-arrow"
            color="currentColor"
            noVerticalAlign={false}
            size="sm"
            title={null}
          >
            <svg
              aria-hidden={true}
              aria-labelledby={null}
              className="pf-c-select__toggle-arrow"
              fill="currentColor"
              height="1em"
              role="img"
              style={
                Object {
                  "verticalAlign": "-0.125em",
                }
              }
              viewBox="0 0 320 512"
              width="1em"
            >
              <path
                d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                transform=""
              />
            </svg>
          </CaretDownIcon>
        </button>
      </div>
    </SelectToggle>
    <SelectMenu
      aria-label=""
      aria-labelledby=""
      className=""
      isExpanded={false}
      isGrouped={false}
      keyHandler={[Function]}
      openedOnEnter={false}
      selected=""
      sendRef={[Function]}
    >
      <ul
        aria-label=""
        aria-labelledby=""
        className="pf-c-select__menu"
        role="listbox"
      >
        <SelectOption
          className=""
          id="Mr-0"
          index={0}
          isChecked={false}
          isDisabled={false}
          isFocused={null}
          isPlaceholder={false}
          isSelected={false}
          key=".$.$0"
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          value="Mr"
        >
          <li
            role="presentation"
          >
            <button
              aria-selected={null}
              className="pf-c-select__menu-item"
              id="Mr-0"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="option"
              type="button"
            >
              Mr
            </button>
          </li>
        </SelectOption>
        <SelectOption
          className=""
          id="Mrs-1"
          index={1}
          isChecked={false}
          isDisabled={false}
          isFocused={null}
          isPlaceholder={false}
          isSelected={false}
          key=".$.$1"
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          value="Mrs"
        >
          <li
            role="presentation"
          >
            <button
              aria-selected={null}
              className="pf-c-select__menu-item"
              id="Mrs-1"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="option"
              type="button"
            >
              Mrs
            </button>
          </li>
        </SelectOption>
        <SelectOption
          className=""
          id="Ms-2"
          index={2}
          isChecked={false}
          isDisabled={false}
          isFocused={null}
          isPlaceholder={false}
          isSelected={false}
          key=".$.$2"
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          value="Ms"
        >
          <li
            role="presentation"
          >
            <button
              aria-selected={null}
              className="pf-c-select__menu-item"
              id="Ms-2"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="option"
              type="button"
            >
              Ms
            </button>
          </li>
        </SelectOption>
        <SelectOption
          className=""
          id="Other-3"
          index={3}
          isChecked={false}
          isDisabled={false}
          isFocused={null}
          isPlaceholder={false}
          isSelected={false}
          key=".$.$3"
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          value="Other"
        >
          <li
            role="presentation"
          >
            <button
              aria-selected={null}
              className="pf-c-select__menu-item"
              id="Other-3"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="option"
              type="button"
            >
              Other
            </button>
          </li>
        </SelectOption>
      </ul>
    </SelectMenu>
  </div>
</Select>
`;

exports[`typeahead multi select renders selected successfully 1`] = `
<Select
  aria-label=""
  ariaLabelClear="Clear all"
  ariaLabelRemove="Remove"
  ariaLabelToggle="Options menu"
  ariaLabelTypeAhead=""
  ariaLabelledBy=""
  className=""
  isExpanded={true}
  isGrouped={false}
  isPlain={false}
  onClear={[Function]}
  onSelect={[MockFunction]}
  onToggle={[MockFunction]}
  placeholderText=""
  selections={
    Array [
      "Mr",
      "Mrs",
    ]
  }
  toggleId={null}
  variant="typeaheadmulti"
  width=""
>
  <div
    className="pf-c-select pf-m-expanded"
    style={
      Object {
        "width": "",
      }
    }
  >
    <SelectToggle
      ariaLabelToggle="Options menu"
      ariaLabelledBy=" pf-toggle-id-20"
      className=""
      handleTypeaheadKeys={[Function]}
      id="pf-toggle-id-20"
      isActive={false}
      isExpanded={true}
      isFocused={false}
      isHovered={false}
      isPlain={false}
      onClose={[Function]}
      onEnter={[Function]}
      onToggle={[MockFunction]}
      parentRef={
        Object {
          "current": <div
            class="pf-c-select pf-m-expanded"
          >
            <div
              class="pf-c-select__toggle pf-m-typeahead"
            >
              <div
                class="pf-c-select__toggle-wrapper"
              >
                <ul
                  class="pf-c-chip-group"
                >
                  <li
                    class="pf-c-chip"
                  >
                    <span
                      class="pf-c-chip__text"
                      id="pf-random-id-0"
                    >
                      Mr
                    </span>
                    <button
                      aria-label="Remove"
                      aria-labelledby="remove_pf-random-id-0 pf-random-id-0"
                      class="pf-c-button pf-m-plain"
                      id="remove_pf-random-id-0"
                      type="button"
                    >
                      <svg
                        aria-hidden="true"
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style="vertical-align: -0.125em;"
                        viewBox="0 0 512 512"
                        width="1em"
                      >
                        <path
                          d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z"
                          transform=""
                        />
                      </svg>
                    </button>
                  </li>
                  <li
                    class="pf-c-chip pf-m-overflow"
                  >
                    <button
                      aria-label="close"
                      class="pf-c-button pf-m-plain"
                      type="button"
                    >
                      <span
                        class="pf-c-chip__text"
                      >
                        1 more
                      </span>
                    </button>
                  </li>
                </ul>
                <input
                  aria-label=""
                  autocomplete="off"
                  class="pf-c-form-control pf-c-select__toggle-typeahead"
                  id="select-multi-typeahead-typeahead"
                  placeholder=""
                  type="text"
                  value=""
                />
              </div>
              <button
                aria-label="Clear all"
                class="pf-c-button pf-m-plain pf-c-select__toggle-clear"
                type="button"
              >
                <svg
                  aria-hidden="true"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  style="vertical-align: -0.125em;"
                  viewBox="0 0 512 512"
                  width="1em"
                >
                  <path
                    d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z"
                    transform=""
                  />
                </svg>
              </button>
              <button
                aria-expanded="true"
                aria-haspopup="listbox"
                aria-label="Options menu"
                aria-labelledby=" pf-toggle-id-20"
                class="pf-c-button pf-c-select__toggle-button"
                id="pf-toggle-id-20"
              >
                <svg
                  aria-hidden="true"
                  class="pf-c-select__toggle-arrow"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  style="vertical-align: -0.125em;"
                  viewBox="0 0 320 512"
                  width="1em"
                >
                  <path
                    d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                    transform=""
                  />
                </svg>
              </button>
            </div>
            <ul
              aria-label=""
              aria-labelledby=""
              class="pf-c-select__menu"
              role="listbox"
            >
              <li
                role="presentation"
              >
                <button
                  aria-selected="true"
                  class="pf-c-select__menu-item pf-m-selected"
                  id="Mr-0"
                  role="option"
                  type="button"
                >
                  Mr
                  <svg
                    aria-hidden="true"
                    class="pf-c-select__menu-item-icon"
                    fill="currentColor"
                    height="1em"
                    role="img"
                    style="vertical-align: -0.125em;"
                    viewBox="0 0 512 512"
                    width="1em"
                  >
                    <path
                      d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"
                      transform=""
                    />
                  </svg>
                </button>
              </li>
              <li
                role="presentation"
              >
                <button
                  aria-selected="true"
                  class="pf-c-select__menu-item pf-m-selected"
                  id="Mrs-1"
                  role="option"
                  type="button"
                >
                  Mrs
                  <svg
                    aria-hidden="true"
                    class="pf-c-select__menu-item-icon"
                    fill="currentColor"
                    height="1em"
                    role="img"
                    style="vertical-align: -0.125em;"
                    viewBox="0 0 512 512"
                    width="1em"
                  >
                    <path
                      d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"
                      transform=""
                    />
                  </svg>
                </button>
              </li>
              <li
                role="presentation"
              >
                <button
                  class="pf-c-select__menu-item"
                  id="Ms-2"
                  role="option"
                  type="button"
                >
                  Ms
                </button>
              </li>
              <li
                role="presentation"
              >
                <button
                  class="pf-c-select__menu-item"
                  id="Other-3"
                  role="option"
                  type="button"
                >
                  Other
                </button>
              </li>
            </ul>
          </div>,
        }
      }
      type="button"
      variant="typeaheadmulti"
    >
      <div
        className="pf-c-select__toggle pf-m-typeahead"
        onClick={[Function]}
        onKeyDown={[Function]}
      >
        <div
          className="pf-c-select__toggle-wrapper"
        >
          <ChipGroup
            className=""
            collapsedText="\${remaining} more"
            expandedText="Show Less"
            withToolbar={false}
          >
            <ul
              className="pf-c-chip-group"
            >
              <InnerChipGroup
                className=""
                collapsedText="\${remaining} more"
                expandedText="Show Less"
                isOpen={false}
                onToggleCollapse={[Function]}
                withToolbar={false}
              >
                <Chip
                  className=""
                  closeBtnAriaLabel="Remove"
                  component="li"
                  isOverflowChip={false}
                  isReadOnly={false}
                  key=".$Mr"
                  onClick={[Function]}
                  tooltipPosition="top"
                >
                  <GenerateId
                    prefix="pf-random-id-"
                  >
                    <li
                      className="pf-c-chip"
                    >
                      <span
                        className="pf-c-chip__text"
                        id="pf-random-id-0"
                      >
                        Mr
                      </span>
                      <Component
                        aria-labelledby="remove_pf-random-id-0 pf-random-id-0"
                        ariaLabel="Remove"
                        id="remove_pf-random-id-0"
                        onClick={[Function]}
                      >
                        <Component
                          aria-label="Remove"
                          aria-labelledby="remove_pf-random-id-0 pf-random-id-0"
                          className=""
                          id="remove_pf-random-id-0"
                          onClick={[Function]}
                          variant="plain"
                        >
                          <button
                            aria-disabled={null}
                            aria-label="Remove"
                            aria-labelledby="remove_pf-random-id-0 pf-random-id-0"
                            className="pf-c-button pf-m-plain"
                            disabled={false}
                            id="remove_pf-random-id-0"
                            onClick={[Function]}
                            tabIndex={null}
                            type="button"
                          >
                            <TimesCircleIcon
                              aria-hidden="true"
                              color="currentColor"
                              noVerticalAlign={false}
                              size="sm"
                              title={null}
                            >
                              <svg
                                aria-hidden="true"
                                aria-labelledby={null}
                                fill="currentColor"
                                height="1em"
                                role="img"
                                style={
                                  Object {
                                    "verticalAlign": "-0.125em",
                                  }
                                }
                                viewBox="0 0 512 512"
                                width="1em"
                              >
                                <path
                                  d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z"
                                  transform=""
                                />
                              </svg>
                            </TimesCircleIcon>
                          </button>
                        </Component>
                      </Component>
                    </li>
                  </GenerateId>
                </Chip>
                <Chip
                  className=""
                  closeBtnAriaLabel="close"
                  component="li"
                  isOverflowChip={true}
                  isReadOnly={false}
                  onClick={[Function]}
                  tooltipPosition="top"
                >
                  <GenerateId
                    prefix="pf-random-id-"
                  >
                    <li
                      className="pf-c-chip pf-m-overflow"
                    >
                      <Component
                        onClick={[Function]}
                      >
                        <Component
                          aria-label="close"
                          className=""
                          onClick={[Function]}
                          variant="plain"
                        >
                          <button
                            aria-disabled={null}
                            aria-label="close"
                            className="pf-c-button pf-m-plain"
                            disabled={false}
                            onClick={[Function]}
                            tabIndex={null}
                            type="button"
                          >
                            <span
                              className="pf-c-chip__text"
                            >
                              1 more
                            </span>
                          </button>
                        </Component>
                      </Component>
                    </li>
                  </GenerateId>
                </Chip>
              </InnerChipGroup>
            </ul>
          </ChipGroup>
          <input
            aria-activedescendant={null}
            aria-label=""
            autoComplete="off"
            className="pf-c-form-control pf-c-select__toggle-typeahead"
            id="select-multi-typeahead-typeahead"
            onChange={[Function]}
            onFocus={[Function]}
            placeholder=""
            type="text"
            value=""
          />
        </div>
        <button
          aria-label="Clear all"
          className="pf-c-button pf-m-plain pf-c-select__toggle-clear"
          onClick={[Function]}
          type="button"
        >
          <TimesCircleIcon
            aria-hidden={true}
            color="currentColor"
            noVerticalAlign={false}
            size="sm"
            title={null}
          >
            <svg
              aria-hidden={true}
              aria-labelledby={null}
              fill="currentColor"
              height="1em"
              role="img"
              style={
                Object {
                  "verticalAlign": "-0.125em",
                }
              }
              viewBox="0 0 512 512"
              width="1em"
            >
              <path
                d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z"
                transform=""
              />
            </svg>
          </TimesCircleIcon>
        </button>
        <button
          aria-expanded={true}
          aria-haspopup="listbox"
          aria-label="Options menu"
          aria-labelledby=" pf-toggle-id-20"
          className="pf-c-button pf-c-select__toggle-button"
          id="pf-toggle-id-20"
          onClick={[Function]}
        >
          <CaretDownIcon
            className="pf-c-select__toggle-arrow"
            color="currentColor"
            noVerticalAlign={false}
            size="sm"
            title={null}
          >
            <svg
              aria-hidden={true}
              aria-labelledby={null}
              className="pf-c-select__toggle-arrow"
              fill="currentColor"
              height="1em"
              role="img"
              style={
                Object {
                  "verticalAlign": "-0.125em",
                }
              }
              viewBox="0 0 320 512"
              width="1em"
            >
              <path
                d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                transform=""
              />
            </svg>
          </CaretDownIcon>
        </button>
      </div>
    </SelectToggle>
    <SelectMenu
      aria-label=""
      aria-labelledby=""
      className=""
      isExpanded={false}
      isGrouped={false}
      keyHandler={[Function]}
      openedOnEnter={false}
      selected={
        Array [
          "Mr",
          "Mrs",
        ]
      }
      sendRef={[Function]}
    >
      <ul
        aria-label=""
        aria-labelledby=""
        className="pf-c-select__menu"
        role="listbox"
      >
        <SelectOption
          className=""
          id="Mr-0"
          index={0}
          isChecked={false}
          isDisabled={false}
          isFocused={null}
          isPlaceholder={false}
          isSelected={true}
          key=".$.$0"
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          value="Mr"
        >
          <li
            role="presentation"
          >
            <button
              aria-selected={true}
              className="pf-c-select__menu-item pf-m-selected"
              id="Mr-0"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="option"
              type="button"
            >
              Mr
              <CheckIcon
                aria-hidden={true}
                className="pf-c-select__menu-item-icon"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
                title={null}
              >
                <svg
                  aria-hidden={true}
                  aria-labelledby={null}
                  className="pf-c-select__menu-item-icon"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  style={
                    Object {
                      "verticalAlign": "-0.125em",
                    }
                  }
                  viewBox="0 0 512 512"
                  width="1em"
                >
                  <path
                    d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"
                    transform=""
                  />
                </svg>
              </CheckIcon>
            </button>
          </li>
        </SelectOption>
        <SelectOption
          className=""
          id="Mrs-1"
          index={1}
          isChecked={false}
          isDisabled={false}
          isFocused={null}
          isPlaceholder={false}
          isSelected={true}
          key=".$.$1"
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          value="Mrs"
        >
          <li
            role="presentation"
          >
            <button
              aria-selected={true}
              className="pf-c-select__menu-item pf-m-selected"
              id="Mrs-1"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="option"
              type="button"
            >
              Mrs
              <CheckIcon
                aria-hidden={true}
                className="pf-c-select__menu-item-icon"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
                title={null}
              >
                <svg
                  aria-hidden={true}
                  aria-labelledby={null}
                  className="pf-c-select__menu-item-icon"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  style={
                    Object {
                      "verticalAlign": "-0.125em",
                    }
                  }
                  viewBox="0 0 512 512"
                  width="1em"
                >
                  <path
                    d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"
                    transform=""
                  />
                </svg>
              </CheckIcon>
            </button>
          </li>
        </SelectOption>
        <SelectOption
          className=""
          id="Ms-2"
          index={2}
          isChecked={false}
          isDisabled={false}
          isFocused={null}
          isPlaceholder={false}
          isSelected={false}
          key=".$.$2"
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          value="Ms"
        >
          <li
            role="presentation"
          >
            <button
              aria-selected={null}
              className="pf-c-select__menu-item"
              id="Ms-2"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="option"
              type="button"
            >
              Ms
            </button>
          </li>
        </SelectOption>
        <SelectOption
          className=""
          id="Other-3"
          index={3}
          isChecked={false}
          isDisabled={false}
          isFocused={null}
          isPlaceholder={false}
          isSelected={false}
          key=".$.$3"
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          value="Other"
        >
          <li
            role="presentation"
          >
            <button
              aria-selected={null}
              className="pf-c-select__menu-item"
              id="Other-3"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="option"
              type="button"
            >
              Other
            </button>
          </li>
        </SelectOption>
      </ul>
    </SelectMenu>
  </div>
</Select>
`;

exports[`typeahead multi select test onChange 1`] = `
<Select
  aria-label=""
  ariaLabelClear="Clear all"
  ariaLabelRemove="Remove"
  ariaLabelToggle="Options menu"
  ariaLabelTypeAhead=""
  ariaLabelledBy=""
  className=""
  isExpanded={true}
  isGrouped={false}
  isPlain={false}
  onClear={[MockFunction]}
  onSelect={[MockFunction]}
  onToggle={[MockFunction]}
  placeholderText=""
  selections=""
  toggleId={null}
  variant="typeahead"
  width=""
>
  <div
    className="pf-c-select pf-m-expanded"
    style={
      Object {
        "width": "",
      }
    }
  >
    <SelectToggle
      ariaLabelToggle="Options menu"
      ariaLabelledBy=" pf-toggle-id-22"
      className=""
      handleTypeaheadKeys={[Function]}
      id="pf-toggle-id-22"
      isActive={false}
      isExpanded={true}
      isFocused={false}
      isHovered={false}
      isPlain={false}
      onClose={[Function]}
      onEnter={[Function]}
      onToggle={[MockFunction]}
      parentRef={
        Object {
          "current": <div
            class="pf-c-select pf-m-expanded"
          >
            <div
              class="pf-c-select__toggle pf-m-typeahead"
            >
              <div
                class="pf-c-select__toggle-wrapper"
              >
                <input
                  aria-label=""
                  autocomplete="off"
                  class="pf-c-form-control pf-c-select__toggle-typeahead"
                  id="select-typeahead"
                  placeholder=""
                  type="text"
                  value="test"
                />
              </div>
              
              <button
                aria-expanded="true"
                aria-haspopup="listbox"
                aria-label="Options menu"
                aria-labelledby=" pf-toggle-id-22"
                class="pf-c-button pf-c-select__toggle-button"
                id="pf-toggle-id-22"
              >
                <svg
                  aria-hidden="true"
                  class="pf-c-select__toggle-arrow"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  style="vertical-align: -0.125em;"
                  viewBox="0 0 320 512"
                  width="1em"
                >
                  <path
                    d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                    transform=""
                  />
                </svg>
              </button>
            </div>
            <ul
              aria-label=""
              aria-labelledby=""
              class="pf-c-select__menu"
              role="listbox"
            >
              <li
                role="presentation"
              >
                <button
                  class="pf-c-select__menu-item pf-m-disabled"
                  id="No results found-0"
                  role="option"
                  type="button"
                >
                  No results found
                </button>
              </li>
            </ul>
          </div>,
        }
      }
      type="button"
      variant="typeahead"
    >
      <div
        className="pf-c-select__toggle pf-m-typeahead"
        onClick={[Function]}
        onKeyDown={[Function]}
      >
        <div
          className="pf-c-select__toggle-wrapper"
        >
          <input
            aria-activedescendant={null}
            aria-label=""
            autoComplete="off"
            className="pf-c-form-control pf-c-select__toggle-typeahead"
            id="select-typeahead"
            onChange={[Function]}
            onFocus={[Function]}
            placeholder=""
            type="text"
            value="test"
          />
        </div>
        <button
          aria-expanded={true}
          aria-haspopup="listbox"
          aria-label="Options menu"
          aria-labelledby=" pf-toggle-id-22"
          className="pf-c-button pf-c-select__toggle-button"
          id="pf-toggle-id-22"
          onClick={[Function]}
        >
          <CaretDownIcon
            className="pf-c-select__toggle-arrow"
            color="currentColor"
            noVerticalAlign={false}
            size="sm"
            title={null}
          >
            <svg
              aria-hidden={true}
              aria-labelledby={null}
              className="pf-c-select__toggle-arrow"
              fill="currentColor"
              height="1em"
              role="img"
              style={
                Object {
                  "verticalAlign": "-0.125em",
                }
              }
              viewBox="0 0 320 512"
              width="1em"
            >
              <path
                d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                transform=""
              />
            </svg>
          </CaretDownIcon>
        </button>
      </div>
    </SelectToggle>
    <SelectMenu
      aria-label=""
      aria-labelledby=""
      className=""
      isExpanded={false}
      isGrouped={false}
      keyHandler={[Function]}
      openedOnEnter={false}
      selected=""
      sendRef={[Function]}
    >
      <ul
        aria-label=""
        aria-labelledby=""
        className="pf-c-select__menu"
        role="listbox"
      >
        <SelectOption
          className=""
          id="No results found-0"
          index={0}
          isChecked={false}
          isDisabled={true}
          isFocused={null}
          isPlaceholder={false}
          isSelected={false}
          key=".$0"
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          value="No results found"
        >
          <li
            role="presentation"
          >
            <button
              aria-selected={null}
              className="pf-c-select__menu-item pf-m-disabled"
              id="No results found-0"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="option"
              type="button"
            >
              No results found
            </button>
          </li>
        </SelectOption>
      </ul>
    </SelectMenu>
  </div>
</Select>
`;

exports[`typeahead select renders closed successfully 1`] = `
<Select
  aria-label=""
  ariaLabelClear="Clear all"
  ariaLabelRemove="Remove"
  ariaLabelToggle="Options menu"
  ariaLabelTypeAhead=""
  ariaLabelledBy=""
  className=""
  isExpanded={false}
  isGrouped={false}
  isPlain={false}
  onClear={[Function]}
  onSelect={[MockFunction]}
  onToggle={[MockFunction]}
  placeholderText=""
  selections=""
  toggleId={null}
  variant="typeahead"
  width=""
>
  <div
    className="pf-c-select"
    style={
      Object {
        "width": "",
      }
    }
  >
    <SelectToggle
      ariaLabelToggle="Options menu"
      ariaLabelledBy=" pf-toggle-id-13"
      className=""
      handleTypeaheadKeys={[Function]}
      id="pf-toggle-id-13"
      isActive={false}
      isExpanded={false}
      isFocused={false}
      isHovered={false}
      isPlain={false}
      onClose={[Function]}
      onEnter={[Function]}
      onToggle={[MockFunction]}
      parentRef={
        Object {
          "current": <div
            class="pf-c-select"
          >
            <div
              class="pf-c-select__toggle pf-m-typeahead"
            >
              <div
                class="pf-c-select__toggle-wrapper"
              >
                <input
                  aria-label=""
                  autocomplete="off"
                  class="pf-c-form-control pf-c-select__toggle-typeahead"
                  id="select-typeahead"
                  placeholder=""
                  type="text"
                  value=""
                />
              </div>
              
              <button
                aria-expanded="false"
                aria-haspopup="listbox"
                aria-label="Options menu"
                aria-labelledby=" pf-toggle-id-13"
                class="pf-c-button pf-c-select__toggle-button"
                id="pf-toggle-id-13"
              >
                <svg
                  aria-hidden="true"
                  class="pf-c-select__toggle-arrow"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  style="vertical-align: -0.125em;"
                  viewBox="0 0 320 512"
                  width="1em"
                >
                  <path
                    d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                    transform=""
                  />
                </svg>
              </button>
            </div>
          </div>,
        }
      }
      type="button"
      variant="typeahead"
    >
      <div
        className="pf-c-select__toggle pf-m-typeahead"
        onClick={[Function]}
        onKeyDown={[Function]}
      >
        <div
          className="pf-c-select__toggle-wrapper"
        >
          <input
            aria-activedescendant={null}
            aria-label=""
            autoComplete="off"
            className="pf-c-form-control pf-c-select__toggle-typeahead"
            id="select-typeahead"
            onChange={[Function]}
            onFocus={[Function]}
            placeholder=""
            type="text"
            value=""
          />
        </div>
        <button
          aria-expanded={false}
          aria-haspopup="listbox"
          aria-label="Options menu"
          aria-labelledby=" pf-toggle-id-13"
          className="pf-c-button pf-c-select__toggle-button"
          id="pf-toggle-id-13"
          onClick={[Function]}
        >
          <CaretDownIcon
            className="pf-c-select__toggle-arrow"
            color="currentColor"
            noVerticalAlign={false}
            size="sm"
            title={null}
          >
            <svg
              aria-hidden={true}
              aria-labelledby={null}
              className="pf-c-select__toggle-arrow"
              fill="currentColor"
              height="1em"
              role="img"
              style={
                Object {
                  "verticalAlign": "-0.125em",
                }
              }
              viewBox="0 0 320 512"
              width="1em"
            >
              <path
                d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                transform=""
              />
            </svg>
          </CaretDownIcon>
        </button>
      </div>
    </SelectToggle>
  </div>
</Select>
`;

exports[`typeahead select renders expanded successfully 1`] = `
<Select
  aria-label=""
  ariaLabelClear="Clear all"
  ariaLabelRemove="Remove"
  ariaLabelToggle="Options menu"
  ariaLabelTypeAhead=""
  ariaLabelledBy=""
  className=""
  isExpanded={true}
  isGrouped={false}
  isPlain={false}
  onClear={[Function]}
  onSelect={[MockFunction]}
  onToggle={[MockFunction]}
  placeholderText=""
  selections=""
  toggleId={null}
  variant="typeahead"
  width=""
>
  <div
    className="pf-c-select pf-m-expanded"
    style={
      Object {
        "width": "",
      }
    }
  >
    <SelectToggle
      ariaLabelToggle="Options menu"
      ariaLabelledBy=" pf-toggle-id-14"
      className=""
      handleTypeaheadKeys={[Function]}
      id="pf-toggle-id-14"
      isActive={false}
      isExpanded={true}
      isFocused={false}
      isHovered={false}
      isPlain={false}
      onClose={[Function]}
      onEnter={[Function]}
      onToggle={[MockFunction]}
      parentRef={
        Object {
          "current": <div
            class="pf-c-select pf-m-expanded"
          >
            <div
              class="pf-c-select__toggle pf-m-typeahead"
            >
              <div
                class="pf-c-select__toggle-wrapper"
              >
                <input
                  aria-label=""
                  autocomplete="off"
                  class="pf-c-form-control pf-c-select__toggle-typeahead"
                  id="select-typeahead"
                  placeholder=""
                  type="text"
                  value=""
                />
              </div>
              
              <button
                aria-expanded="true"
                aria-haspopup="listbox"
                aria-label="Options menu"
                aria-labelledby=" pf-toggle-id-14"
                class="pf-c-button pf-c-select__toggle-button"
                id="pf-toggle-id-14"
              >
                <svg
                  aria-hidden="true"
                  class="pf-c-select__toggle-arrow"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  style="vertical-align: -0.125em;"
                  viewBox="0 0 320 512"
                  width="1em"
                >
                  <path
                    d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                    transform=""
                  />
                </svg>
              </button>
            </div>
            <ul
              aria-label=""
              aria-labelledby=""
              class="pf-c-select__menu"
              role="listbox"
            >
              <li
                role="presentation"
              >
                <button
                  class="pf-c-select__menu-item"
                  id="Mr-0"
                  role="option"
                  type="button"
                >
                  Mr
                </button>
              </li>
              <li
                role="presentation"
              >
                <button
                  class="pf-c-select__menu-item"
                  id="Mrs-1"
                  role="option"
                  type="button"
                >
                  Mrs
                </button>
              </li>
              <li
                role="presentation"
              >
                <button
                  class="pf-c-select__menu-item"
                  id="Ms-2"
                  role="option"
                  type="button"
                >
                  Ms
                </button>
              </li>
              <li
                role="presentation"
              >
                <button
                  class="pf-c-select__menu-item"
                  id="Other-3"
                  role="option"
                  type="button"
                >
                  Other
                </button>
              </li>
            </ul>
          </div>,
        }
      }
      type="button"
      variant="typeahead"
    >
      <div
        className="pf-c-select__toggle pf-m-typeahead"
        onClick={[Function]}
        onKeyDown={[Function]}
      >
        <div
          className="pf-c-select__toggle-wrapper"
        >
          <input
            aria-activedescendant={null}
            aria-label=""
            autoComplete="off"
            className="pf-c-form-control pf-c-select__toggle-typeahead"
            id="select-typeahead"
            onChange={[Function]}
            onFocus={[Function]}
            placeholder=""
            type="text"
            value=""
          />
        </div>
        <button
          aria-expanded={true}
          aria-haspopup="listbox"
          aria-label="Options menu"
          aria-labelledby=" pf-toggle-id-14"
          className="pf-c-button pf-c-select__toggle-button"
          id="pf-toggle-id-14"
          onClick={[Function]}
        >
          <CaretDownIcon
            className="pf-c-select__toggle-arrow"
            color="currentColor"
            noVerticalAlign={false}
            size="sm"
            title={null}
          >
            <svg
              aria-hidden={true}
              aria-labelledby={null}
              className="pf-c-select__toggle-arrow"
              fill="currentColor"
              height="1em"
              role="img"
              style={
                Object {
                  "verticalAlign": "-0.125em",
                }
              }
              viewBox="0 0 320 512"
              width="1em"
            >
              <path
                d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                transform=""
              />
            </svg>
          </CaretDownIcon>
        </button>
      </div>
    </SelectToggle>
    <SelectMenu
      aria-label=""
      aria-labelledby=""
      className=""
      isExpanded={false}
      isGrouped={false}
      keyHandler={[Function]}
      openedOnEnter={false}
      selected=""
      sendRef={[Function]}
    >
      <ul
        aria-label=""
        aria-labelledby=""
        className="pf-c-select__menu"
        role="listbox"
      >
        <SelectOption
          className=""
          id="Mr-0"
          index={0}
          isChecked={false}
          isDisabled={false}
          isFocused={null}
          isPlaceholder={false}
          isSelected={false}
          key=".$.$0"
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          value="Mr"
        >
          <li
            role="presentation"
          >
            <button
              aria-selected={null}
              className="pf-c-select__menu-item"
              id="Mr-0"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="option"
              type="button"
            >
              Mr
            </button>
          </li>
        </SelectOption>
        <SelectOption
          className=""
          id="Mrs-1"
          index={1}
          isChecked={false}
          isDisabled={false}
          isFocused={null}
          isPlaceholder={false}
          isSelected={false}
          key=".$.$1"
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          value="Mrs"
        >
          <li
            role="presentation"
          >
            <button
              aria-selected={null}
              className="pf-c-select__menu-item"
              id="Mrs-1"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="option"
              type="button"
            >
              Mrs
            </button>
          </li>
        </SelectOption>
        <SelectOption
          className=""
          id="Ms-2"
          index={2}
          isChecked={false}
          isDisabled={false}
          isFocused={null}
          isPlaceholder={false}
          isSelected={false}
          key=".$.$2"
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          value="Ms"
        >
          <li
            role="presentation"
          >
            <button
              aria-selected={null}
              className="pf-c-select__menu-item"
              id="Ms-2"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="option"
              type="button"
            >
              Ms
            </button>
          </li>
        </SelectOption>
        <SelectOption
          className=""
          id="Other-3"
          index={3}
          isChecked={false}
          isDisabled={false}
          isFocused={null}
          isPlaceholder={false}
          isSelected={false}
          key=".$.$3"
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          value="Other"
        >
          <li
            role="presentation"
          >
            <button
              aria-selected={null}
              className="pf-c-select__menu-item"
              id="Other-3"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="option"
              type="button"
            >
              Other
            </button>
          </li>
        </SelectOption>
      </ul>
    </SelectMenu>
  </div>
</Select>
`;

exports[`typeahead select renders selected successfully 1`] = `
<Select
  aria-label=""
  ariaLabelClear="Clear all"
  ariaLabelRemove="Remove"
  ariaLabelToggle="Options menu"
  ariaLabelTypeAhead=""
  ariaLabelledBy=""
  className=""
  isExpanded={true}
  isGrouped={false}
  isPlain={false}
  onClear={[Function]}
  onSelect={[MockFunction]}
  onToggle={[MockFunction]}
  placeholderText=""
  selections="Mr"
  toggleId={null}
  variant="typeahead"
  width=""
>
  <div
    className="pf-c-select pf-m-expanded"
    style={
      Object {
        "width": "",
      }
    }
  >
    <SelectToggle
      ariaLabelToggle="Options menu"
      ariaLabelledBy=" pf-toggle-id-15"
      className=""
      handleTypeaheadKeys={[Function]}
      id="pf-toggle-id-15"
      isActive={false}
      isExpanded={true}
      isFocused={false}
      isHovered={false}
      isPlain={false}
      onClose={[Function]}
      onEnter={[Function]}
      onToggle={[MockFunction]}
      parentRef={
        Object {
          "current": <div
            class="pf-c-select pf-m-expanded"
          >
            <div
              class="pf-c-select__toggle pf-m-typeahead"
            >
              <div
                class="pf-c-select__toggle-wrapper"
              >
                <input
                  aria-label=""
                  autocomplete="off"
                  class="pf-c-form-control pf-c-select__toggle-typeahead"
                  id="select-typeahead"
                  placeholder=""
                  type="text"
                  value=""
                />
              </div>
              <button
                aria-label="Clear all"
                class="pf-c-button pf-m-plain pf-c-select__toggle-clear"
                type="button"
              >
                <svg
                  aria-hidden="true"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  style="vertical-align: -0.125em;"
                  viewBox="0 0 512 512"
                  width="1em"
                >
                  <path
                    d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z"
                    transform=""
                  />
                </svg>
              </button>
              <button
                aria-expanded="true"
                aria-haspopup="listbox"
                aria-label="Options menu"
                aria-labelledby=" pf-toggle-id-15"
                class="pf-c-button pf-c-select__toggle-button"
                id="pf-toggle-id-15"
              >
                <svg
                  aria-hidden="true"
                  class="pf-c-select__toggle-arrow"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  style="vertical-align: -0.125em;"
                  viewBox="0 0 320 512"
                  width="1em"
                >
                  <path
                    d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                    transform=""
                  />
                </svg>
              </button>
            </div>
            <ul
              aria-label=""
              aria-labelledby=""
              class="pf-c-select__menu"
              role="listbox"
            >
              <li
                role="presentation"
              >
                <button
                  aria-selected="true"
                  class="pf-c-select__menu-item pf-m-selected"
                  id="Mr-0"
                  role="option"
                  type="button"
                >
                  Mr
                  <svg
                    aria-hidden="true"
                    class="pf-c-select__menu-item-icon"
                    fill="currentColor"
                    height="1em"
                    role="img"
                    style="vertical-align: -0.125em;"
                    viewBox="0 0 512 512"
                    width="1em"
                  >
                    <path
                      d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"
                      transform=""
                    />
                  </svg>
                </button>
              </li>
              <li
                role="presentation"
              >
                <button
                  class="pf-c-select__menu-item"
                  id="Mrs-1"
                  role="option"
                  type="button"
                >
                  Mrs
                </button>
              </li>
              <li
                role="presentation"
              >
                <button
                  class="pf-c-select__menu-item"
                  id="Ms-2"
                  role="option"
                  type="button"
                >
                  Ms
                </button>
              </li>
              <li
                role="presentation"
              >
                <button
                  class="pf-c-select__menu-item"
                  id="Other-3"
                  role="option"
                  type="button"
                >
                  Other
                </button>
              </li>
            </ul>
          </div>,
        }
      }
      type="button"
      variant="typeahead"
    >
      <div
        className="pf-c-select__toggle pf-m-typeahead"
        onClick={[Function]}
        onKeyDown={[Function]}
      >
        <div
          className="pf-c-select__toggle-wrapper"
        >
          <input
            aria-activedescendant={null}
            aria-label=""
            autoComplete="off"
            className="pf-c-form-control pf-c-select__toggle-typeahead"
            id="select-typeahead"
            onChange={[Function]}
            onFocus={[Function]}
            placeholder=""
            type="text"
            value=""
          />
        </div>
        <button
          aria-label="Clear all"
          className="pf-c-button pf-m-plain pf-c-select__toggle-clear"
          onClick={[Function]}
          type="button"
        >
          <TimesCircleIcon
            aria-hidden={true}
            color="currentColor"
            noVerticalAlign={false}
            size="sm"
            title={null}
          >
            <svg
              aria-hidden={true}
              aria-labelledby={null}
              fill="currentColor"
              height="1em"
              role="img"
              style={
                Object {
                  "verticalAlign": "-0.125em",
                }
              }
              viewBox="0 0 512 512"
              width="1em"
            >
              <path
                d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z"
                transform=""
              />
            </svg>
          </TimesCircleIcon>
        </button>
        <button
          aria-expanded={true}
          aria-haspopup="listbox"
          aria-label="Options menu"
          aria-labelledby=" pf-toggle-id-15"
          className="pf-c-button pf-c-select__toggle-button"
          id="pf-toggle-id-15"
          onClick={[Function]}
        >
          <CaretDownIcon
            className="pf-c-select__toggle-arrow"
            color="currentColor"
            noVerticalAlign={false}
            size="sm"
            title={null}
          >
            <svg
              aria-hidden={true}
              aria-labelledby={null}
              className="pf-c-select__toggle-arrow"
              fill="currentColor"
              height="1em"
              role="img"
              style={
                Object {
                  "verticalAlign": "-0.125em",
                }
              }
              viewBox="0 0 320 512"
              width="1em"
            >
              <path
                d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                transform=""
              />
            </svg>
          </CaretDownIcon>
        </button>
      </div>
    </SelectToggle>
    <SelectMenu
      aria-label=""
      aria-labelledby=""
      className=""
      isExpanded={false}
      isGrouped={false}
      keyHandler={[Function]}
      openedOnEnter={false}
      selected="Mr"
      sendRef={[Function]}
    >
      <ul
        aria-label=""
        aria-labelledby=""
        className="pf-c-select__menu"
        role="listbox"
      >
        <SelectOption
          className=""
          id="Mr-0"
          index={0}
          isChecked={false}
          isDisabled={false}
          isFocused={null}
          isPlaceholder={false}
          isSelected={true}
          key=".$.$0"
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          value="Mr"
        >
          <li
            role="presentation"
          >
            <button
              aria-selected={true}
              className="pf-c-select__menu-item pf-m-selected"
              id="Mr-0"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="option"
              type="button"
            >
              Mr
              <CheckIcon
                aria-hidden={true}
                className="pf-c-select__menu-item-icon"
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
                title={null}
              >
                <svg
                  aria-hidden={true}
                  aria-labelledby={null}
                  className="pf-c-select__menu-item-icon"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  style={
                    Object {
                      "verticalAlign": "-0.125em",
                    }
                  }
                  viewBox="0 0 512 512"
                  width="1em"
                >
                  <path
                    d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"
                    transform=""
                  />
                </svg>
              </CheckIcon>
            </button>
          </li>
        </SelectOption>
        <SelectOption
          className=""
          id="Mrs-1"
          index={1}
          isChecked={false}
          isDisabled={false}
          isFocused={null}
          isPlaceholder={false}
          isSelected={false}
          key=".$.$1"
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          value="Mrs"
        >
          <li
            role="presentation"
          >
            <button
              aria-selected={null}
              className="pf-c-select__menu-item"
              id="Mrs-1"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="option"
              type="button"
            >
              Mrs
            </button>
          </li>
        </SelectOption>
        <SelectOption
          className=""
          id="Ms-2"
          index={2}
          isChecked={false}
          isDisabled={false}
          isFocused={null}
          isPlaceholder={false}
          isSelected={false}
          key=".$.$2"
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          value="Ms"
        >
          <li
            role="presentation"
          >
            <button
              aria-selected={null}
              className="pf-c-select__menu-item"
              id="Ms-2"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="option"
              type="button"
            >
              Ms
            </button>
          </li>
        </SelectOption>
        <SelectOption
          className=""
          id="Other-3"
          index={3}
          isChecked={false}
          isDisabled={false}
          isFocused={null}
          isPlaceholder={false}
          isSelected={false}
          key=".$.$3"
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          value="Other"
        >
          <li
            role="presentation"
          >
            <button
              aria-selected={null}
              className="pf-c-select__menu-item"
              id="Other-3"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="option"
              type="button"
            >
              Other
            </button>
          </li>
        </SelectOption>
      </ul>
    </SelectMenu>
  </div>
</Select>
`;

exports[`typeahead select test onChange 1`] = `
<Select
  aria-label=""
  ariaLabelClear="Clear all"
  ariaLabelRemove="Remove"
  ariaLabelToggle="Options menu"
  ariaLabelTypeAhead=""
  ariaLabelledBy=""
  className=""
  isExpanded={true}
  isGrouped={false}
  isPlain={false}
  onClear={[MockFunction]}
  onSelect={[MockFunction]}
  onToggle={[MockFunction]}
  placeholderText=""
  selections=""
  toggleId={null}
  variant="typeahead"
  width=""
>
  <div
    className="pf-c-select pf-m-expanded"
    style={
      Object {
        "width": "",
      }
    }
  >
    <SelectToggle
      ariaLabelToggle="Options menu"
      ariaLabelledBy=" pf-toggle-id-17"
      className=""
      handleTypeaheadKeys={[Function]}
      id="pf-toggle-id-17"
      isActive={false}
      isExpanded={true}
      isFocused={false}
      isHovered={false}
      isPlain={false}
      onClose={[Function]}
      onEnter={[Function]}
      onToggle={[MockFunction]}
      parentRef={
        Object {
          "current": <div
            class="pf-c-select pf-m-expanded"
          >
            <div
              class="pf-c-select__toggle pf-m-typeahead"
            >
              <div
                class="pf-c-select__toggle-wrapper"
              >
                <input
                  aria-label=""
                  autocomplete="off"
                  class="pf-c-form-control pf-c-select__toggle-typeahead"
                  id="select-typeahead"
                  placeholder=""
                  type="text"
                  value="test"
                />
              </div>
              
              <button
                aria-expanded="true"
                aria-haspopup="listbox"
                aria-label="Options menu"
                aria-labelledby=" pf-toggle-id-17"
                class="pf-c-button pf-c-select__toggle-button"
                id="pf-toggle-id-17"
              >
                <svg
                  aria-hidden="true"
                  class="pf-c-select__toggle-arrow"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  style="vertical-align: -0.125em;"
                  viewBox="0 0 320 512"
                  width="1em"
                >
                  <path
                    d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                    transform=""
                  />
                </svg>
              </button>
            </div>
            <ul
              aria-label=""
              aria-labelledby=""
              class="pf-c-select__menu"
              role="listbox"
            >
              <li
                role="presentation"
              >
                <button
                  class="pf-c-select__menu-item pf-m-disabled"
                  id="No results found-0"
                  role="option"
                  type="button"
                >
                  No results found
                </button>
              </li>
            </ul>
          </div>,
        }
      }
      type="button"
      variant="typeahead"
    >
      <div
        className="pf-c-select__toggle pf-m-typeahead"
        onClick={[Function]}
        onKeyDown={[Function]}
      >
        <div
          className="pf-c-select__toggle-wrapper"
        >
          <input
            aria-activedescendant={null}
            aria-label=""
            autoComplete="off"
            className="pf-c-form-control pf-c-select__toggle-typeahead"
            id="select-typeahead"
            onChange={[Function]}
            onFocus={[Function]}
            placeholder=""
            type="text"
            value="test"
          />
        </div>
        <button
          aria-expanded={true}
          aria-haspopup="listbox"
          aria-label="Options menu"
          aria-labelledby=" pf-toggle-id-17"
          className="pf-c-button pf-c-select__toggle-button"
          id="pf-toggle-id-17"
          onClick={[Function]}
        >
          <CaretDownIcon
            className="pf-c-select__toggle-arrow"
            color="currentColor"
            noVerticalAlign={false}
            size="sm"
            title={null}
          >
            <svg
              aria-hidden={true}
              aria-labelledby={null}
              className="pf-c-select__toggle-arrow"
              fill="currentColor"
              height="1em"
              role="img"
              style={
                Object {
                  "verticalAlign": "-0.125em",
                }
              }
              viewBox="0 0 320 512"
              width="1em"
            >
              <path
                d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                transform=""
              />
            </svg>
          </CaretDownIcon>
        </button>
      </div>
    </SelectToggle>
    <SelectMenu
      aria-label=""
      aria-labelledby=""
      className=""
      isExpanded={false}
      isGrouped={false}
      keyHandler={[Function]}
      openedOnEnter={false}
      selected=""
      sendRef={[Function]}
    >
      <ul
        aria-label=""
        aria-labelledby=""
        className="pf-c-select__menu"
        role="listbox"
      >
        <SelectOption
          className=""
          id="No results found-0"
          index={0}
          isChecked={false}
          isDisabled={true}
          isFocused={null}
          isPlaceholder={false}
          isSelected={false}
          key=".$0"
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          value="No results found"
        >
          <li
            role="presentation"
          >
            <button
              aria-selected={null}
              className="pf-c-select__menu-item pf-m-disabled"
              id="No results found-0"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="option"
              type="button"
            >
              No results found
            </button>
          </li>
        </SelectOption>
      </ul>
    </SelectMenu>
  </div>
</Select>
`;

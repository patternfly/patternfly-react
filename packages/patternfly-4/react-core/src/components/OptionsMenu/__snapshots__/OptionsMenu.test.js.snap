// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`optionsMenu expanded 1`] = `
<OptionsMenu
  ariaLabelMenu=""
  className=""
  direction="down"
  id="expanded"
  isOpen={true}
  isPlain={false}
  menuItems={
    Array [
      <OptionsMenuItemsGroup
        ariaLabel=""
        className=""
      >
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={false}
          isSelected={false}
          onSelect={[Function]}
        >
          Name
        </OptionsMenuItem>
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={false}
          isSelected={false}
          onSelect={[Function]}
        >
          Date
        </OptionsMenuItem>
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={true}
          isSelected={false}
          onSelect={[Function]}
        >
          Disabled
        </OptionsMenuItem>
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={false}
          isSelected={false}
          onSelect={[Function]}
        >
          Size
        </OptionsMenuItem>
      </OptionsMenuItemsGroup>,
      <OptionsMenuSeparator
        className=""
      />,
      <OptionsMenuItemsGroup
        ariaLabel=""
        className=""
      >
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={false}
          isSelected={false}
          onSelect={[Function]}
        >
          Ascending
        </OptionsMenuItem>
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={false}
          isSelected={false}
          onSelect={[Function]}
        >
          Descending
        </OptionsMenuItem>
      </OptionsMenuItemsGroup>,
    ]
  }
  position="left"
  toggle={
    <OptionsMenuToggle
      aria-label="Options menu"
      hideCaret={false}
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={false}
      isPlain={false}
      onToggle={[Function]}
      parentId=""
      toggleTemplate=""
    >
      Options Menu
    </OptionsMenuToggle>
  }
>
  <div
    className="pf-c-options-menu pf-m-expanded"
    id="expanded"
  >
    <OptionsMenuToggle
      aria-label="Options menu"
      hideCaret={false}
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={true}
      isPlain={false}
      key=".0"
      onToggle={[Function]}
      parentId="expanded"
      toggleTemplate=""
    >
      <button
        aria-expanded={true}
        aria-haspopup="listbox"
        aria-label="Options menu"
        className="pf-c-options-menu__toggle"
        id="expanded-toggle"
        onClick={[Function]}
      >
        <CaretDownIcon
          aria-hidden={true}
          className="pf-c-options-menu__toggle-icon"
          color="currentColor"
          size="sm"
          title={null}
        >
          <svg
            aria-hidden={true}
            aria-labelledby={null}
            className="pf-c-options-menu__toggle-icon"
            fill="currentColor"
            height="1em"
            role="img"
            style={
              Object {
                "verticalAlign": "-0.125em",
              }
            }
            viewBox="0 0 320 512"
            width="1em"
          >
            <path
              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
              transform=""
            />
          </svg>
        </CaretDownIcon>
      </button>
    </OptionsMenuToggle>
    <ul
      aria-labelledby="expanded-toggle"
      className="pf-c-options-menu__menu"
    >
      <OptionsMenuItemsGroup
        ariaLabel=""
        className=""
        key="first group"
      >
        <li>
          <ul
            aria-label=""
            className=""
          >
            <OptionsMenuItem
              className=""
              id=""
              isDisabled={false}
              isSelected={false}
              key="name"
              onSelect={[Function]}
            >
              <li>
                <button
                  aria-disabled={false}
                  className="pf-c-options-menu__menu-item"
                  id=""
                  onClick={[Function]}
                  onKeyDown={[Function]}
                >
                  Name
                  <i
                    aria-hidden={true}
                    className="pf-c-options-menu__menu-item-icon"
                    hidden={true}
                  >
                    <CheckIcon
                      color="currentColor"
                      size="sm"
                      title={null}
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 512 512"
                        width="1em"
                      >
                        <path
                          d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"
                          transform=""
                        />
                      </svg>
                    </CheckIcon>
                  </i>
                </button>
              </li>
            </OptionsMenuItem>
            <OptionsMenuItem
              className=""
              id=""
              isDisabled={false}
              isSelected={false}
              key="date"
              onSelect={[Function]}
            >
              <li>
                <button
                  aria-disabled={false}
                  className="pf-c-options-menu__menu-item"
                  id=""
                  onClick={[Function]}
                  onKeyDown={[Function]}
                >
                  Date
                  <i
                    aria-hidden={true}
                    className="pf-c-options-menu__menu-item-icon"
                    hidden={true}
                  >
                    <CheckIcon
                      color="currentColor"
                      size="sm"
                      title={null}
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 512 512"
                        width="1em"
                      >
                        <path
                          d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"
                          transform=""
                        />
                      </svg>
                    </CheckIcon>
                  </i>
                </button>
              </li>
            </OptionsMenuItem>
            <OptionsMenuItem
              className=""
              id=""
              isDisabled={true}
              isSelected={false}
              key="disabled"
              onSelect={[Function]}
            >
              <li>
                <button
                  aria-disabled={true}
                  className="pf-c-options-menu__menu-item pf-m-disabled"
                  id=""
                  onClick={[Function]}
                  onKeyDown={[Function]}
                >
                  Disabled
                  <i
                    aria-hidden={true}
                    className="pf-c-options-menu__menu-item-icon"
                    hidden={true}
                  >
                    <CheckIcon
                      color="currentColor"
                      size="sm"
                      title={null}
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 512 512"
                        width="1em"
                      >
                        <path
                          d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"
                          transform=""
                        />
                      </svg>
                    </CheckIcon>
                  </i>
                </button>
              </li>
            </OptionsMenuItem>
            <OptionsMenuItem
              className=""
              id=""
              isDisabled={false}
              isSelected={false}
              key="size"
              onSelect={[Function]}
            >
              <li>
                <button
                  aria-disabled={false}
                  className="pf-c-options-menu__menu-item"
                  id=""
                  onClick={[Function]}
                  onKeyDown={[Function]}
                >
                  Size
                  <i
                    aria-hidden={true}
                    className="pf-c-options-menu__menu-item-icon"
                    hidden={true}
                  >
                    <CheckIcon
                      color="currentColor"
                      size="sm"
                      title={null}
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 512 512"
                        width="1em"
                      >
                        <path
                          d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"
                          transform=""
                        />
                      </svg>
                    </CheckIcon>
                  </i>
                </button>
              </li>
            </OptionsMenuItem>
          </ul>
        </li>
      </OptionsMenuItemsGroup>
      <OptionsMenuSeparator
        className=""
        key="separator"
      >
        <li
          className="pf-c-options-menu__separator"
          role="separator"
        />
      </OptionsMenuSeparator>
      <OptionsMenuItemsGroup
        ariaLabel=""
        className=""
        key="second group"
      >
        <li>
          <ul
            aria-label=""
            className=""
          >
            <OptionsMenuItem
              className=""
              id=""
              isDisabled={false}
              isSelected={false}
              key="ascending"
              onSelect={[Function]}
            >
              <li>
                <button
                  aria-disabled={false}
                  className="pf-c-options-menu__menu-item"
                  id=""
                  onClick={[Function]}
                  onKeyDown={[Function]}
                >
                  Ascending
                  <i
                    aria-hidden={true}
                    className="pf-c-options-menu__menu-item-icon"
                    hidden={true}
                  >
                    <CheckIcon
                      color="currentColor"
                      size="sm"
                      title={null}
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 512 512"
                        width="1em"
                      >
                        <path
                          d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"
                          transform=""
                        />
                      </svg>
                    </CheckIcon>
                  </i>
                </button>
              </li>
            </OptionsMenuItem>
            <OptionsMenuItem
              className=""
              id=""
              isDisabled={false}
              isSelected={false}
              key="descending"
              onSelect={[Function]}
            >
              <li>
                <button
                  aria-disabled={false}
                  className="pf-c-options-menu__menu-item"
                  id=""
                  onClick={[Function]}
                  onKeyDown={[Function]}
                >
                  Descending
                  <i
                    aria-hidden={true}
                    className="pf-c-options-menu__menu-item-icon"
                    hidden={true}
                  >
                    <CheckIcon
                      color="currentColor"
                      size="sm"
                      title={null}
                    >
                      <svg
                        aria-hidden={true}
                        aria-labelledby={null}
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style={
                          Object {
                            "verticalAlign": "-0.125em",
                          }
                        }
                        viewBox="0 0 512 512"
                        width="1em"
                      >
                        <path
                          d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"
                          transform=""
                        />
                      </svg>
                    </CheckIcon>
                  </i>
                </button>
              </li>
            </OptionsMenuItem>
          </ul>
        </li>
      </OptionsMenuItemsGroup>
    </ul>
  </div>
</OptionsMenu>
`;

exports[`optionsMenu open up 1`] = `
<OptionsMenu
  ariaLabelMenu=""
  className=""
  direction="up"
  id="openUp"
  isOpen={false}
  isPlain={false}
  menuItems={
    Array [
      <OptionsMenuItemsGroup
        ariaLabel=""
        className=""
      >
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={false}
          isSelected={false}
          onSelect={[Function]}
        >
          Name
        </OptionsMenuItem>
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={false}
          isSelected={false}
          onSelect={[Function]}
        >
          Date
        </OptionsMenuItem>
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={true}
          isSelected={false}
          onSelect={[Function]}
        >
          Disabled
        </OptionsMenuItem>
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={false}
          isSelected={false}
          onSelect={[Function]}
        >
          Size
        </OptionsMenuItem>
      </OptionsMenuItemsGroup>,
      <OptionsMenuSeparator
        className=""
      />,
      <OptionsMenuItemsGroup
        ariaLabel=""
        className=""
      >
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={false}
          isSelected={false}
          onSelect={[Function]}
        >
          Ascending
        </OptionsMenuItem>
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={false}
          isSelected={false}
          onSelect={[Function]}
        >
          Descending
        </OptionsMenuItem>
      </OptionsMenuItemsGroup>,
    ]
  }
  position="left"
  toggle={
    <OptionsMenuToggle
      aria-label="Options menu"
      hideCaret={false}
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={false}
      isPlain={false}
      onToggle={[Function]}
      parentId=""
      toggleTemplate=""
    >
      Options Menu
    </OptionsMenuToggle>
  }
>
  <div
    className="pf-c-options-menu pf-m-top"
    id="openUp"
  >
    <OptionsMenuToggle
      aria-label="Options menu"
      hideCaret={false}
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={false}
      isPlain={false}
      key=".0"
      onToggle={[Function]}
      parentId="openUp"
      toggleTemplate=""
    >
      <button
        aria-expanded={false}
        aria-haspopup="listbox"
        aria-label="Options menu"
        className="pf-c-options-menu__toggle"
        id="openUp-toggle"
        onClick={[Function]}
      >
        <CaretDownIcon
          aria-hidden={true}
          className="pf-c-options-menu__toggle-icon"
          color="currentColor"
          size="sm"
          title={null}
        >
          <svg
            aria-hidden={true}
            aria-labelledby={null}
            className="pf-c-options-menu__toggle-icon"
            fill="currentColor"
            height="1em"
            role="img"
            style={
              Object {
                "verticalAlign": "-0.125em",
              }
            }
            viewBox="0 0 320 512"
            width="1em"
          >
            <path
              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
              transform=""
            />
          </svg>
        </CaretDownIcon>
      </button>
    </OptionsMenuToggle>
  </div>
</OptionsMenu>
`;

exports[`optionsMenu plain 1`] = `
<OptionsMenu
  ariaLabelMenu=""
  className=""
  direction="down"
  id="plain"
  isOpen={false}
  isPlain={true}
  menuItems={
    Array [
      <OptionsMenuItemsGroup
        ariaLabel=""
        className=""
      >
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={false}
          isSelected={false}
          onSelect={[Function]}
        >
          Name
        </OptionsMenuItem>
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={false}
          isSelected={false}
          onSelect={[Function]}
        >
          Date
        </OptionsMenuItem>
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={true}
          isSelected={false}
          onSelect={[Function]}
        >
          Disabled
        </OptionsMenuItem>
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={false}
          isSelected={false}
          onSelect={[Function]}
        >
          Size
        </OptionsMenuItem>
      </OptionsMenuItemsGroup>,
      <OptionsMenuSeparator
        className=""
      />,
      <OptionsMenuItemsGroup
        ariaLabel=""
        className=""
      >
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={false}
          isSelected={false}
          onSelect={[Function]}
        >
          Ascending
        </OptionsMenuItem>
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={false}
          isSelected={false}
          onSelect={[Function]}
        >
          Descending
        </OptionsMenuItem>
      </OptionsMenuItemsGroup>,
    ]
  }
  position="left"
  toggle={
    <OptionsMenuToggle
      aria-label="Options menu"
      hideCaret={false}
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={false}
      isPlain={false}
      onToggle={[Function]}
      parentId=""
      toggleTemplate=""
    >
      Options Menu
    </OptionsMenuToggle>
  }
>
  <div
    className="pf-c-options-menu"
    id="plain"
  >
    <OptionsMenuToggle
      aria-label="Options menu"
      hideCaret={false}
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={false}
      isPlain={true}
      key=".0"
      onToggle={[Function]}
      parentId="plain"
      toggleTemplate=""
    >
      <button
        aria-expanded={false}
        aria-haspopup="listbox"
        aria-label="Options menu"
        className="pf-c-options-menu__toggle pf-m-plain"
        id="plain-toggle"
        onClick={[Function]}
      >
        <CaretDownIcon
          aria-hidden={true}
          className="pf-c-options-menu__toggle-icon"
          color="currentColor"
          size="sm"
          title={null}
        >
          <svg
            aria-hidden={true}
            aria-labelledby={null}
            className="pf-c-options-menu__toggle-icon"
            fill="currentColor"
            height="1em"
            role="img"
            style={
              Object {
                "verticalAlign": "-0.125em",
              }
            }
            viewBox="0 0 320 512"
            width="1em"
          >
            <path
              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
              transform=""
            />
          </svg>
        </CaretDownIcon>
      </button>
    </OptionsMenuToggle>
  </div>
</OptionsMenu>
`;

exports[`optionsMenu regular 1`] = `
<OptionsMenu
  ariaLabelMenu=""
  className=""
  direction="down"
  id="regular"
  isOpen={false}
  isPlain={false}
  menuItems={
    Array [
      <OptionsMenuItemsGroup
        ariaLabel=""
        className=""
      >
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={false}
          isSelected={false}
          onSelect={[Function]}
        >
          Name
        </OptionsMenuItem>
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={false}
          isSelected={false}
          onSelect={[Function]}
        >
          Date
        </OptionsMenuItem>
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={true}
          isSelected={false}
          onSelect={[Function]}
        >
          Disabled
        </OptionsMenuItem>
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={false}
          isSelected={false}
          onSelect={[Function]}
        >
          Size
        </OptionsMenuItem>
      </OptionsMenuItemsGroup>,
      <OptionsMenuSeparator
        className=""
      />,
      <OptionsMenuItemsGroup
        ariaLabel=""
        className=""
      >
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={false}
          isSelected={false}
          onSelect={[Function]}
        >
          Ascending
        </OptionsMenuItem>
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={false}
          isSelected={false}
          onSelect={[Function]}
        >
          Descending
        </OptionsMenuItem>
      </OptionsMenuItemsGroup>,
    ]
  }
  position="left"
  toggle={
    <OptionsMenuToggle
      aria-label="Options menu"
      hideCaret={false}
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={false}
      isPlain={false}
      onToggle={[Function]}
      parentId=""
      toggleTemplate=""
    >
      Options Menu
    </OptionsMenuToggle>
  }
>
  <div
    className="pf-c-options-menu"
    id="regular"
  >
    <OptionsMenuToggle
      aria-label="Options menu"
      hideCaret={false}
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={false}
      isPlain={false}
      key=".0"
      onToggle={[Function]}
      parentId="regular"
      toggleTemplate=""
    >
      <button
        aria-expanded={false}
        aria-haspopup="listbox"
        aria-label="Options menu"
        className="pf-c-options-menu__toggle"
        id="regular-toggle"
        onClick={[Function]}
      >
        <CaretDownIcon
          aria-hidden={true}
          className="pf-c-options-menu__toggle-icon"
          color="currentColor"
          size="sm"
          title={null}
        >
          <svg
            aria-hidden={true}
            aria-labelledby={null}
            className="pf-c-options-menu__toggle-icon"
            fill="currentColor"
            height="1em"
            role="img"
            style={
              Object {
                "verticalAlign": "-0.125em",
              }
            }
            viewBox="0 0 320 512"
            width="1em"
          >
            <path
              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
              transform=""
            />
          </svg>
        </CaretDownIcon>
      </button>
    </OptionsMenuToggle>
  </div>
</OptionsMenu>
`;

exports[`optionsMenu right aligned + open up 1`] = `
<OptionsMenu
  ariaLabelMenu=""
  className=""
  direction="up"
  id="rightAlignedOpenUp"
  isOpen={false}
  isPlain={false}
  menuItems={
    Array [
      <OptionsMenuItemsGroup
        ariaLabel=""
        className=""
      >
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={false}
          isSelected={false}
          onSelect={[Function]}
        >
          Name
        </OptionsMenuItem>
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={false}
          isSelected={false}
          onSelect={[Function]}
        >
          Date
        </OptionsMenuItem>
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={true}
          isSelected={false}
          onSelect={[Function]}
        >
          Disabled
        </OptionsMenuItem>
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={false}
          isSelected={false}
          onSelect={[Function]}
        >
          Size
        </OptionsMenuItem>
      </OptionsMenuItemsGroup>,
      <OptionsMenuSeparator
        className=""
      />,
      <OptionsMenuItemsGroup
        ariaLabel=""
        className=""
      >
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={false}
          isSelected={false}
          onSelect={[Function]}
        >
          Ascending
        </OptionsMenuItem>
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={false}
          isSelected={false}
          onSelect={[Function]}
        >
          Descending
        </OptionsMenuItem>
      </OptionsMenuItemsGroup>,
    ]
  }
  position="right"
  toggle={
    <OptionsMenuToggle
      aria-label="Options menu"
      hideCaret={false}
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={false}
      isPlain={false}
      onToggle={[Function]}
      parentId=""
      toggleTemplate=""
    >
      Options Menu
    </OptionsMenuToggle>
  }
>
  <div
    className="pf-c-options-menu pf-m-top pf-m-align-right"
    id="rightAlignedOpenUp"
  >
    <OptionsMenuToggle
      aria-label="Options menu"
      hideCaret={false}
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={false}
      isPlain={false}
      key=".0"
      onToggle={[Function]}
      parentId="rightAlignedOpenUp"
      toggleTemplate=""
    >
      <button
        aria-expanded={false}
        aria-haspopup="listbox"
        aria-label="Options menu"
        className="pf-c-options-menu__toggle"
        id="rightAlignedOpenUp-toggle"
        onClick={[Function]}
      >
        <CaretDownIcon
          aria-hidden={true}
          className="pf-c-options-menu__toggle-icon"
          color="currentColor"
          size="sm"
          title={null}
        >
          <svg
            aria-hidden={true}
            aria-labelledby={null}
            className="pf-c-options-menu__toggle-icon"
            fill="currentColor"
            height="1em"
            role="img"
            style={
              Object {
                "verticalAlign": "-0.125em",
              }
            }
            viewBox="0 0 320 512"
            width="1em"
          >
            <path
              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
              transform=""
            />
          </svg>
        </CaretDownIcon>
      </button>
    </OptionsMenuToggle>
  </div>
</OptionsMenu>
`;

exports[`optionsMenu right aligned 1`] = `
<OptionsMenu
  ariaLabelMenu=""
  className=""
  direction="down"
  id="rightAligned"
  isOpen={false}
  isPlain={false}
  menuItems={
    Array [
      <OptionsMenuItemsGroup
        ariaLabel=""
        className=""
      >
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={false}
          isSelected={false}
          onSelect={[Function]}
        >
          Name
        </OptionsMenuItem>
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={false}
          isSelected={false}
          onSelect={[Function]}
        >
          Date
        </OptionsMenuItem>
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={true}
          isSelected={false}
          onSelect={[Function]}
        >
          Disabled
        </OptionsMenuItem>
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={false}
          isSelected={false}
          onSelect={[Function]}
        >
          Size
        </OptionsMenuItem>
      </OptionsMenuItemsGroup>,
      <OptionsMenuSeparator
        className=""
      />,
      <OptionsMenuItemsGroup
        ariaLabel=""
        className=""
      >
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={false}
          isSelected={false}
          onSelect={[Function]}
        >
          Ascending
        </OptionsMenuItem>
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={false}
          isSelected={false}
          onSelect={[Function]}
        >
          Descending
        </OptionsMenuItem>
      </OptionsMenuItemsGroup>,
    ]
  }
  position="right"
  toggle={
    <OptionsMenuToggle
      aria-label="Options menu"
      hideCaret={false}
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={false}
      isPlain={false}
      onToggle={[Function]}
      parentId=""
      toggleTemplate=""
    >
      Options Menu
    </OptionsMenuToggle>
  }
>
  <div
    className="pf-c-options-menu pf-m-align-right"
    id="rightAligned"
  >
    <OptionsMenuToggle
      aria-label="Options menu"
      hideCaret={false}
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={false}
      isPlain={false}
      key=".0"
      onToggle={[Function]}
      parentId="rightAligned"
      toggleTemplate=""
    >
      <button
        aria-expanded={false}
        aria-haspopup="listbox"
        aria-label="Options menu"
        className="pf-c-options-menu__toggle"
        id="rightAligned-toggle"
        onClick={[Function]}
      >
        <CaretDownIcon
          aria-hidden={true}
          className="pf-c-options-menu__toggle-icon"
          color="currentColor"
          size="sm"
          title={null}
        >
          <svg
            aria-hidden={true}
            aria-labelledby={null}
            className="pf-c-options-menu__toggle-icon"
            fill="currentColor"
            height="1em"
            role="img"
            style={
              Object {
                "verticalAlign": "-0.125em",
              }
            }
            viewBox="0 0 320 512"
            width="1em"
          >
            <path
              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
              transform=""
            />
          </svg>
        </CaretDownIcon>
      </button>
    </OptionsMenuToggle>
  </div>
</OptionsMenu>
`;

exports[`optionsMenu text 1`] = `
<OptionsMenu
  ariaLabelMenu=""
  className=""
  direction="down"
  id="text"
  isOpen={false}
  isPlain={false}
  menuItems={
    Array [
      <OptionsMenuItemsGroup
        ariaLabel=""
        className=""
      >
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={false}
          isSelected={false}
          onSelect={[Function]}
        >
          Name
        </OptionsMenuItem>
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={false}
          isSelected={false}
          onSelect={[Function]}
        >
          Date
        </OptionsMenuItem>
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={true}
          isSelected={false}
          onSelect={[Function]}
        >
          Disabled
        </OptionsMenuItem>
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={false}
          isSelected={false}
          onSelect={[Function]}
        >
          Size
        </OptionsMenuItem>
      </OptionsMenuItemsGroup>,
      <OptionsMenuSeparator
        className=""
      />,
      <OptionsMenuItemsGroup
        ariaLabel=""
        className=""
      >
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={false}
          isSelected={false}
          onSelect={[Function]}
        >
          Ascending
        </OptionsMenuItem>
        <OptionsMenuItem
          className=""
          id=""
          isDisabled={false}
          isSelected={false}
          onSelect={[Function]}
        >
          Descending
        </OptionsMenuItem>
      </OptionsMenuItemsGroup>,
    ]
  }
  position="left"
  toggle={
    <OptionsMenuToggleWithText
      aria-label="Options menu"
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={false}
      isPlain={false}
      onToggle={[Function]}
      parentId=""
      toggleButtonContents={
        <React.Fragment>
          Test
        </React.Fragment>
      }
      toggleButtonContentsClassName=""
      toggleText="Test"
      toggleTextClassName=""
    />
  }
>
  <div
    className="pf-c-options-menu"
    id="text"
  >
    <OptionsMenuToggleWithText
      aria-label="Options menu"
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={false}
      isPlain={false}
      key=".0"
      onToggle={[Function]}
      parentId="text"
      toggleButtonContents={
        <React.Fragment>
          Test
        </React.Fragment>
      }
      toggleButtonContentsClassName=""
      toggleText="Test"
      toggleTextClassName=""
    >
      <div
        className="pf-c-options-menu__toggle pf-m-text"
      >
        <span
          className="pf-c-options-menu__toggle-text"
        >
          Test
        </span>
        <button
          aria-expanded={false}
          aria-haspopup="listbox"
          aria-label="Options menu"
          className="pf-c-options-menu__toggle-button"
          id="text-toggle"
          onClick={[Function]}
        >
          Test
        </button>
      </div>
    </OptionsMenuToggleWithText>
  </div>
</OptionsMenu>
`;

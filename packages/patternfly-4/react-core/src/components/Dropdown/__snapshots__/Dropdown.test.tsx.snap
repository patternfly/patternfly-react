// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`KebabToggle basic 1`] = `
<Component
  isOpen={true}
  toggle={
    <Unknown
      id="Dropdown Toggle"
    />
  }
>
  <Component
    isOpen={true}
    toggle={
      <Unknown
        id="Dropdown Toggle"
      />
    }
  >
    <ComponentWithOuia
      component={[Function]}
      componentProps={
        Object {
          "children": <div>
            BASIC
          </div>,
          "isOpen": true,
          "toggle": <Unknown
            id="Dropdown Toggle"
          />,
        }
      }
      consumerContext={null}
    >
      <DropdownWithContext
        autoFocus={true}
        className=""
        direction="down"
        dropdownItems={Array []}
        isGrouped={false}
        isOpen={true}
        isPlain={false}
        onSelect={[Function]}
        ouiaComponentType="Dropdown"
        ouiaContext={
          Object {
            "isOuia": false,
            "ouiaId": null,
          }
        }
        position="left"
        toggle={
          <Unknown
            id="Dropdown Toggle"
          />
        }
      >
        <div
          className="pf-c-dropdown pf-m-expanded"
        >
          <Component
            ariaHasPopup={false}
            id="Dropdown Toggle"
            isOpen={true}
            isPlain={false}
            key=".0"
            onEnter={[Function]}
            parentRef={
              Object {
                "current": <div
                  class="pf-c-dropdown pf-m-expanded"
                >
                  <button
                    aria-expanded="true"
                    aria-haspopup="false"
                    aria-label="Actions"
                    class="pf-c-dropdown__toggle"
                    id="Dropdown Toggle"
                    type="button"
                  >
                    <svg
                      aria-hidden="true"
                      fill="currentColor"
                      height="1em"
                      role="img"
                      style="vertical-align: -0.125em;"
                      viewBox="0 0 192 512"
                      width="1em"
                    >
                      <path
                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                        transform=""
                      />
                    </svg>
                  </button>
                  <div
                    class="pf-c-dropdown__menu"
                  >
                    <div>
                      BASIC
                    </div>
                  </div>
                </div>,
              }
            }
          >
            <Toggle
              aria-label="Actions"
              ariaHasPopup={false}
              className=""
              id="Dropdown Toggle"
              isActive={false}
              isDisabled={false}
              isFocused={false}
              isHovered={false}
              isOpen={true}
              isPlain={false}
              isPrimary={false}
              isSplitButton={false}
              onEnter={[Function]}
              onToggle={[Function]}
              parentRef={
                Object {
                  "current": <div
                    class="pf-c-dropdown pf-m-expanded"
                  >
                    <button
                      aria-expanded="true"
                      aria-haspopup="false"
                      aria-label="Actions"
                      class="pf-c-dropdown__toggle"
                      id="Dropdown Toggle"
                      type="button"
                    >
                      <svg
                        aria-hidden="true"
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style="vertical-align: -0.125em;"
                        viewBox="0 0 192 512"
                        width="1em"
                      >
                        <path
                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                          transform=""
                        />
                      </svg>
                    </button>
                    <div
                      class="pf-c-dropdown__menu"
                    >
                      <div>
                        BASIC
                      </div>
                    </div>
                  </div>,
                }
              }
            >
              <button
                aria-expanded={true}
                aria-haspopup={false}
                aria-label="Actions"
                className="pf-c-dropdown__toggle"
                disabled={false}
                id="Dropdown Toggle"
                onClick={[Function]}
                onKeyDown={[Function]}
                type="button"
              >
                <EllipsisVIcon
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                >
                  <svg
                    aria-hidden={true}
                    aria-labelledby={null}
                    fill="currentColor"
                    height="1em"
                    role="img"
                    style={
                      Object {
                        "verticalAlign": "-0.125em",
                      }
                    }
                    viewBox="0 0 192 512"
                    width="1em"
                  >
                    <path
                      d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                      transform=""
                    />
                  </svg>
                </EllipsisVIcon>
              </button>
            </Toggle>
          </Component>
          <DropdownMenu
            aria-labelledby="Dropdown Toggle"
            autoFocus={false}
            className=""
            component="div"
            isGrouped={false}
            isOpen={true}
            openedOnEnter={false}
            position="left"
          >
            <div
              className="pf-c-dropdown__menu"
              hidden={false}
              onClick={[Function]}
            >
              <div
                key=".0"
              >
                BASIC
              </div>
            </div>
          </DropdownMenu>
        </div>
      </DropdownWithContext>
    </ComponentWithOuia>
  </Component>
</Component>
`;

exports[`KebabToggle dropup + right aligned 1`] = `
<Component
  direction="up"
  dropdownItems={
    Array [
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Action
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={true}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Disabled Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={true}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Disabled Action
      </InternalDropdownItem>,
      <Unknown />,
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Separated Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Separated Action
      </InternalDropdownItem>,
    ]
  }
  position="right"
  toggle={
    <Unknown
      id="Dropdown Toggle"
    />
  }
>
  <Component
    direction="up"
    dropdownItems={
      Array [
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Action
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={true}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Disabled Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={true}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Disabled Action
        </InternalDropdownItem>,
        <Unknown />,
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Separated Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Separated Action
        </InternalDropdownItem>,
      ]
    }
    position="right"
    toggle={
      <Unknown
        id="Dropdown Toggle"
      />
    }
  >
    <ComponentWithOuia
      component={[Function]}
      componentProps={
        Object {
          "direction": "up",
          "dropdownItems": Array [
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Action
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Action
            </InternalDropdownItem>,
            <Unknown />,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Action
            </InternalDropdownItem>,
          ],
          "position": "right",
          "toggle": <Unknown
            id="Dropdown Toggle"
          />,
        }
      }
      consumerContext={null}
    >
      <DropdownWithContext
        autoFocus={true}
        className=""
        direction="up"
        dropdownItems={
          Array [
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Action
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Action
            </InternalDropdownItem>,
            <Unknown />,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Action
            </InternalDropdownItem>,
          ]
        }
        isGrouped={false}
        isOpen={false}
        isPlain={false}
        onSelect={[Function]}
        ouiaComponentType="Dropdown"
        ouiaContext={
          Object {
            "isOuia": false,
            "ouiaId": null,
          }
        }
        position="right"
        toggle={
          <Unknown
            id="Dropdown Toggle"
          />
        }
      >
        <div
          className="pf-c-dropdown pf-m-top pf-m-align-right"
        >
          <Component
            ariaHasPopup={true}
            id="Dropdown Toggle"
            isOpen={false}
            isPlain={false}
            key=".0"
            onEnter={[Function]}
            parentRef={
              Object {
                "current": <div
                  class="pf-c-dropdown pf-m-top pf-m-align-right"
                >
                  <button
                    aria-expanded="false"
                    aria-haspopup="true"
                    aria-label="Actions"
                    class="pf-c-dropdown__toggle"
                    id="Dropdown Toggle"
                    type="button"
                  >
                    <svg
                      aria-hidden="true"
                      fill="currentColor"
                      height="1em"
                      role="img"
                      style="vertical-align: -0.125em;"
                      viewBox="0 0 192 512"
                      width="1em"
                    >
                      <path
                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                        transform=""
                      />
                    </svg>
                  </button>
                </div>,
              }
            }
          >
            <Toggle
              aria-label="Actions"
              ariaHasPopup={true}
              className=""
              id="Dropdown Toggle"
              isActive={false}
              isDisabled={false}
              isFocused={false}
              isHovered={false}
              isOpen={false}
              isPlain={false}
              isPrimary={false}
              isSplitButton={false}
              onEnter={[Function]}
              onToggle={[Function]}
              parentRef={
                Object {
                  "current": <div
                    class="pf-c-dropdown pf-m-top pf-m-align-right"
                  >
                    <button
                      aria-expanded="false"
                      aria-haspopup="true"
                      aria-label="Actions"
                      class="pf-c-dropdown__toggle"
                      id="Dropdown Toggle"
                      type="button"
                    >
                      <svg
                        aria-hidden="true"
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style="vertical-align: -0.125em;"
                        viewBox="0 0 192 512"
                        width="1em"
                      >
                        <path
                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                          transform=""
                        />
                      </svg>
                    </button>
                  </div>,
                }
              }
            >
              <button
                aria-expanded={false}
                aria-haspopup={true}
                aria-label="Actions"
                className="pf-c-dropdown__toggle"
                disabled={false}
                id="Dropdown Toggle"
                onClick={[Function]}
                onKeyDown={[Function]}
                type="button"
              >
                <EllipsisVIcon
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                >
                  <svg
                    aria-hidden={true}
                    aria-labelledby={null}
                    fill="currentColor"
                    height="1em"
                    role="img"
                    style={
                      Object {
                        "verticalAlign": "-0.125em",
                      }
                    }
                    viewBox="0 0 192 512"
                    width="1em"
                  >
                    <path
                      d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                      transform=""
                    />
                  </svg>
                </EllipsisVIcon>
              </button>
            </Toggle>
          </Component>
        </div>
      </DropdownWithContext>
    </ComponentWithOuia>
  </Component>
</Component>
`;

exports[`KebabToggle dropup 1`] = `
<Component
  direction="up"
  dropdownItems={
    Array [
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Action
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={true}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Disabled Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={true}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Disabled Action
      </InternalDropdownItem>,
      <Unknown />,
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Separated Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Separated Action
      </InternalDropdownItem>,
    ]
  }
  toggle={
    <Unknown
      id="Dropdown Toggle"
    />
  }
>
  <Component
    direction="up"
    dropdownItems={
      Array [
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Action
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={true}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Disabled Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={true}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Disabled Action
        </InternalDropdownItem>,
        <Unknown />,
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Separated Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Separated Action
        </InternalDropdownItem>,
      ]
    }
    toggle={
      <Unknown
        id="Dropdown Toggle"
      />
    }
  >
    <ComponentWithOuia
      component={[Function]}
      componentProps={
        Object {
          "direction": "up",
          "dropdownItems": Array [
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Action
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Action
            </InternalDropdownItem>,
            <Unknown />,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Action
            </InternalDropdownItem>,
          ],
          "toggle": <Unknown
            id="Dropdown Toggle"
          />,
        }
      }
      consumerContext={null}
    >
      <DropdownWithContext
        autoFocus={true}
        className=""
        direction="up"
        dropdownItems={
          Array [
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Action
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Action
            </InternalDropdownItem>,
            <Unknown />,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Action
            </InternalDropdownItem>,
          ]
        }
        isGrouped={false}
        isOpen={false}
        isPlain={false}
        onSelect={[Function]}
        ouiaComponentType="Dropdown"
        ouiaContext={
          Object {
            "isOuia": false,
            "ouiaId": null,
          }
        }
        position="left"
        toggle={
          <Unknown
            id="Dropdown Toggle"
          />
        }
      >
        <div
          className="pf-c-dropdown pf-m-top"
        >
          <Component
            ariaHasPopup={true}
            id="Dropdown Toggle"
            isOpen={false}
            isPlain={false}
            key=".0"
            onEnter={[Function]}
            parentRef={
              Object {
                "current": <div
                  class="pf-c-dropdown pf-m-top"
                >
                  <button
                    aria-expanded="false"
                    aria-haspopup="true"
                    aria-label="Actions"
                    class="pf-c-dropdown__toggle"
                    id="Dropdown Toggle"
                    type="button"
                  >
                    <svg
                      aria-hidden="true"
                      fill="currentColor"
                      height="1em"
                      role="img"
                      style="vertical-align: -0.125em;"
                      viewBox="0 0 192 512"
                      width="1em"
                    >
                      <path
                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                        transform=""
                      />
                    </svg>
                  </button>
                </div>,
              }
            }
          >
            <Toggle
              aria-label="Actions"
              ariaHasPopup={true}
              className=""
              id="Dropdown Toggle"
              isActive={false}
              isDisabled={false}
              isFocused={false}
              isHovered={false}
              isOpen={false}
              isPlain={false}
              isPrimary={false}
              isSplitButton={false}
              onEnter={[Function]}
              onToggle={[Function]}
              parentRef={
                Object {
                  "current": <div
                    class="pf-c-dropdown pf-m-top"
                  >
                    <button
                      aria-expanded="false"
                      aria-haspopup="true"
                      aria-label="Actions"
                      class="pf-c-dropdown__toggle"
                      id="Dropdown Toggle"
                      type="button"
                    >
                      <svg
                        aria-hidden="true"
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style="vertical-align: -0.125em;"
                        viewBox="0 0 192 512"
                        width="1em"
                      >
                        <path
                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                          transform=""
                        />
                      </svg>
                    </button>
                  </div>,
                }
              }
            >
              <button
                aria-expanded={false}
                aria-haspopup={true}
                aria-label="Actions"
                className="pf-c-dropdown__toggle"
                disabled={false}
                id="Dropdown Toggle"
                onClick={[Function]}
                onKeyDown={[Function]}
                type="button"
              >
                <EllipsisVIcon
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                >
                  <svg
                    aria-hidden={true}
                    aria-labelledby={null}
                    fill="currentColor"
                    height="1em"
                    role="img"
                    style={
                      Object {
                        "verticalAlign": "-0.125em",
                      }
                    }
                    viewBox="0 0 192 512"
                    width="1em"
                  >
                    <path
                      d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                      transform=""
                    />
                  </svg>
                </EllipsisVIcon>
              </button>
            </Toggle>
          </Component>
        </div>
      </DropdownWithContext>
    </ComponentWithOuia>
  </Component>
</Component>
`;

exports[`KebabToggle expanded 1`] = `
<Component
  dropdownItems={
    Array [
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Action
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={true}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Disabled Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={true}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Disabled Action
      </InternalDropdownItem>,
      <Unknown />,
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Separated Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Separated Action
      </InternalDropdownItem>,
    ]
  }
  isOpen={true}
  toggle={
    <Unknown
      id="Dropdown Toggle"
    />
  }
>
  <Component
    dropdownItems={
      Array [
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Action
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={true}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Disabled Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={true}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Disabled Action
        </InternalDropdownItem>,
        <Unknown />,
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Separated Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Separated Action
        </InternalDropdownItem>,
      ]
    }
    isOpen={true}
    toggle={
      <Unknown
        id="Dropdown Toggle"
      />
    }
  >
    <ComponentWithOuia
      component={[Function]}
      componentProps={
        Object {
          "dropdownItems": Array [
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Action
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Action
            </InternalDropdownItem>,
            <Unknown />,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Action
            </InternalDropdownItem>,
          ],
          "isOpen": true,
          "toggle": <Unknown
            id="Dropdown Toggle"
          />,
        }
      }
      consumerContext={null}
    >
      <DropdownWithContext
        autoFocus={true}
        className=""
        direction="down"
        dropdownItems={
          Array [
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Action
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Action
            </InternalDropdownItem>,
            <Unknown />,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Action
            </InternalDropdownItem>,
          ]
        }
        isGrouped={false}
        isOpen={true}
        isPlain={false}
        onSelect={[Function]}
        ouiaComponentType="Dropdown"
        ouiaContext={
          Object {
            "isOuia": false,
            "ouiaId": null,
          }
        }
        position="left"
        toggle={
          <Unknown
            id="Dropdown Toggle"
          />
        }
      >
        <div
          className="pf-c-dropdown pf-m-expanded"
        >
          <Component
            ariaHasPopup={true}
            id="Dropdown Toggle"
            isOpen={true}
            isPlain={false}
            key=".0"
            onEnter={[Function]}
            parentRef={
              Object {
                "current": <div
                  class="pf-c-dropdown pf-m-expanded"
                >
                  <button
                    aria-expanded="true"
                    aria-haspopup="true"
                    aria-label="Actions"
                    class="pf-c-dropdown__toggle"
                    id="Dropdown Toggle"
                    type="button"
                  >
                    <svg
                      aria-hidden="true"
                      fill="currentColor"
                      height="1em"
                      role="img"
                      style="vertical-align: -0.125em;"
                      viewBox="0 0 192 512"
                      width="1em"
                    >
                      <path
                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                        transform=""
                      />
                    </svg>
                  </button>
                  <ul
                    aria-labelledby="Dropdown Toggle"
                    class="pf-c-dropdown__menu"
                    role="menu"
                  >
                    <li
                      id=""
                      role="none"
                    >
                      <a
                        aria-disabled="false"
                        class="pf-c-dropdown__menu-item"
                        id=""
                      >
                        Link
                      </a>
                    </li>
                    <li
                      id=""
                      role="none"
                    >
                      <button
                        class="pf-c-dropdown__menu-item"
                        id=""
                        type="button"
                      >
                        Action
                      </button>
                    </li>
                    <li
                      id=""
                      role="none"
                    >
                      <a
                        aria-disabled="true"
                        class="pf-m-disabled pf-c-dropdown__menu-item"
                        id=""
                        tabindex="-1"
                      >
                        Disabled Link
                      </a>
                    </li>
                    <li
                      id=""
                      role="none"
                    >
                      <button
                        class="pf-m-disabled pf-c-dropdown__menu-item"
                        disabled=""
                        id=""
                        type="button"
                      >
                        Disabled Action
                      </button>
                    </li>
                    <li
                      id=""
                      role="separator"
                    >
                      <div
                        class="pf-c-dropdown__separator"
                        id=""
                      />
                    </li>
                    <li
                      id=""
                      role="none"
                    >
                      <a
                        aria-disabled="false"
                        class="pf-c-dropdown__menu-item"
                        id=""
                      >
                        Separated Link
                      </a>
                    </li>
                    <li
                      id=""
                      role="none"
                    >
                      <button
                        class="pf-c-dropdown__menu-item"
                        id=""
                        type="button"
                      >
                        Separated Action
                      </button>
                    </li>
                  </ul>
                </div>,
              }
            }
          >
            <Toggle
              aria-label="Actions"
              ariaHasPopup={true}
              className=""
              id="Dropdown Toggle"
              isActive={false}
              isDisabled={false}
              isFocused={false}
              isHovered={false}
              isOpen={true}
              isPlain={false}
              isPrimary={false}
              isSplitButton={false}
              onEnter={[Function]}
              onToggle={[Function]}
              parentRef={
                Object {
                  "current": <div
                    class="pf-c-dropdown pf-m-expanded"
                  >
                    <button
                      aria-expanded="true"
                      aria-haspopup="true"
                      aria-label="Actions"
                      class="pf-c-dropdown__toggle"
                      id="Dropdown Toggle"
                      type="button"
                    >
                      <svg
                        aria-hidden="true"
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style="vertical-align: -0.125em;"
                        viewBox="0 0 192 512"
                        width="1em"
                      >
                        <path
                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                          transform=""
                        />
                      </svg>
                    </button>
                    <ul
                      aria-labelledby="Dropdown Toggle"
                      class="pf-c-dropdown__menu"
                      role="menu"
                    >
                      <li
                        id=""
                        role="none"
                      >
                        <a
                          aria-disabled="false"
                          class="pf-c-dropdown__menu-item"
                          id=""
                        >
                          Link
                        </a>
                      </li>
                      <li
                        id=""
                        role="none"
                      >
                        <button
                          class="pf-c-dropdown__menu-item"
                          id=""
                          type="button"
                        >
                          Action
                        </button>
                      </li>
                      <li
                        id=""
                        role="none"
                      >
                        <a
                          aria-disabled="true"
                          class="pf-m-disabled pf-c-dropdown__menu-item"
                          id=""
                          tabindex="-1"
                        >
                          Disabled Link
                        </a>
                      </li>
                      <li
                        id=""
                        role="none"
                      >
                        <button
                          class="pf-m-disabled pf-c-dropdown__menu-item"
                          disabled=""
                          id=""
                          type="button"
                        >
                          Disabled Action
                        </button>
                      </li>
                      <li
                        id=""
                        role="separator"
                      >
                        <div
                          class="pf-c-dropdown__separator"
                          id=""
                        />
                      </li>
                      <li
                        id=""
                        role="none"
                      >
                        <a
                          aria-disabled="false"
                          class="pf-c-dropdown__menu-item"
                          id=""
                        >
                          Separated Link
                        </a>
                      </li>
                      <li
                        id=""
                        role="none"
                      >
                        <button
                          class="pf-c-dropdown__menu-item"
                          id=""
                          type="button"
                        >
                          Separated Action
                        </button>
                      </li>
                    </ul>
                  </div>,
                }
              }
            >
              <button
                aria-expanded={true}
                aria-haspopup={true}
                aria-label="Actions"
                className="pf-c-dropdown__toggle"
                disabled={false}
                id="Dropdown Toggle"
                onClick={[Function]}
                onKeyDown={[Function]}
                type="button"
              >
                <EllipsisVIcon
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                >
                  <svg
                    aria-hidden={true}
                    aria-labelledby={null}
                    fill="currentColor"
                    height="1em"
                    role="img"
                    style={
                      Object {
                        "verticalAlign": "-0.125em",
                      }
                    }
                    viewBox="0 0 192 512"
                    width="1em"
                  >
                    <path
                      d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                      transform=""
                    />
                  </svg>
                </EllipsisVIcon>
              </button>
            </Toggle>
          </Component>
          <DropdownMenu
            aria-labelledby="Dropdown Toggle"
            autoFocus={false}
            className=""
            component="ul"
            isGrouped={false}
            isOpen={true}
            openedOnEnter={false}
            position="left"
          >
            <ul
              aria-labelledby="Dropdown Toggle"
              autoFocus={false}
              className="pf-c-dropdown__menu"
              hidden={false}
              role="menu"
            >
              <InternalDropdownItem
                className=""
                component="a"
                componentID=""
                context={
                  Object {
                    "keyHandler": [Function],
                    "sendRef": [Function],
                  }
                }
                href=""
                id=""
                index={0}
                isDisabled={false}
                isHovered={false}
                key=".$link"
                onClick={[Function]}
                onSelect={[Function]}
                role="none"
                tooltipProps={Object {}}
                variant="item"
              >
                <li
                  className={null}
                  id=""
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  role="none"
                >
                  <a
                    aria-disabled={false}
                    className="pf-c-dropdown__menu-item"
                    href={null}
                    id=""
                    onSelect={[Function]}
                  >
                    Link
                  </a>
                </li>
              </InternalDropdownItem>
              <InternalDropdownItem
                className=""
                component="button"
                componentID=""
                context={
                  Object {
                    "keyHandler": [Function],
                    "sendRef": [Function],
                  }
                }
                href=""
                id=""
                index={1}
                isDisabled={false}
                isHovered={false}
                key=".$action"
                onClick={[Function]}
                onSelect={[Function]}
                role="none"
                tooltipProps={Object {}}
                variant="item"
              >
                <li
                  className={null}
                  id=""
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  role="none"
                >
                  <button
                    className="pf-c-dropdown__menu-item"
                    disabled={false}
                    href={null}
                    id=""
                    onSelect={[Function]}
                    type="button"
                  >
                    Action
                  </button>
                </li>
              </InternalDropdownItem>
              <InternalDropdownItem
                className=""
                component="a"
                componentID=""
                context={
                  Object {
                    "keyHandler": [Function],
                    "sendRef": [Function],
                  }
                }
                href=""
                id=""
                index={2}
                isDisabled={true}
                isHovered={false}
                key=".$disabled link"
                onClick={[Function]}
                onSelect={[Function]}
                role="none"
                tooltipProps={Object {}}
                variant="item"
              >
                <li
                  className={null}
                  id=""
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  role="none"
                >
                  <a
                    aria-disabled={true}
                    className="pf-m-disabled pf-c-dropdown__menu-item"
                    href={null}
                    id=""
                    onSelect={[Function]}
                    tabIndex={-1}
                  >
                    Disabled Link
                  </a>
                </li>
              </InternalDropdownItem>
              <InternalDropdownItem
                className=""
                component="button"
                componentID=""
                context={
                  Object {
                    "keyHandler": [Function],
                    "sendRef": [Function],
                  }
                }
                href=""
                id=""
                index={3}
                isDisabled={true}
                isHovered={false}
                key=".$disabled action"
                onClick={[Function]}
                onSelect={[Function]}
                role="none"
                tooltipProps={Object {}}
                variant="item"
              >
                <li
                  className={null}
                  id=""
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  role="none"
                >
                  <button
                    className="pf-m-disabled pf-c-dropdown__menu-item"
                    disabled={true}
                    href={null}
                    id=""
                    onSelect={[Function]}
                    type="button"
                  >
                    Disabled Action
                  </button>
                </li>
              </InternalDropdownItem>
              <Component
                index={4}
                key=".$separator"
              >
                <InternalDropdownItem
                  className="pf-c-dropdown__separator"
                  component="div"
                  componentID=""
                  context={
                    Object {
                      "keyHandler": [Function],
                      "sendRef": [Function],
                    }
                  }
                  href=""
                  id=""
                  index={4}
                  isDisabled={false}
                  isHovered={false}
                  onClick={[Function]}
                  onSelect={[Function]}
                  role="separator"
                  tooltipProps={Object {}}
                  variant="item"
                >
                  <li
                    className={null}
                    id=""
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    role="separator"
                  >
                    <div
                      className="pf-c-dropdown__separator"
                      href={null}
                      id=""
                      onSelect={[Function]}
                    />
                  </li>
                </InternalDropdownItem>
              </Component>
              <InternalDropdownItem
                className=""
                component="a"
                componentID=""
                context={
                  Object {
                    "keyHandler": [Function],
                    "sendRef": [Function],
                  }
                }
                href=""
                id=""
                index={5}
                isDisabled={false}
                isHovered={false}
                key=".$separated link"
                onClick={[Function]}
                onSelect={[Function]}
                role="none"
                tooltipProps={Object {}}
                variant="item"
              >
                <li
                  className={null}
                  id=""
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  role="none"
                >
                  <a
                    aria-disabled={false}
                    className="pf-c-dropdown__menu-item"
                    href={null}
                    id=""
                    onSelect={[Function]}
                  >
                    Separated Link
                  </a>
                </li>
              </InternalDropdownItem>
              <InternalDropdownItem
                className=""
                component="button"
                componentID=""
                context={
                  Object {
                    "keyHandler": [Function],
                    "sendRef": [Function],
                  }
                }
                href=""
                id=""
                index={6}
                isDisabled={false}
                isHovered={false}
                key=".$separated action"
                onClick={[Function]}
                onSelect={[Function]}
                role="none"
                tooltipProps={Object {}}
                variant="item"
              >
                <li
                  className={null}
                  id=""
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  role="none"
                >
                  <button
                    className="pf-c-dropdown__menu-item"
                    disabled={false}
                    href={null}
                    id=""
                    onSelect={[Function]}
                    type="button"
                  >
                    Separated Action
                  </button>
                </li>
              </InternalDropdownItem>
            </ul>
          </DropdownMenu>
        </div>
      </DropdownWithContext>
    </ComponentWithOuia>
  </Component>
</Component>
`;

exports[`KebabToggle plain 1`] = `
<Component
  dropdownItems={
    Array [
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Action
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={true}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Disabled Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={true}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Disabled Action
      </InternalDropdownItem>,
      <Unknown />,
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Separated Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Separated Action
      </InternalDropdownItem>,
    ]
  }
  isPlain={true}
  toggle={
    <Unknown
      id="Dropdown Toggle"
    />
  }
>
  <Component
    dropdownItems={
      Array [
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Action
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={true}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Disabled Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={true}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Disabled Action
        </InternalDropdownItem>,
        <Unknown />,
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Separated Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Separated Action
        </InternalDropdownItem>,
      ]
    }
    isPlain={true}
    toggle={
      <Unknown
        id="Dropdown Toggle"
      />
    }
  >
    <ComponentWithOuia
      component={[Function]}
      componentProps={
        Object {
          "dropdownItems": Array [
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Action
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Action
            </InternalDropdownItem>,
            <Unknown />,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Action
            </InternalDropdownItem>,
          ],
          "isPlain": true,
          "toggle": <Unknown
            id="Dropdown Toggle"
          />,
        }
      }
      consumerContext={null}
    >
      <DropdownWithContext
        autoFocus={true}
        className=""
        direction="down"
        dropdownItems={
          Array [
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Action
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Action
            </InternalDropdownItem>,
            <Unknown />,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Action
            </InternalDropdownItem>,
          ]
        }
        isGrouped={false}
        isOpen={false}
        isPlain={true}
        onSelect={[Function]}
        ouiaComponentType="Dropdown"
        ouiaContext={
          Object {
            "isOuia": false,
            "ouiaId": null,
          }
        }
        position="left"
        toggle={
          <Unknown
            id="Dropdown Toggle"
          />
        }
      >
        <div
          className="pf-c-dropdown"
        >
          <Component
            ariaHasPopup={true}
            id="Dropdown Toggle"
            isOpen={false}
            isPlain={true}
            key=".0"
            onEnter={[Function]}
            parentRef={
              Object {
                "current": <div
                  class="pf-c-dropdown"
                >
                  <button
                    aria-expanded="false"
                    aria-haspopup="true"
                    aria-label="Actions"
                    class="pf-c-dropdown__toggle pf-m-plain"
                    id="Dropdown Toggle"
                    type="button"
                  >
                    <svg
                      aria-hidden="true"
                      fill="currentColor"
                      height="1em"
                      role="img"
                      style="vertical-align: -0.125em;"
                      viewBox="0 0 192 512"
                      width="1em"
                    >
                      <path
                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                        transform=""
                      />
                    </svg>
                  </button>
                </div>,
              }
            }
          >
            <Toggle
              aria-label="Actions"
              ariaHasPopup={true}
              className=""
              id="Dropdown Toggle"
              isActive={false}
              isDisabled={false}
              isFocused={false}
              isHovered={false}
              isOpen={false}
              isPlain={true}
              isPrimary={false}
              isSplitButton={false}
              onEnter={[Function]}
              onToggle={[Function]}
              parentRef={
                Object {
                  "current": <div
                    class="pf-c-dropdown"
                  >
                    <button
                      aria-expanded="false"
                      aria-haspopup="true"
                      aria-label="Actions"
                      class="pf-c-dropdown__toggle pf-m-plain"
                      id="Dropdown Toggle"
                      type="button"
                    >
                      <svg
                        aria-hidden="true"
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style="vertical-align: -0.125em;"
                        viewBox="0 0 192 512"
                        width="1em"
                      >
                        <path
                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                          transform=""
                        />
                      </svg>
                    </button>
                  </div>,
                }
              }
            >
              <button
                aria-expanded={false}
                aria-haspopup={true}
                aria-label="Actions"
                className="pf-c-dropdown__toggle pf-m-plain"
                disabled={false}
                id="Dropdown Toggle"
                onClick={[Function]}
                onKeyDown={[Function]}
                type="button"
              >
                <EllipsisVIcon
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                >
                  <svg
                    aria-hidden={true}
                    aria-labelledby={null}
                    fill="currentColor"
                    height="1em"
                    role="img"
                    style={
                      Object {
                        "verticalAlign": "-0.125em",
                      }
                    }
                    viewBox="0 0 192 512"
                    width="1em"
                  >
                    <path
                      d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                      transform=""
                    />
                  </svg>
                </EllipsisVIcon>
              </button>
            </Toggle>
          </Component>
        </div>
      </DropdownWithContext>
    </ComponentWithOuia>
  </Component>
</Component>
`;

exports[`KebabToggle regular 1`] = `
<Component
  dropdownItems={
    Array [
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Action
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={true}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Disabled Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={true}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Disabled Action
      </InternalDropdownItem>,
      <Unknown />,
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Separated Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Separated Action
      </InternalDropdownItem>,
    ]
  }
  toggle={
    <Unknown
      id="Dropdown Toggle"
    />
  }
>
  <Component
    dropdownItems={
      Array [
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Action
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={true}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Disabled Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={true}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Disabled Action
        </InternalDropdownItem>,
        <Unknown />,
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Separated Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Separated Action
        </InternalDropdownItem>,
      ]
    }
    toggle={
      <Unknown
        id="Dropdown Toggle"
      />
    }
  >
    <ComponentWithOuia
      component={[Function]}
      componentProps={
        Object {
          "dropdownItems": Array [
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Action
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Action
            </InternalDropdownItem>,
            <Unknown />,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Action
            </InternalDropdownItem>,
          ],
          "toggle": <Unknown
            id="Dropdown Toggle"
          />,
        }
      }
      consumerContext={null}
    >
      <DropdownWithContext
        autoFocus={true}
        className=""
        direction="down"
        dropdownItems={
          Array [
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Action
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Action
            </InternalDropdownItem>,
            <Unknown />,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Action
            </InternalDropdownItem>,
          ]
        }
        isGrouped={false}
        isOpen={false}
        isPlain={false}
        onSelect={[Function]}
        ouiaComponentType="Dropdown"
        ouiaContext={
          Object {
            "isOuia": false,
            "ouiaId": null,
          }
        }
        position="left"
        toggle={
          <Unknown
            id="Dropdown Toggle"
          />
        }
      >
        <div
          className="pf-c-dropdown"
        >
          <Component
            ariaHasPopup={true}
            id="Dropdown Toggle"
            isOpen={false}
            isPlain={false}
            key=".0"
            onEnter={[Function]}
            parentRef={
              Object {
                "current": <div
                  class="pf-c-dropdown"
                >
                  <button
                    aria-expanded="false"
                    aria-haspopup="true"
                    aria-label="Actions"
                    class="pf-c-dropdown__toggle"
                    id="Dropdown Toggle"
                    type="button"
                  >
                    <svg
                      aria-hidden="true"
                      fill="currentColor"
                      height="1em"
                      role="img"
                      style="vertical-align: -0.125em;"
                      viewBox="0 0 192 512"
                      width="1em"
                    >
                      <path
                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                        transform=""
                      />
                    </svg>
                  </button>
                </div>,
              }
            }
          >
            <Toggle
              aria-label="Actions"
              ariaHasPopup={true}
              className=""
              id="Dropdown Toggle"
              isActive={false}
              isDisabled={false}
              isFocused={false}
              isHovered={false}
              isOpen={false}
              isPlain={false}
              isPrimary={false}
              isSplitButton={false}
              onEnter={[Function]}
              onToggle={[Function]}
              parentRef={
                Object {
                  "current": <div
                    class="pf-c-dropdown"
                  >
                    <button
                      aria-expanded="false"
                      aria-haspopup="true"
                      aria-label="Actions"
                      class="pf-c-dropdown__toggle"
                      id="Dropdown Toggle"
                      type="button"
                    >
                      <svg
                        aria-hidden="true"
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style="vertical-align: -0.125em;"
                        viewBox="0 0 192 512"
                        width="1em"
                      >
                        <path
                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                          transform=""
                        />
                      </svg>
                    </button>
                  </div>,
                }
              }
            >
              <button
                aria-expanded={false}
                aria-haspopup={true}
                aria-label="Actions"
                className="pf-c-dropdown__toggle"
                disabled={false}
                id="Dropdown Toggle"
                onClick={[Function]}
                onKeyDown={[Function]}
                type="button"
              >
                <EllipsisVIcon
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                >
                  <svg
                    aria-hidden={true}
                    aria-labelledby={null}
                    fill="currentColor"
                    height="1em"
                    role="img"
                    style={
                      Object {
                        "verticalAlign": "-0.125em",
                      }
                    }
                    viewBox="0 0 192 512"
                    width="1em"
                  >
                    <path
                      d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                      transform=""
                    />
                  </svg>
                </EllipsisVIcon>
              </button>
            </Toggle>
          </Component>
        </div>
      </DropdownWithContext>
    </ComponentWithOuia>
  </Component>
</Component>
`;

exports[`KebabToggle right aligned 1`] = `
<Component
  dropdownItems={
    Array [
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Action
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={true}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Disabled Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={true}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Disabled Action
      </InternalDropdownItem>,
      <Unknown />,
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Separated Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Separated Action
      </InternalDropdownItem>,
    ]
  }
  position="right"
  toggle={
    <Unknown
      id="Dropdown Toggle"
    />
  }
>
  <Component
    dropdownItems={
      Array [
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Action
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={true}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Disabled Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={true}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Disabled Action
        </InternalDropdownItem>,
        <Unknown />,
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Separated Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Separated Action
        </InternalDropdownItem>,
      ]
    }
    position="right"
    toggle={
      <Unknown
        id="Dropdown Toggle"
      />
    }
  >
    <ComponentWithOuia
      component={[Function]}
      componentProps={
        Object {
          "dropdownItems": Array [
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Action
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Action
            </InternalDropdownItem>,
            <Unknown />,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Action
            </InternalDropdownItem>,
          ],
          "position": "right",
          "toggle": <Unknown
            id="Dropdown Toggle"
          />,
        }
      }
      consumerContext={null}
    >
      <DropdownWithContext
        autoFocus={true}
        className=""
        direction="down"
        dropdownItems={
          Array [
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Action
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Action
            </InternalDropdownItem>,
            <Unknown />,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Action
            </InternalDropdownItem>,
          ]
        }
        isGrouped={false}
        isOpen={false}
        isPlain={false}
        onSelect={[Function]}
        ouiaComponentType="Dropdown"
        ouiaContext={
          Object {
            "isOuia": false,
            "ouiaId": null,
          }
        }
        position="right"
        toggle={
          <Unknown
            id="Dropdown Toggle"
          />
        }
      >
        <div
          className="pf-c-dropdown pf-m-align-right"
        >
          <Component
            ariaHasPopup={true}
            id="Dropdown Toggle"
            isOpen={false}
            isPlain={false}
            key=".0"
            onEnter={[Function]}
            parentRef={
              Object {
                "current": <div
                  class="pf-c-dropdown pf-m-align-right"
                >
                  <button
                    aria-expanded="false"
                    aria-haspopup="true"
                    aria-label="Actions"
                    class="pf-c-dropdown__toggle"
                    id="Dropdown Toggle"
                    type="button"
                  >
                    <svg
                      aria-hidden="true"
                      fill="currentColor"
                      height="1em"
                      role="img"
                      style="vertical-align: -0.125em;"
                      viewBox="0 0 192 512"
                      width="1em"
                    >
                      <path
                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                        transform=""
                      />
                    </svg>
                  </button>
                </div>,
              }
            }
          >
            <Toggle
              aria-label="Actions"
              ariaHasPopup={true}
              className=""
              id="Dropdown Toggle"
              isActive={false}
              isDisabled={false}
              isFocused={false}
              isHovered={false}
              isOpen={false}
              isPlain={false}
              isPrimary={false}
              isSplitButton={false}
              onEnter={[Function]}
              onToggle={[Function]}
              parentRef={
                Object {
                  "current": <div
                    class="pf-c-dropdown pf-m-align-right"
                  >
                    <button
                      aria-expanded="false"
                      aria-haspopup="true"
                      aria-label="Actions"
                      class="pf-c-dropdown__toggle"
                      id="Dropdown Toggle"
                      type="button"
                    >
                      <svg
                        aria-hidden="true"
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style="vertical-align: -0.125em;"
                        viewBox="0 0 192 512"
                        width="1em"
                      >
                        <path
                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                          transform=""
                        />
                      </svg>
                    </button>
                  </div>,
                }
              }
            >
              <button
                aria-expanded={false}
                aria-haspopup={true}
                aria-label="Actions"
                className="pf-c-dropdown__toggle"
                disabled={false}
                id="Dropdown Toggle"
                onClick={[Function]}
                onKeyDown={[Function]}
                type="button"
              >
                <EllipsisVIcon
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                >
                  <svg
                    aria-hidden={true}
                    aria-labelledby={null}
                    fill="currentColor"
                    height="1em"
                    role="img"
                    style={
                      Object {
                        "verticalAlign": "-0.125em",
                      }
                    }
                    viewBox="0 0 192 512"
                    width="1em"
                  >
                    <path
                      d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                      transform=""
                    />
                  </svg>
                </EllipsisVIcon>
              </button>
            </Toggle>
          </Component>
        </div>
      </DropdownWithContext>
    </ComponentWithOuia>
  </Component>
</Component>
`;

exports[`dropdown basic 1`] = `
<Component
  isOpen={true}
  toggle={
    <Unknown
      id="Dropdown Toggle"
    >
      Dropdown
    </Unknown>
  }
>
  <Component
    isOpen={true}
    toggle={
      <Unknown
        id="Dropdown Toggle"
      >
        Dropdown
      </Unknown>
    }
  >
    <ComponentWithOuia
      component={[Function]}
      componentProps={
        Object {
          "children": <div>
            BASIC
          </div>,
          "isOpen": true,
          "toggle": <Unknown
            id="Dropdown Toggle"
          >
            Dropdown
          </Unknown>,
        }
      }
      consumerContext={null}
    >
      <DropdownWithContext
        autoFocus={true}
        className=""
        direction="down"
        dropdownItems={Array []}
        isGrouped={false}
        isOpen={true}
        isPlain={false}
        onSelect={[Function]}
        ouiaComponentType="Dropdown"
        ouiaContext={
          Object {
            "isOuia": false,
            "ouiaId": null,
          }
        }
        position="left"
        toggle={
          <Unknown
            id="Dropdown Toggle"
          >
            Dropdown
          </Unknown>
        }
      >
        <div
          className="pf-c-dropdown pf-m-expanded"
        >
          <Component
            ariaHasPopup={false}
            id="Dropdown Toggle"
            isOpen={true}
            isPlain={false}
            key=".0"
            onEnter={[Function]}
            parentRef={
              Object {
                "current": <div
                  class="pf-c-dropdown pf-m-expanded"
                >
                  <button
                    aria-expanded="true"
                    aria-haspopup="false"
                    class="pf-c-dropdown__toggle"
                    id="Dropdown Toggle"
                    type="button"
                  >
                    <span
                      class="pf-c-dropdown__toggle-text"
                    >
                      Dropdown
                    </span>
                    <svg
                      aria-hidden="true"
                      class="pf-c-dropdown__toggle-icon"
                      fill="currentColor"
                      height="1em"
                      role="img"
                      style="vertical-align: -0.125em;"
                      viewBox="0 0 320 512"
                      width="1em"
                    >
                      <path
                        d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                        transform=""
                      />
                    </svg>
                  </button>
                  <div
                    class="pf-c-dropdown__menu"
                  >
                    <div>
                      BASIC
                    </div>
                  </div>
                </div>,
              }
            }
          >
            <Toggle
              ariaHasPopup={false}
              className=""
              id="Dropdown Toggle"
              isActive={false}
              isDisabled={false}
              isFocused={false}
              isHovered={false}
              isOpen={true}
              isPlain={false}
              isPrimary={false}
              isSplitButton={false}
              onEnter={[Function]}
              onToggle={[Function]}
              parentRef={
                Object {
                  "current": <div
                    class="pf-c-dropdown pf-m-expanded"
                  >
                    <button
                      aria-expanded="true"
                      aria-haspopup="false"
                      class="pf-c-dropdown__toggle"
                      id="Dropdown Toggle"
                      type="button"
                    >
                      <span
                        class="pf-c-dropdown__toggle-text"
                      >
                        Dropdown
                      </span>
                      <svg
                        aria-hidden="true"
                        class="pf-c-dropdown__toggle-icon"
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style="vertical-align: -0.125em;"
                        viewBox="0 0 320 512"
                        width="1em"
                      >
                        <path
                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                          transform=""
                        />
                      </svg>
                    </button>
                    <div
                      class="pf-c-dropdown__menu"
                    >
                      <div>
                        BASIC
                      </div>
                    </div>
                  </div>,
                }
              }
            >
              <button
                aria-expanded={true}
                aria-haspopup={false}
                className="pf-c-dropdown__toggle"
                disabled={false}
                id="Dropdown Toggle"
                onClick={[Function]}
                onKeyDown={[Function]}
                type="button"
              >
                <span
                  className="pf-c-dropdown__toggle-text"
                >
                  Dropdown
                </span>
                <CaretDownIcon
                  className="pf-c-dropdown__toggle-icon"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                >
                  <svg
                    aria-hidden={true}
                    aria-labelledby={null}
                    className="pf-c-dropdown__toggle-icon"
                    fill="currentColor"
                    height="1em"
                    role="img"
                    style={
                      Object {
                        "verticalAlign": "-0.125em",
                      }
                    }
                    viewBox="0 0 320 512"
                    width="1em"
                  >
                    <path
                      d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                      transform=""
                    />
                  </svg>
                </CaretDownIcon>
              </button>
            </Toggle>
          </Component>
          <DropdownMenu
            aria-labelledby="Dropdown Toggle"
            autoFocus={false}
            className=""
            component="div"
            isGrouped={false}
            isOpen={true}
            openedOnEnter={false}
            position="left"
          >
            <div
              className="pf-c-dropdown__menu"
              hidden={false}
              onClick={[Function]}
            >
              <div
                key=".0"
              >
                BASIC
              </div>
            </div>
          </DropdownMenu>
        </div>
      </DropdownWithContext>
    </ComponentWithOuia>
  </Component>
</Component>
`;

exports[`dropdown dropup + right aligned 1`] = `
<Component
  direction="up"
  dropdownItems={
    Array [
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Action
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={true}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Disabled Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={true}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Disabled Action
      </InternalDropdownItem>,
      <Unknown />,
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Separated Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Separated Action
      </InternalDropdownItem>,
    ]
  }
  position="right"
  toggle={
    <Unknown
      id="Dropdown Toggle"
    >
      Dropdown
    </Unknown>
  }
>
  <Component
    direction="up"
    dropdownItems={
      Array [
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Action
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={true}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Disabled Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={true}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Disabled Action
        </InternalDropdownItem>,
        <Unknown />,
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Separated Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Separated Action
        </InternalDropdownItem>,
      ]
    }
    position="right"
    toggle={
      <Unknown
        id="Dropdown Toggle"
      >
        Dropdown
      </Unknown>
    }
  >
    <ComponentWithOuia
      component={[Function]}
      componentProps={
        Object {
          "direction": "up",
          "dropdownItems": Array [
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Action
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Action
            </InternalDropdownItem>,
            <Unknown />,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Action
            </InternalDropdownItem>,
          ],
          "position": "right",
          "toggle": <Unknown
            id="Dropdown Toggle"
          >
            Dropdown
          </Unknown>,
        }
      }
      consumerContext={null}
    >
      <DropdownWithContext
        autoFocus={true}
        className=""
        direction="up"
        dropdownItems={
          Array [
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Action
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Action
            </InternalDropdownItem>,
            <Unknown />,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Action
            </InternalDropdownItem>,
          ]
        }
        isGrouped={false}
        isOpen={false}
        isPlain={false}
        onSelect={[Function]}
        ouiaComponentType="Dropdown"
        ouiaContext={
          Object {
            "isOuia": false,
            "ouiaId": null,
          }
        }
        position="right"
        toggle={
          <Unknown
            id="Dropdown Toggle"
          >
            Dropdown
          </Unknown>
        }
      >
        <div
          className="pf-c-dropdown pf-m-top pf-m-align-right"
        >
          <Component
            ariaHasPopup={true}
            id="Dropdown Toggle"
            isOpen={false}
            isPlain={false}
            key=".0"
            onEnter={[Function]}
            parentRef={
              Object {
                "current": <div
                  class="pf-c-dropdown pf-m-top pf-m-align-right"
                >
                  <button
                    aria-expanded="false"
                    aria-haspopup="true"
                    class="pf-c-dropdown__toggle"
                    id="Dropdown Toggle"
                    type="button"
                  >
                    <span
                      class="pf-c-dropdown__toggle-text"
                    >
                      Dropdown
                    </span>
                    <svg
                      aria-hidden="true"
                      class="pf-c-dropdown__toggle-icon"
                      fill="currentColor"
                      height="1em"
                      role="img"
                      style="vertical-align: -0.125em;"
                      viewBox="0 0 320 512"
                      width="1em"
                    >
                      <path
                        d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                        transform=""
                      />
                    </svg>
                  </button>
                </div>,
              }
            }
          >
            <Toggle
              ariaHasPopup={true}
              className=""
              id="Dropdown Toggle"
              isActive={false}
              isDisabled={false}
              isFocused={false}
              isHovered={false}
              isOpen={false}
              isPlain={false}
              isPrimary={false}
              isSplitButton={false}
              onEnter={[Function]}
              onToggle={[Function]}
              parentRef={
                Object {
                  "current": <div
                    class="pf-c-dropdown pf-m-top pf-m-align-right"
                  >
                    <button
                      aria-expanded="false"
                      aria-haspopup="true"
                      class="pf-c-dropdown__toggle"
                      id="Dropdown Toggle"
                      type="button"
                    >
                      <span
                        class="pf-c-dropdown__toggle-text"
                      >
                        Dropdown
                      </span>
                      <svg
                        aria-hidden="true"
                        class="pf-c-dropdown__toggle-icon"
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style="vertical-align: -0.125em;"
                        viewBox="0 0 320 512"
                        width="1em"
                      >
                        <path
                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                          transform=""
                        />
                      </svg>
                    </button>
                  </div>,
                }
              }
            >
              <button
                aria-expanded={false}
                aria-haspopup={true}
                className="pf-c-dropdown__toggle"
                disabled={false}
                id="Dropdown Toggle"
                onClick={[Function]}
                onKeyDown={[Function]}
                type="button"
              >
                <span
                  className="pf-c-dropdown__toggle-text"
                >
                  Dropdown
                </span>
                <CaretDownIcon
                  className="pf-c-dropdown__toggle-icon"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                >
                  <svg
                    aria-hidden={true}
                    aria-labelledby={null}
                    className="pf-c-dropdown__toggle-icon"
                    fill="currentColor"
                    height="1em"
                    role="img"
                    style={
                      Object {
                        "verticalAlign": "-0.125em",
                      }
                    }
                    viewBox="0 0 320 512"
                    width="1em"
                  >
                    <path
                      d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                      transform=""
                    />
                  </svg>
                </CaretDownIcon>
              </button>
            </Toggle>
          </Component>
        </div>
      </DropdownWithContext>
    </ComponentWithOuia>
  </Component>
</Component>
`;

exports[`dropdown dropup 1`] = `
<Component
  direction="up"
  dropdownItems={
    Array [
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Action
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={true}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Disabled Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={true}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Disabled Action
      </InternalDropdownItem>,
      <Unknown />,
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Separated Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Separated Action
      </InternalDropdownItem>,
    ]
  }
  toggle={
    <Unknown
      id="Dropdown Toggle"
    >
      Dropdown
    </Unknown>
  }
>
  <Component
    direction="up"
    dropdownItems={
      Array [
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Action
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={true}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Disabled Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={true}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Disabled Action
        </InternalDropdownItem>,
        <Unknown />,
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Separated Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Separated Action
        </InternalDropdownItem>,
      ]
    }
    toggle={
      <Unknown
        id="Dropdown Toggle"
      >
        Dropdown
      </Unknown>
    }
  >
    <ComponentWithOuia
      component={[Function]}
      componentProps={
        Object {
          "direction": "up",
          "dropdownItems": Array [
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Action
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Action
            </InternalDropdownItem>,
            <Unknown />,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Action
            </InternalDropdownItem>,
          ],
          "toggle": <Unknown
            id="Dropdown Toggle"
          >
            Dropdown
          </Unknown>,
        }
      }
      consumerContext={null}
    >
      <DropdownWithContext
        autoFocus={true}
        className=""
        direction="up"
        dropdownItems={
          Array [
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Action
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Action
            </InternalDropdownItem>,
            <Unknown />,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Action
            </InternalDropdownItem>,
          ]
        }
        isGrouped={false}
        isOpen={false}
        isPlain={false}
        onSelect={[Function]}
        ouiaComponentType="Dropdown"
        ouiaContext={
          Object {
            "isOuia": false,
            "ouiaId": null,
          }
        }
        position="left"
        toggle={
          <Unknown
            id="Dropdown Toggle"
          >
            Dropdown
          </Unknown>
        }
      >
        <div
          className="pf-c-dropdown pf-m-top"
        >
          <Component
            ariaHasPopup={true}
            id="Dropdown Toggle"
            isOpen={false}
            isPlain={false}
            key=".0"
            onEnter={[Function]}
            parentRef={
              Object {
                "current": <div
                  class="pf-c-dropdown pf-m-top"
                >
                  <button
                    aria-expanded="false"
                    aria-haspopup="true"
                    class="pf-c-dropdown__toggle"
                    id="Dropdown Toggle"
                    type="button"
                  >
                    <span
                      class="pf-c-dropdown__toggle-text"
                    >
                      Dropdown
                    </span>
                    <svg
                      aria-hidden="true"
                      class="pf-c-dropdown__toggle-icon"
                      fill="currentColor"
                      height="1em"
                      role="img"
                      style="vertical-align: -0.125em;"
                      viewBox="0 0 320 512"
                      width="1em"
                    >
                      <path
                        d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                        transform=""
                      />
                    </svg>
                  </button>
                </div>,
              }
            }
          >
            <Toggle
              ariaHasPopup={true}
              className=""
              id="Dropdown Toggle"
              isActive={false}
              isDisabled={false}
              isFocused={false}
              isHovered={false}
              isOpen={false}
              isPlain={false}
              isPrimary={false}
              isSplitButton={false}
              onEnter={[Function]}
              onToggle={[Function]}
              parentRef={
                Object {
                  "current": <div
                    class="pf-c-dropdown pf-m-top"
                  >
                    <button
                      aria-expanded="false"
                      aria-haspopup="true"
                      class="pf-c-dropdown__toggle"
                      id="Dropdown Toggle"
                      type="button"
                    >
                      <span
                        class="pf-c-dropdown__toggle-text"
                      >
                        Dropdown
                      </span>
                      <svg
                        aria-hidden="true"
                        class="pf-c-dropdown__toggle-icon"
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style="vertical-align: -0.125em;"
                        viewBox="0 0 320 512"
                        width="1em"
                      >
                        <path
                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                          transform=""
                        />
                      </svg>
                    </button>
                  </div>,
                }
              }
            >
              <button
                aria-expanded={false}
                aria-haspopup={true}
                className="pf-c-dropdown__toggle"
                disabled={false}
                id="Dropdown Toggle"
                onClick={[Function]}
                onKeyDown={[Function]}
                type="button"
              >
                <span
                  className="pf-c-dropdown__toggle-text"
                >
                  Dropdown
                </span>
                <CaretDownIcon
                  className="pf-c-dropdown__toggle-icon"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                >
                  <svg
                    aria-hidden={true}
                    aria-labelledby={null}
                    className="pf-c-dropdown__toggle-icon"
                    fill="currentColor"
                    height="1em"
                    role="img"
                    style={
                      Object {
                        "verticalAlign": "-0.125em",
                      }
                    }
                    viewBox="0 0 320 512"
                    width="1em"
                  >
                    <path
                      d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                      transform=""
                    />
                  </svg>
                </CaretDownIcon>
              </button>
            </Toggle>
          </Component>
        </div>
      </DropdownWithContext>
    </ComponentWithOuia>
  </Component>
</Component>
`;

exports[`dropdown expanded 1`] = `
<Component
  dropdownItems={
    Array [
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Action
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={true}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Disabled Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={true}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Disabled Action
      </InternalDropdownItem>,
      <Unknown />,
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Separated Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Separated Action
      </InternalDropdownItem>,
    ]
  }
  isOpen={true}
  toggle={
    <Unknown
      id="Dropdown Toggle"
    >
      Dropdown
    </Unknown>
  }
>
  <Component
    dropdownItems={
      Array [
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Action
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={true}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Disabled Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={true}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Disabled Action
        </InternalDropdownItem>,
        <Unknown />,
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Separated Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Separated Action
        </InternalDropdownItem>,
      ]
    }
    isOpen={true}
    toggle={
      <Unknown
        id="Dropdown Toggle"
      >
        Dropdown
      </Unknown>
    }
  >
    <ComponentWithOuia
      component={[Function]}
      componentProps={
        Object {
          "dropdownItems": Array [
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Action
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Action
            </InternalDropdownItem>,
            <Unknown />,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Action
            </InternalDropdownItem>,
          ],
          "isOpen": true,
          "toggle": <Unknown
            id="Dropdown Toggle"
          >
            Dropdown
          </Unknown>,
        }
      }
      consumerContext={null}
    >
      <DropdownWithContext
        autoFocus={true}
        className=""
        direction="down"
        dropdownItems={
          Array [
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Action
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Action
            </InternalDropdownItem>,
            <Unknown />,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Action
            </InternalDropdownItem>,
          ]
        }
        isGrouped={false}
        isOpen={true}
        isPlain={false}
        onSelect={[Function]}
        ouiaComponentType="Dropdown"
        ouiaContext={
          Object {
            "isOuia": false,
            "ouiaId": null,
          }
        }
        position="left"
        toggle={
          <Unknown
            id="Dropdown Toggle"
          >
            Dropdown
          </Unknown>
        }
      >
        <div
          className="pf-c-dropdown pf-m-expanded"
        >
          <Component
            ariaHasPopup={true}
            id="Dropdown Toggle"
            isOpen={true}
            isPlain={false}
            key=".0"
            onEnter={[Function]}
            parentRef={
              Object {
                "current": <div
                  class="pf-c-dropdown pf-m-expanded"
                >
                  <button
                    aria-expanded="true"
                    aria-haspopup="true"
                    class="pf-c-dropdown__toggle"
                    id="Dropdown Toggle"
                    type="button"
                  >
                    <span
                      class="pf-c-dropdown__toggle-text"
                    >
                      Dropdown
                    </span>
                    <svg
                      aria-hidden="true"
                      class="pf-c-dropdown__toggle-icon"
                      fill="currentColor"
                      height="1em"
                      role="img"
                      style="vertical-align: -0.125em;"
                      viewBox="0 0 320 512"
                      width="1em"
                    >
                      <path
                        d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                        transform=""
                      />
                    </svg>
                  </button>
                  <ul
                    aria-labelledby="Dropdown Toggle"
                    class="pf-c-dropdown__menu"
                    role="menu"
                  >
                    <li
                      id=""
                      role="none"
                    >
                      <a
                        aria-disabled="false"
                        class="pf-c-dropdown__menu-item"
                        id=""
                      >
                        Link
                      </a>
                    </li>
                    <li
                      id=""
                      role="none"
                    >
                      <button
                        class="pf-c-dropdown__menu-item"
                        id=""
                        type="button"
                      >
                        Action
                      </button>
                    </li>
                    <li
                      id=""
                      role="none"
                    >
                      <a
                        aria-disabled="true"
                        class="pf-m-disabled pf-c-dropdown__menu-item"
                        id=""
                        tabindex="-1"
                      >
                        Disabled Link
                      </a>
                    </li>
                    <li
                      id=""
                      role="none"
                    >
                      <button
                        class="pf-m-disabled pf-c-dropdown__menu-item"
                        disabled=""
                        id=""
                        type="button"
                      >
                        Disabled Action
                      </button>
                    </li>
                    <li
                      id=""
                      role="separator"
                    >
                      <div
                        class="pf-c-dropdown__separator"
                        id=""
                      />
                    </li>
                    <li
                      id=""
                      role="none"
                    >
                      <a
                        aria-disabled="false"
                        class="pf-c-dropdown__menu-item"
                        id=""
                      >
                        Separated Link
                      </a>
                    </li>
                    <li
                      id=""
                      role="none"
                    >
                      <button
                        class="pf-c-dropdown__menu-item"
                        id=""
                        type="button"
                      >
                        Separated Action
                      </button>
                    </li>
                  </ul>
                </div>,
              }
            }
          >
            <Toggle
              ariaHasPopup={true}
              className=""
              id="Dropdown Toggle"
              isActive={false}
              isDisabled={false}
              isFocused={false}
              isHovered={false}
              isOpen={true}
              isPlain={false}
              isPrimary={false}
              isSplitButton={false}
              onEnter={[Function]}
              onToggle={[Function]}
              parentRef={
                Object {
                  "current": <div
                    class="pf-c-dropdown pf-m-expanded"
                  >
                    <button
                      aria-expanded="true"
                      aria-haspopup="true"
                      class="pf-c-dropdown__toggle"
                      id="Dropdown Toggle"
                      type="button"
                    >
                      <span
                        class="pf-c-dropdown__toggle-text"
                      >
                        Dropdown
                      </span>
                      <svg
                        aria-hidden="true"
                        class="pf-c-dropdown__toggle-icon"
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style="vertical-align: -0.125em;"
                        viewBox="0 0 320 512"
                        width="1em"
                      >
                        <path
                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                          transform=""
                        />
                      </svg>
                    </button>
                    <ul
                      aria-labelledby="Dropdown Toggle"
                      class="pf-c-dropdown__menu"
                      role="menu"
                    >
                      <li
                        id=""
                        role="none"
                      >
                        <a
                          aria-disabled="false"
                          class="pf-c-dropdown__menu-item"
                          id=""
                        >
                          Link
                        </a>
                      </li>
                      <li
                        id=""
                        role="none"
                      >
                        <button
                          class="pf-c-dropdown__menu-item"
                          id=""
                          type="button"
                        >
                          Action
                        </button>
                      </li>
                      <li
                        id=""
                        role="none"
                      >
                        <a
                          aria-disabled="true"
                          class="pf-m-disabled pf-c-dropdown__menu-item"
                          id=""
                          tabindex="-1"
                        >
                          Disabled Link
                        </a>
                      </li>
                      <li
                        id=""
                        role="none"
                      >
                        <button
                          class="pf-m-disabled pf-c-dropdown__menu-item"
                          disabled=""
                          id=""
                          type="button"
                        >
                          Disabled Action
                        </button>
                      </li>
                      <li
                        id=""
                        role="separator"
                      >
                        <div
                          class="pf-c-dropdown__separator"
                          id=""
                        />
                      </li>
                      <li
                        id=""
                        role="none"
                      >
                        <a
                          aria-disabled="false"
                          class="pf-c-dropdown__menu-item"
                          id=""
                        >
                          Separated Link
                        </a>
                      </li>
                      <li
                        id=""
                        role="none"
                      >
                        <button
                          class="pf-c-dropdown__menu-item"
                          id=""
                          type="button"
                        >
                          Separated Action
                        </button>
                      </li>
                    </ul>
                  </div>,
                }
              }
            >
              <button
                aria-expanded={true}
                aria-haspopup={true}
                className="pf-c-dropdown__toggle"
                disabled={false}
                id="Dropdown Toggle"
                onClick={[Function]}
                onKeyDown={[Function]}
                type="button"
              >
                <span
                  className="pf-c-dropdown__toggle-text"
                >
                  Dropdown
                </span>
                <CaretDownIcon
                  className="pf-c-dropdown__toggle-icon"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                >
                  <svg
                    aria-hidden={true}
                    aria-labelledby={null}
                    className="pf-c-dropdown__toggle-icon"
                    fill="currentColor"
                    height="1em"
                    role="img"
                    style={
                      Object {
                        "verticalAlign": "-0.125em",
                      }
                    }
                    viewBox="0 0 320 512"
                    width="1em"
                  >
                    <path
                      d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                      transform=""
                    />
                  </svg>
                </CaretDownIcon>
              </button>
            </Toggle>
          </Component>
          <DropdownMenu
            aria-labelledby="Dropdown Toggle"
            autoFocus={false}
            className=""
            component="ul"
            isGrouped={false}
            isOpen={true}
            openedOnEnter={false}
            position="left"
          >
            <ul
              aria-labelledby="Dropdown Toggle"
              autoFocus={false}
              className="pf-c-dropdown__menu"
              hidden={false}
              role="menu"
            >
              <InternalDropdownItem
                className=""
                component="a"
                componentID=""
                context={
                  Object {
                    "keyHandler": [Function],
                    "sendRef": [Function],
                  }
                }
                href=""
                id=""
                index={0}
                isDisabled={false}
                isHovered={false}
                key=".$link"
                onClick={[Function]}
                onSelect={[Function]}
                role="none"
                tooltipProps={Object {}}
                variant="item"
              >
                <li
                  className={null}
                  id=""
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  role="none"
                >
                  <a
                    aria-disabled={false}
                    className="pf-c-dropdown__menu-item"
                    href={null}
                    id=""
                    onSelect={[Function]}
                  >
                    Link
                  </a>
                </li>
              </InternalDropdownItem>
              <InternalDropdownItem
                className=""
                component="button"
                componentID=""
                context={
                  Object {
                    "keyHandler": [Function],
                    "sendRef": [Function],
                  }
                }
                href=""
                id=""
                index={1}
                isDisabled={false}
                isHovered={false}
                key=".$action"
                onClick={[Function]}
                onSelect={[Function]}
                role="none"
                tooltipProps={Object {}}
                variant="item"
              >
                <li
                  className={null}
                  id=""
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  role="none"
                >
                  <button
                    className="pf-c-dropdown__menu-item"
                    disabled={false}
                    href={null}
                    id=""
                    onSelect={[Function]}
                    type="button"
                  >
                    Action
                  </button>
                </li>
              </InternalDropdownItem>
              <InternalDropdownItem
                className=""
                component="a"
                componentID=""
                context={
                  Object {
                    "keyHandler": [Function],
                    "sendRef": [Function],
                  }
                }
                href=""
                id=""
                index={2}
                isDisabled={true}
                isHovered={false}
                key=".$disabled link"
                onClick={[Function]}
                onSelect={[Function]}
                role="none"
                tooltipProps={Object {}}
                variant="item"
              >
                <li
                  className={null}
                  id=""
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  role="none"
                >
                  <a
                    aria-disabled={true}
                    className="pf-m-disabled pf-c-dropdown__menu-item"
                    href={null}
                    id=""
                    onSelect={[Function]}
                    tabIndex={-1}
                  >
                    Disabled Link
                  </a>
                </li>
              </InternalDropdownItem>
              <InternalDropdownItem
                className=""
                component="button"
                componentID=""
                context={
                  Object {
                    "keyHandler": [Function],
                    "sendRef": [Function],
                  }
                }
                href=""
                id=""
                index={3}
                isDisabled={true}
                isHovered={false}
                key=".$disabled action"
                onClick={[Function]}
                onSelect={[Function]}
                role="none"
                tooltipProps={Object {}}
                variant="item"
              >
                <li
                  className={null}
                  id=""
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  role="none"
                >
                  <button
                    className="pf-m-disabled pf-c-dropdown__menu-item"
                    disabled={true}
                    href={null}
                    id=""
                    onSelect={[Function]}
                    type="button"
                  >
                    Disabled Action
                  </button>
                </li>
              </InternalDropdownItem>
              <Component
                index={4}
                key=".$separator"
              >
                <InternalDropdownItem
                  className="pf-c-dropdown__separator"
                  component="div"
                  componentID=""
                  context={
                    Object {
                      "keyHandler": [Function],
                      "sendRef": [Function],
                    }
                  }
                  href=""
                  id=""
                  index={4}
                  isDisabled={false}
                  isHovered={false}
                  onClick={[Function]}
                  onSelect={[Function]}
                  role="separator"
                  tooltipProps={Object {}}
                  variant="item"
                >
                  <li
                    className={null}
                    id=""
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    role="separator"
                  >
                    <div
                      className="pf-c-dropdown__separator"
                      href={null}
                      id=""
                      onSelect={[Function]}
                    />
                  </li>
                </InternalDropdownItem>
              </Component>
              <InternalDropdownItem
                className=""
                component="a"
                componentID=""
                context={
                  Object {
                    "keyHandler": [Function],
                    "sendRef": [Function],
                  }
                }
                href=""
                id=""
                index={5}
                isDisabled={false}
                isHovered={false}
                key=".$separated link"
                onClick={[Function]}
                onSelect={[Function]}
                role="none"
                tooltipProps={Object {}}
                variant="item"
              >
                <li
                  className={null}
                  id=""
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  role="none"
                >
                  <a
                    aria-disabled={false}
                    className="pf-c-dropdown__menu-item"
                    href={null}
                    id=""
                    onSelect={[Function]}
                  >
                    Separated Link
                  </a>
                </li>
              </InternalDropdownItem>
              <InternalDropdownItem
                className=""
                component="button"
                componentID=""
                context={
                  Object {
                    "keyHandler": [Function],
                    "sendRef": [Function],
                  }
                }
                href=""
                id=""
                index={6}
                isDisabled={false}
                isHovered={false}
                key=".$separated action"
                onClick={[Function]}
                onSelect={[Function]}
                role="none"
                tooltipProps={Object {}}
                variant="item"
              >
                <li
                  className={null}
                  id=""
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  role="none"
                >
                  <button
                    className="pf-c-dropdown__menu-item"
                    disabled={false}
                    href={null}
                    id=""
                    onSelect={[Function]}
                    type="button"
                  >
                    Separated Action
                  </button>
                </li>
              </InternalDropdownItem>
            </ul>
          </DropdownMenu>
        </div>
      </DropdownWithContext>
    </ComponentWithOuia>
  </Component>
</Component>
`;

exports[`dropdown primary 1`] = `
<Component
  dropdownItems={
    Array [
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Action
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={true}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Disabled Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={true}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Disabled Action
      </InternalDropdownItem>,
      <Unknown />,
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Separated Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Separated Action
      </InternalDropdownItem>,
    ]
  }
  toggle={
    <Unknown
      id="Dropdown Toggle"
      isPrimary={true}
    >
      Dropdown
    </Unknown>
  }
>
  <Component
    dropdownItems={
      Array [
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Action
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={true}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Disabled Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={true}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Disabled Action
        </InternalDropdownItem>,
        <Unknown />,
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Separated Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Separated Action
        </InternalDropdownItem>,
      ]
    }
    toggle={
      <Unknown
        id="Dropdown Toggle"
        isPrimary={true}
      >
        Dropdown
      </Unknown>
    }
  >
    <ComponentWithOuia
      component={[Function]}
      componentProps={
        Object {
          "dropdownItems": Array [
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Action
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Action
            </InternalDropdownItem>,
            <Unknown />,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Action
            </InternalDropdownItem>,
          ],
          "toggle": <Unknown
            id="Dropdown Toggle"
            isPrimary={true}
          >
            Dropdown
          </Unknown>,
        }
      }
      consumerContext={null}
    >
      <DropdownWithContext
        autoFocus={true}
        className=""
        direction="down"
        dropdownItems={
          Array [
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Action
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Action
            </InternalDropdownItem>,
            <Unknown />,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Action
            </InternalDropdownItem>,
          ]
        }
        isGrouped={false}
        isOpen={false}
        isPlain={false}
        onSelect={[Function]}
        ouiaComponentType="Dropdown"
        ouiaContext={
          Object {
            "isOuia": false,
            "ouiaId": null,
          }
        }
        position="left"
        toggle={
          <Unknown
            id="Dropdown Toggle"
            isPrimary={true}
          >
            Dropdown
          </Unknown>
        }
      >
        <div
          className="pf-c-dropdown"
        >
          <Component
            ariaHasPopup={true}
            id="Dropdown Toggle"
            isOpen={false}
            isPlain={false}
            isPrimary={true}
            key=".0"
            onEnter={[Function]}
            parentRef={
              Object {
                "current": <div
                  class="pf-c-dropdown"
                >
                  <button
                    aria-expanded="false"
                    aria-haspopup="true"
                    class="pf-c-dropdown__toggle pf-m-primary"
                    id="Dropdown Toggle"
                    type="button"
                  >
                    <span
                      class="pf-c-dropdown__toggle-text"
                    >
                      Dropdown
                    </span>
                    <svg
                      aria-hidden="true"
                      class="pf-c-dropdown__toggle-icon"
                      fill="currentColor"
                      height="1em"
                      role="img"
                      style="vertical-align: -0.125em;"
                      viewBox="0 0 320 512"
                      width="1em"
                    >
                      <path
                        d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                        transform=""
                      />
                    </svg>
                  </button>
                </div>,
              }
            }
          >
            <Toggle
              ariaHasPopup={true}
              className=""
              id="Dropdown Toggle"
              isActive={false}
              isDisabled={false}
              isFocused={false}
              isHovered={false}
              isOpen={false}
              isPlain={false}
              isPrimary={true}
              isSplitButton={false}
              onEnter={[Function]}
              onToggle={[Function]}
              parentRef={
                Object {
                  "current": <div
                    class="pf-c-dropdown"
                  >
                    <button
                      aria-expanded="false"
                      aria-haspopup="true"
                      class="pf-c-dropdown__toggle pf-m-primary"
                      id="Dropdown Toggle"
                      type="button"
                    >
                      <span
                        class="pf-c-dropdown__toggle-text"
                      >
                        Dropdown
                      </span>
                      <svg
                        aria-hidden="true"
                        class="pf-c-dropdown__toggle-icon"
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style="vertical-align: -0.125em;"
                        viewBox="0 0 320 512"
                        width="1em"
                      >
                        <path
                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                          transform=""
                        />
                      </svg>
                    </button>
                  </div>,
                }
              }
            >
              <button
                aria-expanded={false}
                aria-haspopup={true}
                className="pf-c-dropdown__toggle pf-m-primary"
                disabled={false}
                id="Dropdown Toggle"
                onClick={[Function]}
                onKeyDown={[Function]}
                type="button"
              >
                <span
                  className="pf-c-dropdown__toggle-text"
                >
                  Dropdown
                </span>
                <CaretDownIcon
                  className="pf-c-dropdown__toggle-icon"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                >
                  <svg
                    aria-hidden={true}
                    aria-labelledby={null}
                    className="pf-c-dropdown__toggle-icon"
                    fill="currentColor"
                    height="1em"
                    role="img"
                    style={
                      Object {
                        "verticalAlign": "-0.125em",
                      }
                    }
                    viewBox="0 0 320 512"
                    width="1em"
                  >
                    <path
                      d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                      transform=""
                    />
                  </svg>
                </CaretDownIcon>
              </button>
            </Toggle>
          </Component>
        </div>
      </DropdownWithContext>
    </ComponentWithOuia>
  </Component>
</Component>
`;

exports[`dropdown regular 1`] = `
<Component
  dropdownItems={
    Array [
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Action
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={true}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Disabled Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={true}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Disabled Action
      </InternalDropdownItem>,
      <Unknown />,
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Separated Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Separated Action
      </InternalDropdownItem>,
    ]
  }
  toggle={
    <Unknown
      id="Dropdown Toggle"
    >
      Dropdown
    </Unknown>
  }
>
  <Component
    dropdownItems={
      Array [
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Action
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={true}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Disabled Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={true}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Disabled Action
        </InternalDropdownItem>,
        <Unknown />,
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Separated Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Separated Action
        </InternalDropdownItem>,
      ]
    }
    toggle={
      <Unknown
        id="Dropdown Toggle"
      >
        Dropdown
      </Unknown>
    }
  >
    <ComponentWithOuia
      component={[Function]}
      componentProps={
        Object {
          "dropdownItems": Array [
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Action
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Action
            </InternalDropdownItem>,
            <Unknown />,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Action
            </InternalDropdownItem>,
          ],
          "toggle": <Unknown
            id="Dropdown Toggle"
          >
            Dropdown
          </Unknown>,
        }
      }
      consumerContext={null}
    >
      <DropdownWithContext
        autoFocus={true}
        className=""
        direction="down"
        dropdownItems={
          Array [
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Action
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Action
            </InternalDropdownItem>,
            <Unknown />,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Action
            </InternalDropdownItem>,
          ]
        }
        isGrouped={false}
        isOpen={false}
        isPlain={false}
        onSelect={[Function]}
        ouiaComponentType="Dropdown"
        ouiaContext={
          Object {
            "isOuia": false,
            "ouiaId": null,
          }
        }
        position="left"
        toggle={
          <Unknown
            id="Dropdown Toggle"
          >
            Dropdown
          </Unknown>
        }
      >
        <div
          className="pf-c-dropdown"
        >
          <Component
            ariaHasPopup={true}
            id="Dropdown Toggle"
            isOpen={false}
            isPlain={false}
            key=".0"
            onEnter={[Function]}
            parentRef={
              Object {
                "current": <div
                  class="pf-c-dropdown"
                >
                  <button
                    aria-expanded="false"
                    aria-haspopup="true"
                    class="pf-c-dropdown__toggle"
                    id="Dropdown Toggle"
                    type="button"
                  >
                    <span
                      class="pf-c-dropdown__toggle-text"
                    >
                      Dropdown
                    </span>
                    <svg
                      aria-hidden="true"
                      class="pf-c-dropdown__toggle-icon"
                      fill="currentColor"
                      height="1em"
                      role="img"
                      style="vertical-align: -0.125em;"
                      viewBox="0 0 320 512"
                      width="1em"
                    >
                      <path
                        d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                        transform=""
                      />
                    </svg>
                  </button>
                </div>,
              }
            }
          >
            <Toggle
              ariaHasPopup={true}
              className=""
              id="Dropdown Toggle"
              isActive={false}
              isDisabled={false}
              isFocused={false}
              isHovered={false}
              isOpen={false}
              isPlain={false}
              isPrimary={false}
              isSplitButton={false}
              onEnter={[Function]}
              onToggle={[Function]}
              parentRef={
                Object {
                  "current": <div
                    class="pf-c-dropdown"
                  >
                    <button
                      aria-expanded="false"
                      aria-haspopup="true"
                      class="pf-c-dropdown__toggle"
                      id="Dropdown Toggle"
                      type="button"
                    >
                      <span
                        class="pf-c-dropdown__toggle-text"
                      >
                        Dropdown
                      </span>
                      <svg
                        aria-hidden="true"
                        class="pf-c-dropdown__toggle-icon"
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style="vertical-align: -0.125em;"
                        viewBox="0 0 320 512"
                        width="1em"
                      >
                        <path
                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                          transform=""
                        />
                      </svg>
                    </button>
                  </div>,
                }
              }
            >
              <button
                aria-expanded={false}
                aria-haspopup={true}
                className="pf-c-dropdown__toggle"
                disabled={false}
                id="Dropdown Toggle"
                onClick={[Function]}
                onKeyDown={[Function]}
                type="button"
              >
                <span
                  className="pf-c-dropdown__toggle-text"
                >
                  Dropdown
                </span>
                <CaretDownIcon
                  className="pf-c-dropdown__toggle-icon"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                >
                  <svg
                    aria-hidden={true}
                    aria-labelledby={null}
                    className="pf-c-dropdown__toggle-icon"
                    fill="currentColor"
                    height="1em"
                    role="img"
                    style={
                      Object {
                        "verticalAlign": "-0.125em",
                      }
                    }
                    viewBox="0 0 320 512"
                    width="1em"
                  >
                    <path
                      d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                      transform=""
                    />
                  </svg>
                </CaretDownIcon>
              </button>
            </Toggle>
          </Component>
        </div>
      </DropdownWithContext>
    </ComponentWithOuia>
  </Component>
</Component>
`;

exports[`dropdown right aligned 1`] = `
<Component
  dropdownItems={
    Array [
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Action
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={true}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Disabled Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={true}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Disabled Action
      </InternalDropdownItem>,
      <Unknown />,
      <InternalDropdownItem
        className=""
        component="a"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Separated Link
      </InternalDropdownItem>,
      <InternalDropdownItem
        className=""
        component="button"
        componentID=""
        context={
          Object {
            "keyHandler": [Function],
            "sendRef": [Function],
          }
        }
        href=""
        id=""
        index={-1}
        isDisabled={false}
        isHovered={false}
        onClick={[Function]}
        onSelect={[Function]}
        role="none"
        tooltipProps={Object {}}
        variant="item"
      >
        Separated Action
      </InternalDropdownItem>,
    ]
  }
  position="right"
  toggle={
    <Unknown
      id="Dropdown Toggle"
    >
      Dropdown
    </Unknown>
  }
>
  <Component
    dropdownItems={
      Array [
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Action
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={true}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Disabled Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={true}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Disabled Action
        </InternalDropdownItem>,
        <Unknown />,
        <InternalDropdownItem
          className=""
          component="a"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Separated Link
        </InternalDropdownItem>,
        <InternalDropdownItem
          className=""
          component="button"
          componentID=""
          context={
            Object {
              "keyHandler": [Function],
              "sendRef": [Function],
            }
          }
          href=""
          id=""
          index={-1}
          isDisabled={false}
          isHovered={false}
          onClick={[Function]}
          onSelect={[Function]}
          role="none"
          tooltipProps={Object {}}
          variant="item"
        >
          Separated Action
        </InternalDropdownItem>,
      ]
    }
    position="right"
    toggle={
      <Unknown
        id="Dropdown Toggle"
      >
        Dropdown
      </Unknown>
    }
  >
    <ComponentWithOuia
      component={[Function]}
      componentProps={
        Object {
          "dropdownItems": Array [
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Action
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Action
            </InternalDropdownItem>,
            <Unknown />,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Action
            </InternalDropdownItem>,
          ],
          "position": "right",
          "toggle": <Unknown
            id="Dropdown Toggle"
          >
            Dropdown
          </Unknown>,
        }
      }
      consumerContext={null}
    >
      <DropdownWithContext
        autoFocus={true}
        className=""
        direction="down"
        dropdownItems={
          Array [
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Action
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={true}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Disabled Action
            </InternalDropdownItem>,
            <Unknown />,
            <InternalDropdownItem
              className=""
              component="a"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Link
            </InternalDropdownItem>,
            <InternalDropdownItem
              className=""
              component="button"
              componentID=""
              context={
                Object {
                  "keyHandler": [Function],
                  "sendRef": [Function],
                }
              }
              href=""
              id=""
              index={-1}
              isDisabled={false}
              isHovered={false}
              onClick={[Function]}
              onSelect={[Function]}
              role="none"
              tooltipProps={Object {}}
              variant="item"
            >
              Separated Action
            </InternalDropdownItem>,
          ]
        }
        isGrouped={false}
        isOpen={false}
        isPlain={false}
        onSelect={[Function]}
        ouiaComponentType="Dropdown"
        ouiaContext={
          Object {
            "isOuia": false,
            "ouiaId": null,
          }
        }
        position="right"
        toggle={
          <Unknown
            id="Dropdown Toggle"
          >
            Dropdown
          </Unknown>
        }
      >
        <div
          className="pf-c-dropdown pf-m-align-right"
        >
          <Component
            ariaHasPopup={true}
            id="Dropdown Toggle"
            isOpen={false}
            isPlain={false}
            key=".0"
            onEnter={[Function]}
            parentRef={
              Object {
                "current": <div
                  class="pf-c-dropdown pf-m-align-right"
                >
                  <button
                    aria-expanded="false"
                    aria-haspopup="true"
                    class="pf-c-dropdown__toggle"
                    id="Dropdown Toggle"
                    type="button"
                  >
                    <span
                      class="pf-c-dropdown__toggle-text"
                    >
                      Dropdown
                    </span>
                    <svg
                      aria-hidden="true"
                      class="pf-c-dropdown__toggle-icon"
                      fill="currentColor"
                      height="1em"
                      role="img"
                      style="vertical-align: -0.125em;"
                      viewBox="0 0 320 512"
                      width="1em"
                    >
                      <path
                        d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                        transform=""
                      />
                    </svg>
                  </button>
                </div>,
              }
            }
          >
            <Toggle
              ariaHasPopup={true}
              className=""
              id="Dropdown Toggle"
              isActive={false}
              isDisabled={false}
              isFocused={false}
              isHovered={false}
              isOpen={false}
              isPlain={false}
              isPrimary={false}
              isSplitButton={false}
              onEnter={[Function]}
              onToggle={[Function]}
              parentRef={
                Object {
                  "current": <div
                    class="pf-c-dropdown pf-m-align-right"
                  >
                    <button
                      aria-expanded="false"
                      aria-haspopup="true"
                      class="pf-c-dropdown__toggle"
                      id="Dropdown Toggle"
                      type="button"
                    >
                      <span
                        class="pf-c-dropdown__toggle-text"
                      >
                        Dropdown
                      </span>
                      <svg
                        aria-hidden="true"
                        class="pf-c-dropdown__toggle-icon"
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style="vertical-align: -0.125em;"
                        viewBox="0 0 320 512"
                        width="1em"
                      >
                        <path
                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                          transform=""
                        />
                      </svg>
                    </button>
                  </div>,
                }
              }
            >
              <button
                aria-expanded={false}
                aria-haspopup={true}
                className="pf-c-dropdown__toggle"
                disabled={false}
                id="Dropdown Toggle"
                onClick={[Function]}
                onKeyDown={[Function]}
                type="button"
              >
                <span
                  className="pf-c-dropdown__toggle-text"
                >
                  Dropdown
                </span>
                <CaretDownIcon
                  className="pf-c-dropdown__toggle-icon"
                  color="currentColor"
                  noVerticalAlign={false}
                  size="sm"
                  title={null}
                >
                  <svg
                    aria-hidden={true}
                    aria-labelledby={null}
                    className="pf-c-dropdown__toggle-icon"
                    fill="currentColor"
                    height="1em"
                    role="img"
                    style={
                      Object {
                        "verticalAlign": "-0.125em",
                      }
                    }
                    viewBox="0 0 320 512"
                    width="1em"
                  >
                    <path
                      d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                      transform=""
                    />
                  </svg>
                </CaretDownIcon>
              </button>
            </Toggle>
          </Component>
        </div>
      </DropdownWithContext>
    </ComponentWithOuia>
  </Component>
</Component>
`;

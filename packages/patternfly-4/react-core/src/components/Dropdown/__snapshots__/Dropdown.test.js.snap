// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`KebabToggle dropup + right aligned 1`] = `
.pf-c-dropdown__toggle {
  display: block;
  position: relative;
  min-width: 44px;
  min-height: 44px;
  padding: 0.375rem 0.5rem 0.375rem 0.5rem;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: #282d33;
  background-color: transparent;
}
.pf-c-dropdown.pf-m-top.pf-m-align-right {
  display: inline-block;
  position: relative;
}

<Dropdown
  className=""
  direction="up"
  id="Dropdown"
  isOpen={false}
  isPlain={false}
  onSelect={[Function]}
  position="right"
  toggle={
    <Kebab
      aria-label="Actions"
      className=""
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={false}
      onToggle={[Function]}
      parentRef={null}
    />
  }
>
  <div
    className="pf-c-dropdown pf-m-top pf-m-align-right"
    id="Dropdown"
  >
    <Kebab
      aria-label="Actions"
      className=""
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={false}
      key=".0"
      onToggle={[Function]}
      parentRef={null}
    >
      <DropdownToggle
        aria-label="Actions"
        className=""
        isActive={false}
        isFocused={false}
        isHovered={false}
        isOpen={false}
        onToggle={[Function]}
        parentRef={null}
      >
        <button
          aria-expanded={false}
          aria-haspopup="true"
          aria-label="Actions"
          className="pf-c-dropdown__toggle"
          onClick={[Function]}
        >
          <EllipsisVIcon
            color="currentColor"
            size="sm"
            title={null}
          >
            <svg
              aria-hidden={true}
              aria-labelledby={null}
              fill="currentColor"
              height="1em"
              role="img"
              viewBox="0 0 192 512"
              width="1em"
            >
              <path
                d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                transform=""
              />
            </svg>
          </EllipsisVIcon>
        </button>
      </DropdownToggle>
    </Kebab>
  </div>
</Dropdown>
`;

exports[`KebabToggle dropup 1`] = `
.pf-c-dropdown__toggle {
  display: block;
  position: relative;
  min-width: 44px;
  min-height: 44px;
  padding: 0.375rem 0.5rem 0.375rem 0.5rem;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: #282d33;
  background-color: transparent;
}
.pf-c-dropdown.pf-m-top {
  display: inline-block;
  position: relative;
}

<Dropdown
  className=""
  direction="up"
  id="Dropdown"
  isOpen={false}
  isPlain={false}
  onSelect={[Function]}
  position="left"
  toggle={
    <Kebab
      aria-label="Actions"
      className=""
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={false}
      onToggle={[Function]}
      parentRef={null}
    />
  }
>
  <div
    className="pf-c-dropdown pf-m-top"
    id="Dropdown"
  >
    <Kebab
      aria-label="Actions"
      className=""
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={false}
      key=".0"
      onToggle={[Function]}
      parentRef={null}
    >
      <DropdownToggle
        aria-label="Actions"
        className=""
        isActive={false}
        isFocused={false}
        isHovered={false}
        isOpen={false}
        onToggle={[Function]}
        parentRef={null}
      >
        <button
          aria-expanded={false}
          aria-haspopup="true"
          aria-label="Actions"
          className="pf-c-dropdown__toggle"
          onClick={[Function]}
        >
          <EllipsisVIcon
            color="currentColor"
            size="sm"
            title={null}
          >
            <svg
              aria-hidden={true}
              aria-labelledby={null}
              fill="currentColor"
              height="1em"
              role="img"
              viewBox="0 0 192 512"
              width="1em"
            >
              <path
                d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                transform=""
              />
            </svg>
          </EllipsisVIcon>
        </button>
      </DropdownToggle>
    </Kebab>
  </div>
</Dropdown>
`;

exports[`KebabToggle expanded 1`] = `
.pf-c-dropdown__toggle {
  display: block;
  position: relative;
  min-width: 44px;
  min-height: 44px;
  padding: 0.375rem 0.5rem 0.375rem 0.5rem;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: #282d33;
  background-color: transparent;
}
.pf-m-disabled {
  display: block;
}
.pf-m-disabled {
  display: block;
}
.pf-c-dropdown__separator {
  display: block;
  height: 1px;
  background-color: #ededed;
}
.pf-c-dropdown__separator {
  display: block;
  height: 1px;
  background-color: #ededed;
}
.pf-c-dropdown__menu {
  display: block;
  position: absolute;
  z-index: 100;
  min-width: 100%;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  background: #ffffff;
  background-clip: padding-box;
  border: 1px solid transparent;
  box-shadow: 0 0.0625rem 0.0625rem 0rem rgba(3, 3, 3, 0.05), 0 0.25rem 0.5rem 0.25rem rgba(3, 3, 3, 0.06);
}
.pf-c-dropdown.pf-m-expanded {
  display: inline-block;
  position: relative;
}

<Dropdown
  className=""
  direction="down"
  id="Dropdown"
  isOpen={true}
  isPlain={false}
  onSelect={[Function]}
  position="left"
  toggle={
    <Kebab
      aria-label="Actions"
      className=""
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={false}
      onToggle={[Function]}
      parentRef={null}
    />
  }
>
  <div
    className="pf-c-dropdown pf-m-expanded"
    id="Dropdown"
  >
    <Kebab
      aria-label="Actions"
      className=""
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={true}
      key=".0"
      onToggle={[Function]}
      parentRef={null}
    >
      <DropdownToggle
        aria-label="Actions"
        className=""
        isActive={false}
        isFocused={false}
        isHovered={false}
        isOpen={true}
        onToggle={[Function]}
        parentRef={null}
      >
        <button
          aria-expanded={true}
          aria-haspopup="true"
          aria-label="Actions"
          className="pf-c-dropdown__toggle"
          onClick={[Function]}
        >
          <EllipsisVIcon
            color="currentColor"
            size="sm"
            title={null}
          >
            <svg
              aria-hidden={true}
              aria-labelledby={null}
              fill="currentColor"
              height="1em"
              role="img"
              viewBox="0 0 192 512"
              width="1em"
            >
              <path
                d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                transform=""
              />
            </svg>
          </EllipsisVIcon>
        </button>
      </DropdownToggle>
    </Kebab>
    <FocusTrap
      _createFocusTrap={[Function]}
      active={true}
      focusTrapOptions={Object {}}
      paused={false}
      tag="div"
    >
      <div>
        <DropdownMenu
          aria-labelledby="Dropdown"
          className=""
          isOpen={true}
          onClick={[Function]}
        >
          <div
            aria-labelledby="Dropdown"
            className="pf-c-dropdown__menu"
            hidden={false}
            onClick={[Function]}
            role="menu"
          >
            <DropItems>
              <DropdownItem
                className=""
                component="a"
                href="#"
                isDisabled={false}
                isHovered={false}
                role="menuitem"
              >
                <a
                  aria-disabled={false}
                  className=""
                  href="#"
                  role="menuitem"
                >
                  Link
                </a>
              </DropdownItem>
              <DropdownItem
                className=""
                component="button"
                href="#"
                isDisabled={false}
                isHovered={false}
                role="menuitem"
              >
                <button
                  className=""
                  disabled={false}
                  href="#"
                  role="menuitem"
                >
                  Action
                </button>
              </DropdownItem>
              <DropdownItem
                className=""
                component="a"
                href="#"
                isDisabled={true}
                isHovered={false}
                role="menuitem"
              >
                <a
                  aria-disabled={true}
                  className="pf-m-disabled"
                  href="#"
                  role="menuitem"
                  tabIndex={-1}
                >
                  Disabled Link
                </a>
              </DropdownItem>
              <DropdownItem
                className=""
                component="button"
                href="#"
                isDisabled={true}
                isHovered={false}
                role="menuitem"
              >
                <button
                  className="pf-m-disabled"
                  disabled={true}
                  href="#"
                  role="menuitem"
                >
                  Disabled Action
                </button>
              </DropdownItem>
              <Separator
                className=""
                component="a"
                href="#"
                isDisabled={false}
                isHovered={false}
                role="menuitem"
              >
                <DropdownItem
                  className="pf-c-dropdown__separator"
                  component="div"
                  href="#"
                  isDisabled={false}
                  isHovered={false}
                  role="separator"
                >
                  <div
                    className="pf-c-dropdown__separator"
                    href="#"
                    role="separator"
                  />
                </DropdownItem>
              </Separator>
              <DropdownItem
                className=""
                component="a"
                href="#"
                isDisabled={false}
                isHovered={false}
                role="menuitem"
              >
                <a
                  aria-disabled={false}
                  className=""
                  href="#"
                  role="menuitem"
                >
                  Separated Link
                </a>
              </DropdownItem>
              <DropdownItem
                className=""
                component="button"
                href="#"
                isDisabled={false}
                isHovered={false}
                role="menuitem"
              >
                <button
                  className=""
                  disabled={false}
                  href="#"
                  role="menuitem"
                >
                  Separated Action
                </button>
              </DropdownItem>
            </DropItems>
          </div>
        </DropdownMenu>
      </div>
    </FocusTrap>
  </div>
</Dropdown>
`;

exports[`KebabToggle plain 1`] = `
.pf-c-dropdown__toggle {
  display: block;
  position: relative;
  min-width: 44px;
  min-height: 44px;
  padding: 0.375rem 0.5rem 0.375rem 0.5rem;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: #282d33;
  background-color: transparent;
}
.pf-c-dropdown.pf-m-plain {
  display: inline-block;
  position: relative;
}

<Dropdown
  className=""
  direction="down"
  id="Dropdown"
  isOpen={false}
  isPlain={true}
  onSelect={[Function]}
  position="left"
  toggle={
    <Kebab
      aria-label="Actions"
      className=""
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={false}
      onToggle={[Function]}
      parentRef={null}
    />
  }
>
  <div
    className="pf-c-dropdown pf-m-plain"
    id="Dropdown"
  >
    <Kebab
      aria-label="Actions"
      className=""
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={false}
      key=".0"
      onToggle={[Function]}
      parentRef={null}
    >
      <DropdownToggle
        aria-label="Actions"
        className=""
        isActive={false}
        isFocused={false}
        isHovered={false}
        isOpen={false}
        onToggle={[Function]}
        parentRef={null}
      >
        <button
          aria-expanded={false}
          aria-haspopup="true"
          aria-label="Actions"
          className="pf-c-dropdown__toggle"
          onClick={[Function]}
        >
          <EllipsisVIcon
            color="currentColor"
            size="sm"
            title={null}
          >
            <svg
              aria-hidden={true}
              aria-labelledby={null}
              fill="currentColor"
              height="1em"
              role="img"
              viewBox="0 0 192 512"
              width="1em"
            >
              <path
                d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                transform=""
              />
            </svg>
          </EllipsisVIcon>
        </button>
      </DropdownToggle>
    </Kebab>
  </div>
</Dropdown>
`;

exports[`KebabToggle regular 1`] = `
.pf-c-dropdown__toggle {
  display: block;
  position: relative;
  min-width: 44px;
  min-height: 44px;
  padding: 0.375rem 0.5rem 0.375rem 0.5rem;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: #282d33;
  background-color: transparent;
}
.pf-c-dropdown {
  display: inline-block;
  position: relative;
}

<Dropdown
  className=""
  direction="down"
  id="Dropdown"
  isOpen={false}
  isPlain={false}
  onSelect={[Function]}
  position="left"
  toggle={
    <Kebab
      aria-label="Actions"
      className=""
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={false}
      onToggle={[Function]}
      parentRef={null}
    />
  }
>
  <div
    className="pf-c-dropdown"
    id="Dropdown"
  >
    <Kebab
      aria-label="Actions"
      className=""
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={false}
      key=".0"
      onToggle={[Function]}
      parentRef={null}
    >
      <DropdownToggle
        aria-label="Actions"
        className=""
        isActive={false}
        isFocused={false}
        isHovered={false}
        isOpen={false}
        onToggle={[Function]}
        parentRef={null}
      >
        <button
          aria-expanded={false}
          aria-haspopup="true"
          aria-label="Actions"
          className="pf-c-dropdown__toggle"
          onClick={[Function]}
        >
          <EllipsisVIcon
            color="currentColor"
            size="sm"
            title={null}
          >
            <svg
              aria-hidden={true}
              aria-labelledby={null}
              fill="currentColor"
              height="1em"
              role="img"
              viewBox="0 0 192 512"
              width="1em"
            >
              <path
                d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                transform=""
              />
            </svg>
          </EllipsisVIcon>
        </button>
      </DropdownToggle>
    </Kebab>
  </div>
</Dropdown>
`;

exports[`KebabToggle right aligned 1`] = `
.pf-c-dropdown__toggle {
  display: block;
  position: relative;
  min-width: 44px;
  min-height: 44px;
  padding: 0.375rem 0.5rem 0.375rem 0.5rem;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: #282d33;
  background-color: transparent;
}
.pf-c-dropdown.pf-m-align-right {
  display: inline-block;
  position: relative;
}

<Dropdown
  className=""
  direction="down"
  id="Dropdown"
  isOpen={false}
  isPlain={false}
  onSelect={[Function]}
  position="right"
  toggle={
    <Kebab
      aria-label="Actions"
      className=""
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={false}
      onToggle={[Function]}
      parentRef={null}
    />
  }
>
  <div
    className="pf-c-dropdown pf-m-align-right"
    id="Dropdown"
  >
    <Kebab
      aria-label="Actions"
      className=""
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={false}
      key=".0"
      onToggle={[Function]}
      parentRef={null}
    >
      <DropdownToggle
        aria-label="Actions"
        className=""
        isActive={false}
        isFocused={false}
        isHovered={false}
        isOpen={false}
        onToggle={[Function]}
        parentRef={null}
      >
        <button
          aria-expanded={false}
          aria-haspopup="true"
          aria-label="Actions"
          className="pf-c-dropdown__toggle"
          onClick={[Function]}
        >
          <EllipsisVIcon
            color="currentColor"
            size="sm"
            title={null}
          >
            <svg
              aria-hidden={true}
              aria-labelledby={null}
              fill="currentColor"
              height="1em"
              role="img"
              viewBox="0 0 192 512"
              width="1em"
            >
              <path
                d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                transform=""
              />
            </svg>
          </EllipsisVIcon>
        </button>
      </DropdownToggle>
    </Kebab>
  </div>
</Dropdown>
`;

exports[`dropdown dropup + right aligned 1`] = `
.pf-c-dropdown__toggle-icon {
  display: block;
}
.pf-c-dropdown__toggle-icon {
  display: block;
}
.pf-c-dropdown__toggle {
  display: block;
  position: relative;
  min-width: 44px;
  min-height: 44px;
  padding: 0.375rem 0.5rem 0.375rem 0.5rem;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: #282d33;
  background-color: transparent;
}
.pf-c-dropdown.pf-m-top.pf-m-align-right {
  display: inline-block;
  position: relative;
}

<Dropdown
  className=""
  direction="up"
  id="Dropdown"
  isOpen={false}
  isPlain={false}
  onSelect={[Function]}
  position="right"
  toggle={
    <DropdownToggle
      className=""
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={false}
      onToggle={[Function]}
      parentRef={null}
    >
      Dropdown
    </DropdownToggle>
  }
>
  <div
    className="pf-c-dropdown pf-m-top pf-m-align-right"
    id="Dropdown"
  >
    <DropdownToggle
      className=""
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={false}
      key=".0"
      onToggle={[Function]}
      parentRef={null}
    >
      <DropdownToggle
        className=""
        isActive={false}
        isFocused={false}
        isHovered={false}
        isOpen={false}
        onToggle={[Function]}
        parentRef={null}
      >
        <button
          aria-expanded={false}
          aria-haspopup="true"
          className="pf-c-dropdown__toggle"
          onClick={[Function]}
        >
          Dropdown
          <CaretDownIcon
            className="pf-c-dropdown__toggle-icon"
            color="currentColor"
            size="sm"
            title={null}
          >
            <svg
              aria-hidden={true}
              aria-labelledby={null}
              className="pf-c-dropdown__toggle-icon"
              fill="currentColor"
              height="1em"
              role="img"
              viewBox="0 0 320 512"
              width="1em"
            >
              <path
                d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                transform=""
              />
            </svg>
          </CaretDownIcon>
        </button>
      </DropdownToggle>
    </DropdownToggle>
  </div>
</Dropdown>
`;

exports[`dropdown dropup 1`] = `
.pf-c-dropdown__toggle-icon {
  display: block;
}
.pf-c-dropdown__toggle-icon {
  display: block;
}
.pf-c-dropdown__toggle {
  display: block;
  position: relative;
  min-width: 44px;
  min-height: 44px;
  padding: 0.375rem 0.5rem 0.375rem 0.5rem;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: #282d33;
  background-color: transparent;
}
.pf-c-dropdown.pf-m-top {
  display: inline-block;
  position: relative;
}

<Dropdown
  className=""
  direction="up"
  id="Dropdown"
  isOpen={false}
  isPlain={false}
  onSelect={[Function]}
  position="left"
  toggle={
    <DropdownToggle
      className=""
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={false}
      onToggle={[Function]}
      parentRef={null}
    >
      Dropdown
    </DropdownToggle>
  }
>
  <div
    className="pf-c-dropdown pf-m-top"
    id="Dropdown"
  >
    <DropdownToggle
      className=""
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={false}
      key=".0"
      onToggle={[Function]}
      parentRef={null}
    >
      <DropdownToggle
        className=""
        isActive={false}
        isFocused={false}
        isHovered={false}
        isOpen={false}
        onToggle={[Function]}
        parentRef={null}
      >
        <button
          aria-expanded={false}
          aria-haspopup="true"
          className="pf-c-dropdown__toggle"
          onClick={[Function]}
        >
          Dropdown
          <CaretDownIcon
            className="pf-c-dropdown__toggle-icon"
            color="currentColor"
            size="sm"
            title={null}
          >
            <svg
              aria-hidden={true}
              aria-labelledby={null}
              className="pf-c-dropdown__toggle-icon"
              fill="currentColor"
              height="1em"
              role="img"
              viewBox="0 0 320 512"
              width="1em"
            >
              <path
                d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                transform=""
              />
            </svg>
          </CaretDownIcon>
        </button>
      </DropdownToggle>
    </DropdownToggle>
  </div>
</Dropdown>
`;

exports[`dropdown expanded 1`] = `
.pf-c-dropdown__toggle-icon {
  display: block;
}
.pf-c-dropdown__toggle-icon {
  display: block;
}
.pf-c-dropdown__toggle {
  display: block;
  position: relative;
  min-width: 44px;
  min-height: 44px;
  padding: 0.375rem 0.5rem 0.375rem 0.5rem;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: #282d33;
  background-color: transparent;
}
.pf-m-disabled {
  display: block;
}
.pf-m-disabled {
  display: block;
}
.pf-c-dropdown__separator {
  display: block;
  height: 1px;
  background-color: #ededed;
}
.pf-c-dropdown__separator {
  display: block;
  height: 1px;
  background-color: #ededed;
}
.pf-c-dropdown__menu {
  display: block;
  position: absolute;
  z-index: 100;
  min-width: 100%;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  background: #ffffff;
  background-clip: padding-box;
  border: 1px solid transparent;
  box-shadow: 0 0.0625rem 0.0625rem 0rem rgba(3, 3, 3, 0.05), 0 0.25rem 0.5rem 0.25rem rgba(3, 3, 3, 0.06);
}
.pf-c-dropdown.pf-m-expanded {
  display: inline-block;
  position: relative;
}

<Dropdown
  className=""
  direction="down"
  id="Dropdown"
  isOpen={true}
  isPlain={false}
  onSelect={[Function]}
  position="left"
  toggle={
    <DropdownToggle
      className=""
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={false}
      onToggle={[Function]}
      parentRef={null}
    >
      Dropdown
    </DropdownToggle>
  }
>
  <div
    className="pf-c-dropdown pf-m-expanded"
    id="Dropdown"
  >
    <DropdownToggle
      className=""
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={true}
      key=".0"
      onToggle={[Function]}
      parentRef={null}
    >
      <DropdownToggle
        className=""
        isActive={false}
        isFocused={false}
        isHovered={false}
        isOpen={true}
        onToggle={[Function]}
        parentRef={null}
      >
        <button
          aria-expanded={true}
          aria-haspopup="true"
          className="pf-c-dropdown__toggle"
          onClick={[Function]}
        >
          Dropdown
          <CaretDownIcon
            className="pf-c-dropdown__toggle-icon"
            color="currentColor"
            size="sm"
            title={null}
          >
            <svg
              aria-hidden={true}
              aria-labelledby={null}
              className="pf-c-dropdown__toggle-icon"
              fill="currentColor"
              height="1em"
              role="img"
              viewBox="0 0 320 512"
              width="1em"
            >
              <path
                d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                transform=""
              />
            </svg>
          </CaretDownIcon>
        </button>
      </DropdownToggle>
    </DropdownToggle>
    <FocusTrap
      _createFocusTrap={[Function]}
      active={true}
      focusTrapOptions={Object {}}
      paused={false}
      tag="div"
    >
      <div>
        <DropdownMenu
          aria-labelledby="Dropdown"
          className=""
          isOpen={true}
          onClick={[Function]}
        >
          <div
            aria-labelledby="Dropdown"
            className="pf-c-dropdown__menu"
            hidden={false}
            onClick={[Function]}
            role="menu"
          >
            <DropItems>
              <DropdownItem
                className=""
                component="a"
                href="#"
                isDisabled={false}
                isHovered={false}
                role="menuitem"
              >
                <a
                  aria-disabled={false}
                  className=""
                  href="#"
                  role="menuitem"
                >
                  Link
                </a>
              </DropdownItem>
              <DropdownItem
                className=""
                component="button"
                href="#"
                isDisabled={false}
                isHovered={false}
                role="menuitem"
              >
                <button
                  className=""
                  disabled={false}
                  href="#"
                  role="menuitem"
                >
                  Action
                </button>
              </DropdownItem>
              <DropdownItem
                className=""
                component="a"
                href="#"
                isDisabled={true}
                isHovered={false}
                role="menuitem"
              >
                <a
                  aria-disabled={true}
                  className="pf-m-disabled"
                  href="#"
                  role="menuitem"
                  tabIndex={-1}
                >
                  Disabled Link
                </a>
              </DropdownItem>
              <DropdownItem
                className=""
                component="button"
                href="#"
                isDisabled={true}
                isHovered={false}
                role="menuitem"
              >
                <button
                  className="pf-m-disabled"
                  disabled={true}
                  href="#"
                  role="menuitem"
                >
                  Disabled Action
                </button>
              </DropdownItem>
              <Separator
                className=""
                component="a"
                href="#"
                isDisabled={false}
                isHovered={false}
                role="menuitem"
              >
                <DropdownItem
                  className="pf-c-dropdown__separator"
                  component="div"
                  href="#"
                  isDisabled={false}
                  isHovered={false}
                  role="separator"
                >
                  <div
                    className="pf-c-dropdown__separator"
                    href="#"
                    role="separator"
                  />
                </DropdownItem>
              </Separator>
              <DropdownItem
                className=""
                component="a"
                href="#"
                isDisabled={false}
                isHovered={false}
                role="menuitem"
              >
                <a
                  aria-disabled={false}
                  className=""
                  href="#"
                  role="menuitem"
                >
                  Separated Link
                </a>
              </DropdownItem>
              <DropdownItem
                className=""
                component="button"
                href="#"
                isDisabled={false}
                isHovered={false}
                role="menuitem"
              >
                <button
                  className=""
                  disabled={false}
                  href="#"
                  role="menuitem"
                >
                  Separated Action
                </button>
              </DropdownItem>
            </DropItems>
          </div>
        </DropdownMenu>
      </div>
    </FocusTrap>
  </div>
</Dropdown>
`;

exports[`dropdown regular 1`] = `
.pf-c-dropdown__toggle-icon {
  display: block;
}
.pf-c-dropdown__toggle-icon {
  display: block;
}
.pf-c-dropdown__toggle {
  display: block;
  position: relative;
  min-width: 44px;
  min-height: 44px;
  padding: 0.375rem 0.5rem 0.375rem 0.5rem;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: #282d33;
  background-color: transparent;
}
.pf-c-dropdown {
  display: inline-block;
  position: relative;
}

<Dropdown
  className=""
  direction="down"
  id="Dropdown"
  isOpen={false}
  isPlain={false}
  onSelect={[Function]}
  position="left"
  toggle={
    <DropdownToggle
      className=""
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={false}
      onToggle={[Function]}
      parentRef={null}
    >
      Dropdown
    </DropdownToggle>
  }
>
  <div
    className="pf-c-dropdown"
    id="Dropdown"
  >
    <DropdownToggle
      className=""
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={false}
      key=".0"
      onToggle={[Function]}
      parentRef={null}
    >
      <DropdownToggle
        className=""
        isActive={false}
        isFocused={false}
        isHovered={false}
        isOpen={false}
        onToggle={[Function]}
        parentRef={null}
      >
        <button
          aria-expanded={false}
          aria-haspopup="true"
          className="pf-c-dropdown__toggle"
          onClick={[Function]}
        >
          Dropdown
          <CaretDownIcon
            className="pf-c-dropdown__toggle-icon"
            color="currentColor"
            size="sm"
            title={null}
          >
            <svg
              aria-hidden={true}
              aria-labelledby={null}
              className="pf-c-dropdown__toggle-icon"
              fill="currentColor"
              height="1em"
              role="img"
              viewBox="0 0 320 512"
              width="1em"
            >
              <path
                d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                transform=""
              />
            </svg>
          </CaretDownIcon>
        </button>
      </DropdownToggle>
    </DropdownToggle>
  </div>
</Dropdown>
`;

exports[`dropdown right aligned 1`] = `
.pf-c-dropdown__toggle-icon {
  display: block;
}
.pf-c-dropdown__toggle-icon {
  display: block;
}
.pf-c-dropdown__toggle {
  display: block;
  position: relative;
  min-width: 44px;
  min-height: 44px;
  padding: 0.375rem 0.5rem 0.375rem 0.5rem;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: #282d33;
  background-color: transparent;
}
.pf-c-dropdown.pf-m-align-right {
  display: inline-block;
  position: relative;
}

<Dropdown
  className=""
  direction="down"
  id="Dropdown"
  isOpen={false}
  isPlain={false}
  onSelect={[Function]}
  position="right"
  toggle={
    <DropdownToggle
      className=""
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={false}
      onToggle={[Function]}
      parentRef={null}
    >
      Dropdown
    </DropdownToggle>
  }
>
  <div
    className="pf-c-dropdown pf-m-align-right"
    id="Dropdown"
  >
    <DropdownToggle
      className=""
      isActive={false}
      isFocused={false}
      isHovered={false}
      isOpen={false}
      key=".0"
      onToggle={[Function]}
      parentRef={null}
    >
      <DropdownToggle
        className=""
        isActive={false}
        isFocused={false}
        isHovered={false}
        isOpen={false}
        onToggle={[Function]}
        parentRef={null}
      >
        <button
          aria-expanded={false}
          aria-haspopup="true"
          className="pf-c-dropdown__toggle"
          onClick={[Function]}
        >
          Dropdown
          <CaretDownIcon
            className="pf-c-dropdown__toggle-icon"
            color="currentColor"
            size="sm"
            title={null}
          >
            <svg
              aria-hidden={true}
              aria-labelledby={null}
              className="pf-c-dropdown__toggle-icon"
              fill="currentColor"
              height="1em"
              role="img"
              viewBox="0 0 320 512"
              width="1em"
            >
              <path
                d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                transform=""
              />
            </svg>
          </CaretDownIcon>
        </button>
      </DropdownToggle>
    </DropdownToggle>
  </div>
</Dropdown>
`;

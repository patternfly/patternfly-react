// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`disabled text input 1`] = `
<Component
  aria-label="disabled text input"
  isDisabled={true}
>
  <ComponentWithOuia
    component={[Function]}
    componentProps={
      Object {
        "aria-label": "disabled text input",
        "isDisabled": true,
      }
    }
    consumerContext={null}
  >
    <TextInput
      aria-label="disabled text input"
      className=""
      isDisabled={true}
      isReadOnly={false}
      isRequired={false}
      isValid={true}
      onChange={[Function]}
      ouiaContext={
        Object {
          "isOuia": false,
          "ouiaId": null,
        }
      }
      type="text"
    >
      <input
        aria-invalid={false}
        aria-label="disabled text input"
        className="pf-c-form-control"
        disabled={true}
        onChange={[Function]}
        readOnly={false}
        required={false}
        type="text"
      />
    </TextInput>
  </ComponentWithOuia>
</Component>
`;

exports[`invalid text input 1`] = `
<Component
  aria-label="invalid text input"
  isValid={false}
  onChange={[MockFunction]}
  required={true}
  value="test input"
>
  <ComponentWithOuia
    component={[Function]}
    componentProps={
      Object {
        "aria-label": "invalid text input",
        "isValid": false,
        "onChange": [MockFunction],
        "required": true,
        "value": "test input",
      }
    }
    consumerContext={null}
  >
    <TextInput
      aria-label="invalid text input"
      className=""
      isDisabled={false}
      isReadOnly={false}
      isRequired={false}
      isValid={false}
      onChange={[MockFunction]}
      ouiaContext={
        Object {
          "isOuia": false,
          "ouiaId": null,
        }
      }
      required={true}
      type="text"
      value="test input"
    >
      <input
        aria-invalid={true}
        aria-label="invalid text input"
        className="pf-c-form-control"
        disabled={false}
        onChange={[Function]}
        readOnly={false}
        required={false}
        type="text"
        value="test input"
      />
    </TextInput>
  </ComponentWithOuia>
</Component>
`;

exports[`readonly text input 1`] = `
<Component
  aria-label="readonly text input"
  isReadOnly={true}
  value="read only"
>
  <ComponentWithOuia
    component={[Function]}
    componentProps={
      Object {
        "aria-label": "readonly text input",
        "isReadOnly": true,
        "value": "read only",
      }
    }
    consumerContext={null}
  >
    <TextInput
      aria-label="readonly text input"
      className=""
      isDisabled={false}
      isReadOnly={true}
      isRequired={false}
      isValid={true}
      onChange={[Function]}
      ouiaContext={
        Object {
          "isOuia": false,
          "ouiaId": null,
        }
      }
      type="text"
      value="read only"
    >
      <input
        aria-invalid={false}
        aria-label="readonly text input"
        className="pf-c-form-control"
        disabled={false}
        onChange={[Function]}
        readOnly={true}
        required={false}
        type="text"
        value="read only"
      />
    </TextInput>
  </ComponentWithOuia>
</Component>
`;

exports[`simple text input 1`] = `
<Component
  aria-label="simple text input"
  onChange={[MockFunction]}
  value="test input"
>
  <ComponentWithOuia
    component={[Function]}
    componentProps={
      Object {
        "aria-label": "simple text input",
        "onChange": [MockFunction],
        "value": "test input",
      }
    }
    consumerContext={null}
  >
    <TextInput
      aria-label="simple text input"
      className=""
      isDisabled={false}
      isReadOnly={false}
      isRequired={false}
      isValid={true}
      onChange={[MockFunction]}
      ouiaContext={
        Object {
          "isOuia": false,
          "ouiaId": null,
        }
      }
      type="text"
      value="test input"
    >
      <input
        aria-invalid={false}
        aria-label="simple text input"
        className="pf-c-form-control"
        disabled={false}
        onChange={[Function]}
        readOnly={false}
        required={false}
        type="text"
        value="test input"
      />
    </TextInput>
  </ComponentWithOuia>
</Component>
`;

exports[`validated text input 1`] = `
<TextInputBase
  aria-label="validated text input"
  className=""
  innerRef={null}
  isDisabled={false}
  isReadOnly={false}
  isRequired={false}
  isValid={true}
  onChange={[MockFunction]}
  required={true}
  type="text"
  validated="error"
  value="test input"
/>
`;

exports[`validated text input success 1`] = `
<ForwardRef
  aria-label="validated text input"
  onChange={[MockFunction]}
  required={true}
  validated="success"
  value="test input"
>
  <TextInputBase
    aria-label="validated text input"
    className=""
    innerRef={null}
    isDisabled={false}
    isReadOnly={false}
    isRequired={false}
    isValid={true}
    onChange={[MockFunction]}
    required={true}
    type="text"
    validated="success"
    value="test input"
  >
    <input
      aria-invalid={false}
      aria-label="validated text input"
      className="pf-c-form-control pf-m-success"
      disabled={false}
      onChange={[Function]}
      readOnly={false}
      required={false}
      type="text"
      value="test input"
    />
  </TextInputBase>
</ForwardRef>
`;

import {
 
  ContextSelector,
  ContextSelectorItem,
  InputGroup,
  InputGroupText,
  Popover,
  Select,
  SelectOption,
  SelectVariant,
  Tab,
  Tabs,
  TabContent,
  TextInput,
  Title,
  TitleLevel,
  Tooltip,
  CheckboxSelectOption,
  CheckboxSelectGroup,
  Badge
} from '@patternfly/react-core';
import React, { Component } from 'react';
import logo from './logo.svg';
import './App.css';
import NavTest from './Nav';
import WizardTest from './Wizard';

interface AppState {
  isExpanded?: boolean;
  checkboxIsExpanded?: boolean;
  selected?: string;
  checked?: Array<string>;
}

class App extends Component<AppState> {
  state = {
    isExpanded: false,
    checkboxIsExpanded: false,
    selected: 'Placeholder text',
    checked: []
  };

  contentRef1 = React.createRef<HTMLDivElement>();
  contentRef2 = React.createRef<HTMLDivElement>();
  contentRef3 = React.createRef<HTMLDivElement>();

  onToggle = isExpanded => {
    this.setState({
      isExpanded
    });
  };

  onSelect = event => {
    this.setState({
      selected: event.target.innerHTML,
      isExpanded: false
    });
    console.log('selected:', event.target.innerHTML);
  };

  checkboxOnToggle = checkboxIsExpanded => {
    this.setState({
      checkboxIsExpanded
    });
  };

  checkboxOnSelect = (event, selection) => {
    const { checked } = this.state;
    if (checked.includes(selection)) {
      this.setState((prevState: AppState) => ({ checked: prevState.checked.filter(item => item !== selection) }));
    } else {
      this.setState((prevState: AppState) => ({ checked: [...prevState.checked, selection] }));
    }
  };

  render() {
    const { isExpanded, selected, checkboxIsExpanded, checked } = this.state;
    return (
      <div className="App">
        <header className="App-header">
          <Title style={{ color: '#fff', padding: '12px 0' }} headingLevel={TitleLevel.h1} size="4xl">
            PF4 Integration Sandbox
          </Title>
        </header>
        
        <Tooltip content={<div>World</div>}>
          <div>Hello</div>
        </Tooltip>
        <Popover bodyContent={<div>World</div>}>
          <div>Hello</div>
        </Popover>
        <Select
          variant={SelectVariant.single}
          onToggle={this.onToggle}
          onSelect={this.onSelect}
          selections={selected}
          isExpanded={isExpanded}
        >
          <SelectOption value="option 1" />
          <SelectOption value="option 2" />
          <SelectOption value="option 3" />
        </Select>
        <InputGroup>
          <InputGroupText component="label" htmlFor="dollar_number">
            $
          </InputGroupText>
          <TextInput id="dollar_number" type="number" />
        </InputGroup>
        <ContextSelector
          toggleText="My Project"
          onSearchInputChange={() => {}}
          isOpen={true}
          searchInputValue=""
          onToggle={() => {}}
          onSelect={() => {}}
          screenReaderLabel="screenReader Label"
          searchInputPlaceholder="test"
          searchButtonAriaLabel="Aria Lable"
        >
          <ContextSelectorItem key="0">My Project</ContextSelectorItem>
          <ContextSelectorItem key="1">OpenShift Cluster</ContextSelectorItem>
          <ContextSelectorItem key="2">Production Ansible</ContextSelectorItem>
          <ContextSelectorItem key="3">AWS</ContextSelectorItem>
          <ContextSelectorItem key="4">Azure</ContextSelectorItem>
        </ContextSelector>
        <Select
          variant={SelectVariant.checkbox}
          onToggle={this.checkboxOnToggle}
          onSelect={this.checkboxOnSelect}
          selections={checked}
          isExpanded={checkboxIsExpanded}
          placeholderText="Filter by status"
          isGrouped
        >
          <CheckboxSelectGroup label="Group 1" key={0}>
            <CheckboxSelectOption value="option 1" key={2} />
            <CheckboxSelectOption value="option 2" key={3} />
            <CheckboxSelectOption value="option 3" key={4} />
          </CheckboxSelectGroup>
          <CheckboxSelectGroup label="Group 2" key={1}>
            <CheckboxSelectOption value="option 4" key={5} />
            <CheckboxSelectOption value="option 5" key={6} />
          </CheckboxSelectGroup>
        </Select>
      </div>
    );
  }
}
export default App;

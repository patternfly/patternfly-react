// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Enable autoFit for SerialConsole 1`] = `
<div
  className="serial-console-pf"
  id=""
>
  <ToolbarRightContent
    className=""
  >
    <SerialConsoleActions
      idPrefix="id-serialconsole"
      isDisconnectEnabled={true}
      onDisconnect={[Function]}
      onReset={[Function]}
      textDisconnect="Disconnect"
      textReconnect="Reconnect"
    />
  </ToolbarRightContent>
  <ToolbarResults
    className=""
  >
    <div
      className="panel-body console-terminal-pf"
    >
      <XTerm
        autoFit={true}
        className="serial-console-pf"
        cols={80}
        onConnect={
          [MockFunction] {
            "calls": Array [
              Array [],
            ],
            "results": Array [
              Object {
                "isThrow": false,
                "value": undefined,
              },
            ],
          }
        }
        onData={[Function]}
        onDisconnect={[MockFunction]}
        onResize={[Function]}
        onTitleChanged={[Function]}
        rows={25}
      />
    </div>
  </ToolbarResults>
</div>
`;

exports[`Pass class to SerialConsole 1`] = `
<div
  className="serial-console-pf my-top-class"
  id=""
>
  <ToolbarRightContent
    className=""
  >
    <SerialConsoleActions
      idPrefix="id-serialconsole"
      isDisconnectEnabled={false}
      onDisconnect={[Function]}
      onReset={[Function]}
      textDisconnect="Disconnect"
      textReconnect="Reconnect"
    />
  </ToolbarRightContent>
  <ToolbarResults
    className=""
  >
    <div
      className="panel-body console-terminal-pf"
    >
      <span>
        Loading ...
      </span>
    </div>
  </ToolbarResults>
</div>
`;

exports[`Render SerialConsole in the CONNECTED state 1`] = `
<div
  class="serial-console-pf"
  id="myidprefix"
>
  <div
    class="toolbar-pf-action-right"
  >
    <div
      class="console-actions-pf"
    >
      <button
        class="btn btn-default console-actions-buttons-pf"
        id="myidprefix-serialconsole-disconnect"
      >
        My text for Disconnect
      </button>
      <button
        class="btn btn-default console-actions-buttons-pf"
        id="myidprefix-serialconsole-reconnect"
      >
        My text for Reconnect
      </button>
    </div>
  </div>
  <div
    class="toolbar-pf-results row"
  >
    <div
      class="col-sm-12"
    >
      <div
        class="panel-body console-terminal-pf"
      >
        <div
          class="console-pf"
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`SerialConsole in the CONNECTED state 1`] = `
<div
  className="serial-console-pf"
  id="myidprefix"
>
  <ToolbarRightContent
    className=""
  >
    <SerialConsoleActions
      idPrefix="myidprefix-serialconsole"
      isDisconnectEnabled={true}
      onDisconnect={[Function]}
      onReset={[Function]}
      textDisconnect="My text for Disconnect"
      textReconnect="My text for Reconnect"
    />
  </ToolbarRightContent>
  <ToolbarResults
    className=""
  >
    <div
      className="panel-body console-terminal-pf"
    >
      <XTerm
        autoFit={false}
        className="serial-console-pf"
        cols={33}
        onConnect={
          [MockFunction] {
            "calls": Array [
              Array [],
            ],
            "results": Array [
              Object {
                "isThrow": false,
                "value": undefined,
              },
            ],
          }
        }
        onData={[Function]}
        onDisconnect={[MockFunction]}
        onResize={[Function]}
        onTitleChanged={[Function]}
        rows={44}
      />
    </div>
  </ToolbarResults>
</div>
`;

exports[`SerialConsole in the DISCONNECTED state 1`] = `
<div
  className="serial-console-pf"
  id="myidprefix"
>
  <ToolbarRightContent
    className=""
  >
    <SerialConsoleActions
      idPrefix="myidprefix-serialconsole"
      isDisconnectEnabled={false}
      onDisconnect={[Function]}
      onReset={[Function]}
      textDisconnect="Disconnect"
      textReconnect="Reconnect"
    />
  </ToolbarRightContent>
  <ToolbarResults
    className=""
  >
    <div
      className="panel-body console-terminal-pf"
    >
      <EmptyState
        className=""
      >
        <EmptyStateTitle
          className=""
        >
          My title for Disconnected
        </EmptyStateTitle>
        <EmptyStateInfo
          className=""
        >
          My text for Disconnected
        </EmptyStateInfo>
        <EmptyStateAction
          className=""
          secondary={false}
        >
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsSize="large"
            bsStyle="primary"
            disabled={false}
            onClick={
              [MockFunction] {
                "calls": Array [
                  Array [],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": undefined,
                  },
                ],
              }
            }
          >
            My text for Connect
          </Button>
        </EmptyStateAction>
      </EmptyState>
    </div>
  </ToolbarResults>
</div>
`;

exports[`SerialConsole in the LOADING state 1`] = `
<div
  className="serial-console-pf"
  id=""
>
  <ToolbarRightContent
    className=""
  >
    <SerialConsoleActions
      idPrefix="id-serialconsole"
      isDisconnectEnabled={false}
      onDisconnect={[Function]}
      onReset={[Function]}
      textDisconnect="Disconnect"
      textReconnect="Reconnect"
    />
  </ToolbarRightContent>
  <ToolbarResults
    className=""
  >
    <div
      className="panel-body console-terminal-pf"
    >
      <span>
        My text for Loading
      </span>
    </div>
  </ToolbarResults>
</div>
`;

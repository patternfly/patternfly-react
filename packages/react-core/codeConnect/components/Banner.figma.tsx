import { Banner } from '@patternfly/react-core/dist/js/components/Banner';
import figma from '@figma/code-connect';

// Design updates
// - single banner component created
// - variant added for status and color
// - text location changed to enum
// - left/right text booleans removed
// - icon added to base component

// figma.connect(
//   Banner,
//   'https://example', {
//   props: {
//     leftText: figma.string(''),
//     rightText: figma.string(''),
//     centerText: figma.string('✏️ Center text'),

//     className: figma.className([
//       // automate size class application
//       figma.enum('Status', {
//         Success: 'success',
//         Warning: 'warning',
//         Danger: 'danger',
//         Info: 'info',
//         Custom: 'custom'
//       }),
//
//       // automate bordered class application
//       figma.enum('Color', {
//         red: 'Red',
//         orangeRed: 'OrangeRed',
//         orange: 'Orange',
//         gold: 'Gold',
//         cyan: 'Cyan',
//         blue: 'Blue',
//         gray: 'Gray'
//       })
//     ]),
//
//     figma.enum('Color', {
//   },
//   example: (props) => {
//     <Banner className="{props.className}">
//       <div className="pf-v6-l-flex pf-m-justify-content-center pf-m-justify-content-space-between-on-lg pf-m-nowrap">
//         {textLeft && (
//           <div className="pf-v6-u-display-none pf-v6-u-display-block-on-lg">{props.textLeft</div>
//         )}
//         {textCenter && (
//           <div className="pf-v6-u-display-none pf-v6-u-display-block-on-lg">{props.textCenter</div>
//         )}
//         {textRight && (
//           <div className="pf-v6-u-display-none pf-v6-u-display-block-on-lg">{props.textRight</div>
//         )}
//       </div>
//     </Banner>
//   }
// });

/**
 * -- This file was auto-generated by Code Connect --
 * `props` includes a mapping from Figma properties and variants to
 * suggested values. You should update this to match the props of your
 * code component, and update the `example` function to return the
 * code example you'd like to see in Figma
 */

// figma.connect(
//   Banner,
//   'https://www.figma.com/design/VMEX8Xg2nzhBX8rfBx53jp/branch/H3LonYnwH26v9zNEa2SXFk/PatternFly-6%3A-Components?node-id=221-937&t=7hKW0DzmfHGhNQnn-11',
//   {
//     props: {
//       // use `Content` ubiquitiously
//       figmaText: figma.textContent('Content'),
//       customStatusIcon: figma.instance('Custom status icon'),
//       leftText: figma.boolean('Left text'),
//       rightText: figma.boolean('Right text'),
//       centerText: figma.string('✏️ Center text'),
//       status: figma.enum('Status', {
//         Success: 'success',
//         Warning: 'warning',
//         Danger: 'danger',
//         Info: 'info',
//         Custom: 'custom'
//       })
//     },
//     example: (props) => <Banner>{props.figmaText}</Banner>
//   }
// );

/**
 * -- This file was auto-generated by Code Connect --
 * `props` includes a mapping from Figma properties and variants to
 * suggested values. You should update this to match the props of your
 * code component, and update the `example` function to return the
 * code example you'd like to see in Figma
 */

// figma.connect(
//   Banner,
//   'https://www.figma.com/design/VMEX8Xg2nzhBX8rfBx53jp/branch/H3LonYnwH26v9zNEa2SXFk/PatternFly-6%3A-Components?node-id=221-1443&t=7hKW0DzmfHGhNQnn-11',
//   {
//     props: {
//       icon: figma.boolean('Icon'),
//       iconSwap: figma.instance('Icon Swap'),
//       leftText: figma.boolean('Left text'),
//       rightText: figma.boolean('Right text'),
//       centerText: figma.string('✏️ Center text'),
//       color: figma.enum('Color', {
//         Red: 'red',
//         Orangered: 'orangered',
//         Orange: 'orange',
//         Gold: 'gold',
//         Green: 'green',
//         Cyan: 'cyan',
//         Blue: 'blue',
//         Purple: 'purple',
//         Gray: 'gray'
//       })
//     },
//     example: (props) => <Banner>{props.figmaText}</Banner>
//   }
// );

import React from 'react';
import { DescriptionList } from 'src/components/DescriptionList';
import figma from '@figma/code-connect';

/**
 * -- This file was auto-generated by Code Connect --
 * `props` includes a mapping from Figma properties and variants to
 * suggested values. You should update this to match the props of your
 * code component, and update the `example` function to return the
 * code example you'd like to see in Figma
 */

figma.connect(
  DescriptionList,
  'https://www.figma.com/design/VMEX8Xg2nzhBX8rfBx53jp/branch/H3LonYnwH26v9zNEa2SXFk/PatternFly-6%3A-Components?m=auto&node-id=1121-3946',
  {
    props: {
      spacing: figma.enum('Spacing', {
        Default: 'default',
        Compact: 'compact'
      }),
      orientation: figma.enum('Orientation', {
        Vertical: 'vertical',
        'Horizontal - Fixed': 'horizontal---fixed',
        'Horizontal - Fluid': 'horizontal---fluid'
      })
    },
    example: (props) => <DescriptionList />
  }
);

figma.connect(
  DescriptionList,
  'https://www.figma.com/design/VMEX8Xg2nzhBX8rfBx53jp/branch/H3LonYnwH26v9zNEa2SXFk/PatternFly-6%3A-Components?m=auto&node-id=4421-28234',
  {
    props: {
      cardSize: figma.enum('Card size', {
        Small: 'small',
        Default: 'default',
        Large: 'large'
      }),
      orientation: figma.enum('Orientation', {
        Horizontal: 'horizontal',
        Stacked: 'stacked'
      })
    },
    example: (props) => <DescriptionList />
  }
);

figma.connect(
  DescriptionList,
  'https://www.figma.com/design/VMEX8Xg2nzhBX8rfBx53jp/branch/H3LonYnwH26v9zNEa2SXFk/PatternFly-6%3A-Components?m=auto&node-id=1121-3571',
  {
    props: {
      swapLabel: figma.instance('Swap label'),
      content: figma.string('✏️ Content'),
      type: figma.enum('Type', {
        Vertical: 'vertical',
        'Horizontal fluid': 'horizontal-fluid',
        'Horizontal fixed': 'horizontal-fixed'
      }),
      contentType: figma.enum('Content type', {
        Text: 'text',
        'Component swap': 'component-swap',
        'Icon + Text': 'icon---text'
      })
    },
    example: (props) => <DescriptionList />
  }
);

import React from "react"
import { Card } from "src/components/Card"
import figma from "@figma/code-connect"

/**
 * -- This file was auto-generated by Code Connect --
 * `props` includes a mapping from Figma properties and variants to
 * suggested values. You should update this to match the props of your
 * code component, and update the `example` function to return the
 * code example you'd like to see in Figma
 */

figma.connect(
  Card,
  "https://www.figma.com/design/VMEX8Xg2nzhBX8rfBx53jp/branch/H3LonYnwH26v9zNEa2SXFk/PatternFly-6%3A-Components?m=auto&node-id=3144-18658",
  {
    props: {
      cardBody: figma.boolean("Card body"),
      cardTitle: figma.string("✏️ Card title"),
      footerComponentSlots: figma.boolean("Footer Component Slots"),
      trailingTitleIcon: figma.boolean("Trailing Title Icon"),
      leadingTitleIcon: figma.boolean("Leading Title Icon"),
      cardFooter: figma.boolean("Card footer"),
      cardDescription: figma.string("✏️ Card description"),
      cardFooter: figma.string("✏️ Card footer"),
      bodyText: figma.boolean("Body text"),
      headerImage: figma.boolean("Header image"),
      bodyText: figma.string("✏️ Body text"),
      bodyComponentSlots: figma.boolean("Body Component Slots"),
      expandableBody: figma.boolean("Expandable body"),
      headerAction: figma.boolean("Header action"),
      cardHeader: figma.boolean("Card header"),
      style: figma.enum("Style", {
        Secondary: "secondary",
        Plain: "plain",
        Default: "default",
      }),
      size: figma.enum("Size", {
        Compact: "compact",
        Default: "default",
        Large: "large",
      }),
      isExpandable: figma.boolean("Is expandable"),
    },
    example: (props) => <Card />,
  },
)


figma.connect(
  Card,
  "https://www.figma.com/design/VMEX8Xg2nzhBX8rfBx53jp/branch/H3LonYnwH26v9zNEa2SXFk/PatternFly-6%3A-Components?m=auto&node-id=3144-18658",
  {
    props: {
      cardBody: figma.boolean("Card body"),
      cardTitle: figma.string("✏️ Card title"),
      footerComponentSlots: figma.boolean("Footer Component Slots"),
      trailingTitleIcon: figma.boolean("Trailing Title Icon"),
      leadingTitleIcon: figma.boolean("Leading Title Icon"),
      cardFooter: figma.boolean("Card footer"),
      cardDescription: figma.string("✏️ Card description"),
      cardFooter: figma.string("✏️ Card footer"),
      bodyText: figma.boolean("Body text"),
      headerImage: figma.boolean("Header image"),
      bodyText: figma.string("✏️ Body text"),
      bodyComponentSlots: figma.boolean("Body Component Slots"),
      expandableBody: figma.boolean("Expandable body"),
      cardDescription: figma.boolean("Card description"),
      headerAction: figma.boolean("Header action"),
      cardHeader: figma.boolean("Card header"),
      style: figma.enum("Style", {
        Secondary: "secondary",
        Plain: "plain",
        Default: "default",
      }),
      size: figma.enum("Size", {
        Compact: "compact",
        Default: "default",
        Large: "large",
      }),
      isExpandable: figma.boolean("Is expandable"),
    },
    example: (props) => <Card />,
  },
)

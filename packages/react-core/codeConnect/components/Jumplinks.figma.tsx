import React from 'react';
import { JumpLinks } from 'src/components/JumpLinks';
import figma from '@figma/code-connect';

/**
 * -- This file was auto-generated by Code Connect --
 * `props` includes a mapping from Figma properties and variants to
 * suggested values. You should update this to match the props of your
 * code component, and update the `example` function to return the
 * code example you'd like to see in Figma
 */

figma.connect(
  JumpLinks,
  'https://www.figma.com/design/VMEX8Xg2nzhBX8rfBx53jp/branch/H3LonYnwH26v9zNEa2SXFk/PatternFly-6%3A-Components?m=auto&node-id=5426-8542',
  {
    props: {
      showLabel: figma.boolean('Show Label'),
      default: figma.enum('Default', {
        Default: 'default',
        Expandable: 'expandable'
      })
    },
    example: (props) => <JumpLinks />
  }
);

figma.connect(
  JumpLinks,
  'https://www.figma.com/design/VMEX8Xg2nzhBX8rfBx53jp/branch/H3LonYnwH26v9zNEa2SXFk/PatternFly-6%3A-Components?m=auto&node-id=5286-5330',
  {
    props: {
      closeIcon: figma.boolean('Close Icon'),
      helpIcon: figma.boolean('Help icon'),
      hasIcon: figma.boolean('Has icon'),
      tabText: figma.string('Tab Text'),
      state: figma.enum('State', {
        Default: 'default',
        Selected: 'selected',
        Hover: 'hover'
      })
    },
    example: (props) => <JumpLinks />
  }
);

figma.connect(
  JumpLinks,
  'https://www.figma.com/design/VMEX8Xg2nzhBX8rfBx53jp/branch/H3LonYnwH26v9zNEa2SXFk/PatternFly-6%3A-Components?m=auto&node-id=8644-150823',
  {
    props: {
      showLabel: figma.boolean('Show label'),
      type: figma.enum('Type', {
        'With Label': 'with-label'
      })
    },
    example: (props) => <JumpLinks />
  }
);

figma.connect(
  JumpLinks,
  'https://www.figma.com/design/VMEX8Xg2nzhBX8rfBx53jp/branch/H3LonYnwH26v9zNEa2SXFk/PatternFly-6%3A-Components?m=auto&node-id=5426-8306',
  {
    props: {
      closeIcon: figma.boolean('Close Icon'),
      helpIcon: figma.boolean('Help icon'),
      hasIcon: figma.boolean('Has icon'),
      tabText: figma.string('Tab Text'),
      type: figma.enum('Type', {
        Default: 'default',
        'Subsection jumplinks': 'subsection-jumplinks'
      }),
      state: figma.enum('State', {
        Default: 'default',
        Selected: 'selected',
        Hover: 'hover'
      })
    },
    example: (props) => <JumpLinks />
  }
);

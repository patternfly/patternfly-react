import React from 'react';
import { Slider } from './Slider';
import figma from '@figma/code-connect';

/**
 * -- This file was auto-generated by Code Connect --
 * `props` includes a mapping from Figma properties and variants to
 * suggested values. You should update this to match the props of your
 * code component, and update the `example` function to return the
 * code example you'd like to see in Figma
 */

figma.connect(
  Slider,
  'https://www.figma.com/design/VMEX8Xg2nzhBX8rfBx53jp/branch/H3LonYnwH26v9zNEa2SXFk/PatternFly-6%3A-Components?m=auto&node-id=3155-97956',
  {
    props: {
      rightAction: figma.boolean('Right action'),
      minmaxValues: figma.boolean('Min/max values'),
      leftAction: figma.boolean('Left action'),
      valueInput: figma.boolean('Value input'),
      type: figma.enum('Type', {
        Discrete: 'discrete',
        Continuous: 'continuous'
      }),
      state: figma.enum('State', {
        Default: 'default',
        Hover: 'hover',
        Active: 'active',
        Disabled: 'disabled'
      })
    },
    example: (props) => <Slider />
  }
);

figma.connect(
  Slider,
  'https://www.figma.com/design/VMEX8Xg2nzhBX8rfBx53jp/branch/H3LonYnwH26v9zNEa2SXFk/PatternFly-6%3A-Components?m=auto&node-id=3171-98999',
  {
    props: {},
    example: (props) => <Slider />
  }
);

figma.connect(
  Slider,
  'https://www.figma.com/design/VMEX8Xg2nzhBX8rfBx53jp/branch/H3LonYnwH26v9zNEa2SXFk/PatternFly-6%3A-Components?m=auto&node-id=2698-49',
  {
    props: {
      showThumbInput: figma.boolean('Show thumb input'),
      number: figma.string('✏️ Number'),
      show: figma.boolean('Show '),
      state: figma.enum('State', {
        Default: 'default',
        Hover: 'hover',
        Disabled: 'disabled',
        Active: 'active'
      })
    },
    example: (props) => <Slider />
  }
);

figma.connect(
  Slider,
  'https://www.figma.com/design/VMEX8Xg2nzhBX8rfBx53jp/branch/H3LonYnwH26v9zNEa2SXFk/PatternFly-6%3A-Components?m=auto&node-id=815-212',
  {
    props: {
      showNumber: figma.boolean('Show number'),
      number: figma.string('✏️ Number'),
      type: figma.enum('Type', {
        Unfilled: 'unfilled',
        Filled: 'filled',
        Disabled: 'disabled'
      })
    },
    example: (props) => <Slider />
  }
);

import React from 'react';
import { Alert } from './Alert';
import figma from '@figma/code-connect';
import { title } from 'process';

/**
 * -- This file was auto-generated by Code Connect --
 * `props` includes a mapping from Figma properties and variants to
 * suggested values. You should update this to match the props of your
 * code component, and update the `example` function to return the
 * code example you'd like to see in Figma
 */

const sharedAlertProps = {
  expandable: figma.boolean('Expandable'),
  dismissable: figma.boolean('Dismissable'),
  title: figma.string('✏️ Title'),
  actions: figma.boolean('Actions'),
  type: figma.enum('Type', {
    Info: 'info',
    Success: 'success',
    Warning: 'warning',
    Danger: 'danger',
    Custom: 'custom'
  }),
  children: figma.children('*')
};

// Inline alerts
figma.connect(
  Alert,
  'https://www.figma.com/design/VMEX8Xg2nzhBX8rfBx53jp/branch/H3LonYnwH26v9zNEa2SXFk/PatternFly-6%3A-Components?m=auto&node-id=1110-2784',
  {
    props: {
      ...sharedAlertProps
      // description: figma.string("✏️ Description"),
      // description: figma.boolean("Description"),
    },
    example: (props) => <Alert title={title}></Alert>
  }
);

figma.connect(
  Alert,
  'https://www.figma.com/design/VMEX8Xg2nzhBX8rfBx53jp/branch/H3LonYnwH26v9zNEa2SXFk/PatternFly-6%3A-Components?m=auto&node-id=1110-2698',
  {
    props: {
      ...sharedAlertProps,
      description: figma.string('✏️ Description'),
      // description: figma.boolean("Description"),
      expandable: figma.boolean('Expandable'),
      dismissable: figma.boolean('Dismissable'),
      title: figma.string('✏️ Title'),
      actions: figma.boolean('Actions'),
      type: figma.enum('Type', {
        Info: 'info',
        Success: 'success',
        Warning: 'warning',
        Danger: 'danger',
        Custom: 'custom'
      })
    },
    example: (props) => <Alert />
  }
);

figma.connect(
  Alert,
  'https://www.figma.com/design/VMEX8Xg2nzhBX8rfBx53jp/branch/H3LonYnwH26v9zNEa2SXFk/PatternFly-6%3A-Components?m=auto&node-id=1110-2780',
  {
    props: {
      ...sharedAlertProps
    },
    example: (props) => <Alert />
  }
);

figma.connect(
  Alert,
  'https://www.figma.com/design/VMEX8Xg2nzhBX8rfBx53jp/branch/H3LonYnwH26v9zNEa2SXFk/PatternFly-6%3A-Components?m=auto&node-id=1110-2754',
  {
    props: {
      ...sharedAlertProps,
      title: figma.string('✏️ Title'),
      type: figma.enum('Type', {
        Info: 'info',
        Danger: 'danger',
        Success: 'success',
        Warning: 'warning',
        Custom: 'custom'
      })
    },
    example: (props) => <Alert />
  }
);

figma.connect(
  Alert,
  'https://www.figma.com/design/VMEX8Xg2nzhBX8rfBx53jp/branch/H3LonYnwH26v9zNEa2SXFk/PatternFly-6%3A-Components?m=auto&node-id=1110-2784',
  {
    props: {
      ...sharedAlertProps,
      text: figma.string('✏️ Text'),
      state: figma.enum('State', {
        hover: 'hover',
        default: 'default'
      }),
      theme: figma.enum('Theme', {
        light: 'light'
      })
    },
    example: (props) => <Alert />
  }
);

figma.connect(
  Alert,
  'https://www.figma.com/design/VMEX8Xg2nzhBX8rfBx53jp/branch/H3LonYnwH26v9zNEa2SXFk/PatternFly-6%3A-Components?m=auto&node-id=1110-2587',
  {
    props: {
      ...sharedAlertProps,
      description: figma.boolean('Description'),
      description: figma.string('✏️ Description'),
      title: figma.string('✏️ Title'),
      actions: figma.boolean('Actions'),
      expandable: figma.boolean('Expandable'),
      type: figma.enum('Type', {
        Info: 'info',
        Success: 'success',
        Warning: 'warning',
        Danger: 'danger',
        Custom: 'custom'
      })
    },
    example: (props) => <Alert />
  }
);

figma.connect(
  Alert,
  'https://www.figma.com/design/VMEX8Xg2nzhBX8rfBx53jp/branch/H3LonYnwH26v9zNEa2SXFk/PatternFly-6%3A-Components?m=auto&node-id=1110-2821',
  {
    props: {
      ...sharedAlertProps,
      overflow: figma.boolean('Overflow'),
      property1: figma.enum('Property 1', {
        Default: 'default'
      })
    },
    example: (props) => <Alert />
  }
);

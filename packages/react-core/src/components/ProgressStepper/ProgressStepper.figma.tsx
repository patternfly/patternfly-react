import React from 'react';
import { ProgressStepper } from './ProgressStepper';
import figma from '@figma/code-connect';

/**
 * -- This file was auto-generated by Code Connect --
 * `props` includes a mapping from Figma properties and variants to
 * suggested values. You should update this to match the props of your
 * code component, and update the `example` function to return the
 * code example you'd like to see in Figma
 */

figma.connect(
  ProgressStepper,
  'https://www.figma.com/design/VMEX8Xg2nzhBX8rfBx53jp/branch/H3LonYnwH26v9zNEa2SXFk/PatternFly-6%3A-Components?m=auto&node-id=7644-38563',
  {
    props: {
      direction: figma.enum('Direction', {
        Horizontal: 'horizontal',
        Vertical: 'vertical'
      }),
      size: figma.enum('Size', {
        Default: 'default',
        Compact: 'compact'
      })
    },
    example: (props) => <ProgressStepper />
  }
);

figma.connect(
  ProgressStepper,
  'https://www.figma.com/design/VMEX8Xg2nzhBX8rfBx53jp/branch/H3LonYnwH26v9zNEa2SXFk/PatternFly-6%3A-Components?m=auto&node-id=7644-38703',
  {
    props: {
      state: figma.enum('State', {
        Pending: 'pending',
        Warning: 'warning',
        'Loading/Misc State': 'loading-misc-state',
        Failure: 'failure',
        Success: 'success',
        'In Progress': 'in-progress'
      }),
      size: figma.enum('Size', {
        Default: 'default',
        Compact: 'compact'
      })
    },
    example: (props) => <ProgressStepper />
  }
);

figma.connect(
  ProgressStepper,
  'https://www.figma.com/design/VMEX8Xg2nzhBX8rfBx53jp/branch/H3LonYnwH26v9zNEa2SXFk/PatternFly-6%3A-Components?m=auto&node-id=7644-38613',
  {
    props: {
      direction: figma.enum('Direction', {
        Horizontal: 'horizontal',
        Vertical: 'vertical'
      })
    },
    example: (props) => <ProgressStepper />
  }
);

figma.connect(
  ProgressStepper,
  'https://www.figma.com/design/VMEX8Xg2nzhBX8rfBx53jp/branch/H3LonYnwH26v9zNEa2SXFk/PatternFly-6%3A-Components?m=auto&node-id=7644-38618',
  {
    props: {
      popoverUnderline: figma.boolean('Popover Underline '),
      description: figma.boolean('Description'),
      state: figma.enum('State', {
        'In progress status': 'in-progress-status',
        'Pending status': 'pending-status',
        'Failure status': 'failure-status',
        'Completed status': 'completed-status',
        'Warning status': 'warning-status',
        'Loading/Misc. state': 'loading-misc--state'
      }),
      direction: figma.enum('Direction', {
        Horizontal: 'horizontal',
        Vertical: 'vertical'
      })
    },
    example: (props) => <ProgressStepper />
  }
);

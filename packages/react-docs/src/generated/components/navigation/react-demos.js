import React from 'react';
import { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';
import { DashboardBreadcrumb } from '../../../../../react-core/src/demos/./examples/DashboardWrapper';
import DashboardHeader from '../../../../../react-core/src/demos/./examples/DashboardHeader';
import CogIcon from '@patternfly/react-icons/dist/esm/icons/cog-icon';
import HelpIcon from '@patternfly/react-icons/dist/esm/icons/help-icon';
import QuestionCircleIcon from '@patternfly/react-icons/dist/esm/icons/question-circle-icon';
import imgBrand from '@patternfly/react-core/src/components/Brand/examples/pfLogo.svg';
import imgAvatar from '@patternfly/react-core/src/components/Avatar/examples/avatarImg.svg';
import imgColorBrand from '@patternfly/react-core/src/demos/examples/pfColorLogo.svg';
import srcImportdefaultnav from './react-demos/default-nav.png';
import srcImportdrilldownnav from './react-demos/drilldown-nav.png';
import srcImportexpandablenav from './react-demos/expandable-nav.png';
import srcImportflyoutnav from './react-demos/flyout-nav.png';
import srcImportgroupednav from './react-demos/grouped-nav.png';
import srcImporthorizontalnavwithhorizontalsubnav from './react-demos/horizontal-nav-with-horizontal-subnav.png';
import srcImporthorizontalnav from './react-demos/horizontal-nav.png';
import srcImporthorizontalsubnav from './react-demos/horizontal-subnav.png';
import srcImportlegacytertiarynav from './react-demos/legacy-tertiary-nav.png';
import srcImportlegacylightnav from './react-demos/legacylight-nav.png';
import srcImportmanualnav from './react-demos/manual-nav.png';
import srcImporttertiarynav from './react-demos/tertiary-nav.png';
const pageData = {
  "id": "Navigation",
  "section": "components",
  "source": "react-demos",
  "slug": "/components/navigation/react-demos",
  "sourceLink": "https://github.com/patternfly/patternfly-react/blob/main/packages/react-core/src/demos/Nav.md",
  "fullscreenExamples": [
    "Default nav",
    "Grouped nav",
    "Expandable nav",
    "Horizontal nav",
    "Horizontal subnav",
    "Horizontal nav with horizontal subnav",
    "Legacy tertiary nav",
    "Legacy/Light Nav",
    "Manual nav",
    "Flyout nav",
    "Drilldown nav"
  ]
};
pageData.liveContext = {
  DashboardBreadcrumb,
  DashboardHeader,
  CogIcon,
  HelpIcon,
  QuestionCircleIcon,
  imgBrand,
  imgAvatar,
  imgColorBrand
};
pageData.examples = {
  'Default nav': props => 
    <Example {...pageData} {...props} thumbnail={srcImportdefaultnav} {...{"code":"import React from 'react';\nimport {\n  Card,\n  CardBody,\n  Gallery,\n  GalleryItem,\n  Nav,\n  NavItem,\n  NavList,\n  Page,\n  PageSection,\n  PageSectionVariants,\n  PageSidebar,\n  SkipToContent,\n  TextContent,\n  Text\n} from '@patternfly/react-core';\nimport { DashboardBreadcrumb } from './examples/DashboardWrapper';\nimport DashboardHeader from './examples/DashboardHeader';\n\nclass PageLayoutDefaultNav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeItem: 0\n    };\n\n    this.onNavSelect = result => {\n      this.setState({\n        activeItem: result.itemId\n      });\n    };\n  }\n\n  render() {\n    const { activeItem } = this.state;\n\n    const PageNav = (\n      <Nav onSelect={this.onNavSelect} aria-label=\"Nav\">\n        <NavList>\n          <NavItem itemId={0} isActive={activeItem === 0} to=\"#\">\n            System Panel\n          </NavItem>\n          <NavItem itemId={1} isActive={activeItem === 1} to=\"#\">\n            Policy\n          </NavItem>\n          <NavItem itemId={2} isActive={activeItem === 2} to=\"#\">\n            Authentication\n          </NavItem>\n          <NavItem itemId={3} isActive={activeItem === 3} to=\"#\">\n            Network Services\n          </NavItem>\n          <NavItem itemId={4} isActive={activeItem === 4} to=\"#\">\n            Server\n          </NavItem>\n        </NavList>\n      </Nav>\n    );\n\n    const Sidebar = <PageSidebar nav={PageNav} />;\n    const pageId = 'main-content-page-layout-default-nav';\n    const PageSkipToContent = <SkipToContent href={`#${pageId}`}>Skip to content</SkipToContent>;\n\n    return (\n      <React.Fragment>\n        <Page\n          header={<DashboardHeader />}\n          sidebar={Sidebar}\n          isManagedSidebar\n          skipToContent={PageSkipToContent}\n          breadcrumb={DashboardBreadcrumb}\n          mainContainerId={pageId}\n        >\n          <PageSection variant={PageSectionVariants.light}>\n            <TextContent>\n              <Text component=\"h1\">Main title</Text>\n              <Text component=\"p\">\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\n                of its relative line height of 1.5.\n              </Text>\n            </TextContent>\n          </PageSection>\n          <PageSection>\n            <Gallery hasGutter>\n              {Array.apply(0, Array(10)).map((x, i) => (\n                <GalleryItem key={i}>\n                  <Card>\n                    <CardBody>This is a card</CardBody>\n                  </Card>\n                </GalleryItem>\n              ))}\n            </Gallery>\n          </PageSection>\n        </Page>\n      </React.Fragment>\n    );\n  }\n}","title":"Default nav","lang":"js","isFullscreen":true}}>
      
    </Example>,
  'Grouped nav': props => 
    <Example {...pageData} {...props} thumbnail={srcImportgroupednav} {...{"code":"import React from 'react';\nimport {\n  Nav,\n  NavGroup,\n  NavItem,\n  Page,\n  PageSection,\n  PageSectionVariants,\n  PageSidebar,\n  SkipToContent,\n  TextContent,\n  Text\n} from '@patternfly/react-core';\nimport DashboardHeader from './examples/DashboardHeader';\n\nclass PageLayoutGroupsNav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeItem: 'grp-1_itm-1'\n    };\n\n    this.onNavSelect = result => {\n      this.setState({\n        activeItem: result.itemId\n      });\n    };\n  }\n\n  render() {\n    const { activeItem } = this.state;\n\n    const PageNav = (\n      <Nav onSelect={this.onNavSelect} aria-label=\"Nav\">\n        <NavGroup title=\"System Panel\">\n          <NavItem itemId=\"grp-1_itm-1\" isActive={activeItem === 'grp-1_itm-1'} to=\"#\">\n            Overview\n          </NavItem>\n          <NavItem itemId=\"grp-1_itm-2\" isActive={activeItem === 'grp-1_itm-2'} to=\"#\">\n            Resource Usage\n          </NavItem>\n          <NavItem itemId=\"grp-1_itm-3\" isActive={activeItem === 'grp-1_itm-3'} to=\"#\">\n            Hypervisors\n          </NavItem>\n          <NavItem itemId=\"grp-1_itm-4\" isActive={activeItem === 'grp-1_itm-4'} to=\"#\">\n            Instances\n          </NavItem>\n          <NavItem itemId=\"grp-1_itm-5\" isActive={activeItem === 'grp-1_itm-5'} to=\"#\">\n            Volumes\n          </NavItem>\n          <NavItem itemId=\"grp-1_itm-6\" isActive={activeItem === 'grp-1_itm-6'} to=\"#\">\n            Network\n          </NavItem>\n        </NavGroup>\n        <NavGroup title=\"Policy\">\n          <NavItem itemId=\"grp-2_itm-1\" isActive={activeItem === 'grp-2_itm-1'} to=\"#\">\n            Hosts\n          </NavItem>\n          <NavItem itemId=\"grp-2_itm-2\" isActive={activeItem === 'grp-2_itm-2'} to=\"#\">\n            Virtual Machines\n          </NavItem>\n          <NavItem itemId=\"grp-2_itm-3\" isActive={activeItem === 'grp-2_itm-3'} to=\"#\">\n            Storage\n          </NavItem>\n        </NavGroup>\n      </Nav>\n    );\n\n    const Sidebar = <PageSidebar nav={PageNav} />;\n    const pageId = 'main-content-page-layout-group-nav';\n    const PageSkipToContent = <SkipToContent href={`#${pageId}`}>Skip to Content</SkipToContent>;\n\n    return (\n      <React.Fragment>\n        <Page\n          header={<DashboardHeader />}\n          sidebar={Sidebar}\n          isManagedSidebar\n          skipToContent={PageSkipToContent}\n          mainContainerId={pageId}\n        >\n          <PageSection variant={PageSectionVariants.light}>\n            <TextContent>\n              <Text component=\"h1\">Main title</Text>\n              <Text component=\"p\">\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\n                of its relative line height of 1.5.\n              </Text>\n            </TextContent>\n          </PageSection>\n          <PageSection variant={PageSectionVariants.light}>Light</PageSection>\n          <PageSection variant={PageSectionVariants.dark}>Dark</PageSection>\n          <PageSection variant={PageSectionVariants.darker}>Darker</PageSection>\n          <PageSection>Content</PageSection>\n        </Page>\n      </React.Fragment>\n    );\n  }\n}","title":"Grouped nav","lang":"js","isFullscreen":true}}>
      
    </Example>,
  'Expandable nav': props => 
    <Example {...pageData} {...props} thumbnail={srcImportexpandablenav} {...{"code":"import React from 'react';\nimport {\n  Card,\n  CardBody,\n  Gallery,\n  GalleryItem,\n  Nav,\n  NavExpandable,\n  NavItem,\n  NavList,\n  Page,\n  PageSection,\n  PageSectionVariants,\n  PageSidebar,\n  SkipToContent,\n  TextContent,\n  Text\n} from '@patternfly/react-core';\nimport { DashboardBreadcrumb } from './examples/DashboardWrapper';\nimport DashboardHeader from './examples/DashboardHeader';\n\nclass PageLayoutExpandableNav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeGroup: 'grp-1',\n      activeItem: 'grp-1_itm-1'\n    };\n\n    this.onNavSelect = result => {\n      this.setState({\n        activeItem: result.itemId,\n        activeGroup: result.groupId\n      });\n    };\n  }\n\n  render() {\n    const { activeItem, activeGroup } = this.state;\n\n    const PageNav = (\n      <Nav onSelect={this.onNavSelect} aria-label=\"Nav\">\n        <NavList>\n          <NavExpandable title=\"System Panel\" groupId=\"grp-1\" isActive={activeGroup === 'grp-1'} isExpanded>\n            <NavItem groupId=\"grp-1\" itemId=\"grp-1_itm-1\" isActive={activeItem === 'grp-1_itm-1'} to=\"#\">\n              Overview\n            </NavItem>\n            <NavItem groupId=\"grp-1\" itemId=\"grp-1_itm-2\" isActive={activeItem === 'grp-1_itm-2'} to=\"#\">\n              Resource usage\n            </NavItem>\n            <NavItem groupId=\"grp-1\" itemId=\"grp-1_itm-3\" isActive={activeItem === 'grp-1_itm-3'} to=\"#\">\n              Hypervisors\n            </NavItem>\n            <NavItem groupId=\"grp-1\" itemId=\"grp-1_itm-4\" isActive={activeItem === 'grp-1_itm-4'} to=\"#\">\n              Instances\n            </NavItem>\n            <NavItem groupId=\"grp-1\" itemId=\"grp-1_itm-5\" isActive={activeItem === 'grp-1_itm-5'} to=\"#\">\n              Volumes\n            </NavItem>\n            <NavItem groupId=\"grp-1\" itemId=\"grp-1_itm-6\" isActive={activeItem === 'grp-1_itm-6'} to=\"#\">\n              Network\n            </NavItem>\n          </NavExpandable>\n          <NavExpandable title=\"Policy\" groupId=\"grp-2\" isActive={activeGroup === 'grp-2'} to=\"#\">\n            <NavItem groupId=\"grp-2\" itemId=\"grp-2_itm-1\" isActive={activeItem === 'grp-2_itm-1'} to=\"#\">\n              Subnav link 1\n            </NavItem>\n            <NavItem groupId=\"grp-2\" itemId=\"grp-2_itm-2\" isActive={activeItem === 'grp-2_itm-2'} to=\"#\">\n              Subnav link 2\n            </NavItem>\n          </NavExpandable>\n          <NavExpandable title=\"Authentication\" groupId=\"grp-3\" isActive={activeGroup === 'grp-3'}>\n            <NavItem groupId=\"grp-3\" itemId=\"grp-3_itm-1\" isActive={activeItem === 'grp-3_itm-1'} to=\"#\">\n              Subnav link 1\n            </NavItem>\n            <NavItem groupId=\"grp-3\" itemId=\"grp-3_itm-2\" isActive={activeItem === 'grp-3_itm-2'} to=\"#\">\n              Subnav link 2\n            </NavItem>\n          </NavExpandable>\n        </NavList>\n      </Nav>\n    );\n\n    const Sidebar = <PageSidebar nav={PageNav} />;\n    const pageId = 'main-content-page-layout-expandable-nav';\n    const PageSkipToContent = <SkipToContent href={`#${pageId}`}>Skip to content</SkipToContent>;\n\n    return (\n      <React.Fragment>\n        <Page\n          header={<DashboardHeader />}\n          sidebar={Sidebar}\n          isManagedSidebar\n          skipToContent={PageSkipToContent}\n          breadcrumb={DashboardBreadcrumb}\n          mainContainerId={pageId}\n        >\n          <PageSection variant={PageSectionVariants.light}>\n            <TextContent>\n              <Text component=\"h1\">Main title</Text>\n              <Text component=\"p\">\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\n                of its relative line height of 1.5.\n              </Text>\n            </TextContent>\n          </PageSection>\n          <PageSection>\n            <Gallery hasGutter>\n              {Array.apply(0, Array(10)).map((x, i) => (\n                <GalleryItem key={i}>\n                  <Card>\n                    <CardBody>This is a card</CardBody>\n                  </Card>\n                </GalleryItem>\n              ))}\n            </Gallery>\n          </PageSection>\n        </Page>\n      </React.Fragment>\n    );\n  }\n}","title":"Expandable nav","lang":"js","isFullscreen":true}}>
      
    </Example>,
  'Horizontal nav': props => 
    <Example {...pageData} {...props} thumbnail={srcImporthorizontalnav} {...{"code":"import React from 'react';\nimport {\n  Avatar,\n  Brand,\n  Button,\n  ButtonVariant,\n  Card,\n  CardBody,\n  Dropdown,\n  DropdownGroup,\n  DropdownToggle,\n  DropdownItem,\n  Gallery,\n  GalleryItem,\n  KebabToggle,\n  Nav,\n  NavItem,\n  NavList,\n  Page,\n  PageHeader,\n  PageSection,\n  PageSectionVariants,\n  SkipToContent,\n  TextContent,\n  Text,\n  PageHeaderTools,\n  PageHeaderToolsGroup,\n  PageHeaderToolsItem\n} from '@patternfly/react-core';\nimport { DashboardBreadcrumb } from './examples/DashboardWrapper';\nimport CogIcon from '@patternfly/react-icons/dist/esm/icons/cog-icon';\nimport HelpIcon from '@patternfly/react-icons/dist/esm/icons/help-icon';\nimport QuestionCircleIcon from '@patternfly/react-icons/dist/esm/icons/question-circle-icon';\nimport imgBrand from '@patternfly/react-core/src/components/Brand/examples/pfLogo.svg';\nimport imgAvatar from '@patternfly/react-core/src/components/Avatar/examples/avatarImg.svg';\n\nclass PageLayoutHorizontalNav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDropdownOpen: false,\n      isKebabDropdownOpen: false,\n      activeItem: 0\n    };\n\n    this.onDropdownToggle = isDropdownOpen => {\n      this.setState({\n        isDropdownOpen\n      });\n    };\n\n    this.onDropdownSelect = event => {\n      this.setState({\n        isDropdownOpen: !this.state.isDropdownOpen\n      });\n    };\n\n    this.onKebabDropdownToggle = isKebabDropdownOpen => {\n      this.setState({\n        isKebabDropdownOpen\n      });\n    };\n\n    this.onKebabDropdownSelect = event => {\n      this.setState({\n        isKebabDropdownOpen: !this.state.isKebabDropdownOpen\n      });\n    };\n\n    this.onNavSelect = result => {\n      this.setState({\n        activeItem: result.itemId\n      });\n    };\n  }\n\n  render() {\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem } = this.state;\n\n    const PageNav = (\n      <Nav onSelect={this.onNavSelect} aria-label=\"Nav\" variant=\"horizontal\">\n        <NavList>\n          <NavItem itemId={0} isActive={activeItem === 0} to=\"#\">\n            System Panel\n          </NavItem>\n          <NavItem itemId={1} isActive={activeItem === 1} to=\"#\">\n            Policy\n          </NavItem>\n          <NavItem itemId={2} isActive={activeItem === 2} to=\"#\">\n            Authentication\n          </NavItem>\n          <NavItem itemId={3} isActive={activeItem === 3} to=\"#\">\n            Network Services\n          </NavItem>\n          <NavItem itemId={4} isActive={activeItem === 4} to=\"#\">\n            Server\n          </NavItem>\n        </NavList>\n      </Nav>\n    );\n    const kebabDropdownItems = [\n      <DropdownItem>\n        <CogIcon /> Settings\n      </DropdownItem>,\n      <DropdownItem>\n        <HelpIcon /> Help\n      </DropdownItem>\n    ];\n    const userDropdownItems = [\n      <DropdownGroup key=\"group 2\">\n        <DropdownItem key=\"group 2 profile\">My profile</DropdownItem>\n        <DropdownItem key=\"group 2 user\" component=\"button\">\n          User management\n        </DropdownItem>\n        <DropdownItem key=\"group 2 logout\">Logout</DropdownItem>\n      </DropdownGroup>\n    ];\n    const headerTools = (\n      <PageHeaderTools>\n        <PageHeaderToolsGroup\n          visibility={{\n            default: 'hidden',\n            lg: 'visible'\n          }} /** the settings and help icon buttons are only visible on desktop sizes and replaced by a kebab dropdown for other sizes */\n        >\n          <PageHeaderToolsItem>\n            <Button aria-label=\"Settings actions\" variant={ButtonVariant.plain}>\n              <CogIcon />\n            </Button>\n          </PageHeaderToolsItem>\n          <PageHeaderToolsItem>\n            <Button aria-label=\"Help actions\" variant={ButtonVariant.plain}>\n              <QuestionCircleIcon />\n            </Button>\n          </PageHeaderToolsItem>\n        </PageHeaderToolsGroup>\n        <PageHeaderToolsGroup>\n          <PageHeaderToolsItem\n            visibility={{\n              lg: 'hidden'\n            }} /** this kebab dropdown replaces the icon buttons and is hidden for desktop sizes */\n          >\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onKebabDropdownSelect}\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\n              isOpen={isKebabDropdownOpen}\n              dropdownItems={kebabDropdownItems}\n            />\n          </PageHeaderToolsItem>\n          <PageHeaderToolsItem\n            visibility={{ default: 'hidden', md: 'visible' }} /** this user dropdown is hidden on mobile sizes */\n          >\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onDropdownSelect}\n              isOpen={isDropdownOpen}\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>John Smith</DropdownToggle>}\n              dropdownItems={userDropdownItems}\n            />\n          </PageHeaderToolsItem>\n        </PageHeaderToolsGroup>\n        <Avatar src={imgAvatar} alt=\"Avatar image\" />\n      </PageHeaderTools>\n    );\n\n    const Header = (\n      <PageHeader logo={<Brand src={imgBrand} alt=\"Patternfly Logo\" />} headerTools={headerTools} topNav={PageNav} />\n    );\n\n    const pageId = 'main-content-page-layout-horizontal-nav';\n    const PageSkipToContent = <SkipToContent href={`#${pageId}`}>Skip to content</SkipToContent>;\n\n    return (\n      <React.Fragment>\n        <Page\n          header={Header}\n          skipToContent={PageSkipToContent}\n          breadcrumb={DashboardBreadcrumb}\n          mainContainerId={pageId}\n        >\n          <PageSection variant={PageSectionVariants.light}>\n            <TextContent>\n              <Text component=\"h1\">Main title</Text>\n              <Text component=\"p\">\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\n                of its relative line height of 1.5.\n              </Text>\n            </TextContent>\n          </PageSection>\n          <PageSection>\n            <Gallery hasGutter>\n              {Array.apply(0, Array(10)).map((x, i) => (\n                <GalleryItem key={i}>\n                  <Card>\n                    <CardBody>This is a card</CardBody>\n                  </Card>\n                </GalleryItem>\n              ))}\n            </Gallery>\n          </PageSection>\n        </Page>\n      </React.Fragment>\n    );\n  }\n}","title":"Horizontal nav","lang":"js","isFullscreen":true}}>
      
    </Example>,
  'Horizontal subnav': props => 
    <Example {...pageData} {...props} thumbnail={srcImporthorizontalsubnav} {...{"code":"import React from 'react';\nimport {\n  Card,\n  CardBody,\n  Gallery,\n  GalleryItem,\n  Nav,\n  NavItem,\n  NavList,\n  Page,\n  PageSection,\n  PageSectionVariants,\n  PageSidebar,\n  SkipToContent,\n  TextContent,\n  Text\n} from '@patternfly/react-core';\nimport { DashboardBreadcrumb } from './examples/DashboardWrapper';\nimport DashboardHeader from './examples/DashboardHeader';\n\nclass VerticalNavWithSubnav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeItem: 0,\n      activeSubNavItem: 7\n    };\n\n    this.onNavSelect = result => {\n      this.setState({\n        activeItem: result.itemId\n      });\n    };\n\n    this.onSubNavSelect = result => {\n      this.setState({\n        activeSubNavItem: result.itemId\n      });\n    };\n  }\n\n  render() {\n    const { activeItem, activeSubNavItem } = this.state;\n\n    const PageNav = (\n      <Nav onSelect={this.onNavSelect} aria-label=\"Nav\">\n        <NavList>\n          <NavItem itemId={0} isActive={activeItem === 0} to=\"#\">\n            System Panel\n          </NavItem>\n          <NavItem itemId={1} isActive={activeItem === 1} to=\"#\">\n            Policy\n          </NavItem>\n          <NavItem itemId={2} isActive={activeItem === 2} to=\"#\">\n            Authentication\n          </NavItem>\n          <NavItem itemId={3} isActive={activeItem === 3} to=\"#\">\n            Network Services\n          </NavItem>\n          <NavItem itemId={4} isActive={activeItem === 4} to=\"#\">\n            Server\n          </NavItem>\n        </NavList>\n      </Nav>\n    );\n\n    const Sidebar = <PageSidebar nav={PageNav} />;\n    const pageId = 'main-content-page-layout-default-nav';\n    const PageSkipToContent = <SkipToContent href={`#${pageId}`}>Skip to content</SkipToContent>;\n\n    const SubNav = (\n      <Nav onSelect={this.onSubNavSelect} aria-label=\"Nav\" variant=\"horizontal-subnav\">\n        <NavList>\n          <NavItem itemId={7} isActive={activeSubNavItem === 7} to=\"#\">\n            Horizontal subnav item 1\n          </NavItem>\n          <NavItem itemId={8} isActive={activeSubNavItem === 8} to=\"#\">\n            Horizontal subnav item 2\n          </NavItem>\n          <NavItem itemId={9} isActive={activeSubNavItem === 9} to=\"#\">\n            Horizontal subnav item 3\n          </NavItem>\n          <NavItem itemId={10} isActive={activeSubNavItem === 10} to=\"#\">\n            Horizontal subnav item 4\n          </NavItem>\n          <NavItem itemId={11} isActive={activeSubNavItem === 11} to=\"#\">\n            Horizontal subnav item 5\n          </NavItem>\n          <NavItem itemId={12} isActive={activeSubNavItem === 12} to=\"#\">\n            Horizontal subnav item 6\n          </NavItem>\n          <NavItem itemId={13} isActive={activeSubNavItem === 13} to=\"#\">\n            Horizontal subnav item 7\n          </NavItem>\n        </NavList>\n      </Nav>\n    );\n\n    return (\n      <React.Fragment>\n        <Page\n          header={<DashboardHeader />}\n          sidebar={Sidebar}\n          isManagedSidebar\n          skipToContent={PageSkipToContent}\n          mainContainerId={pageId}\n        >\n          <PageSection type={PageSectionTypes.subNav} isWidthLimited>\n            {SubNav}\n          </PageSection>\n          <PageSection type={PageSectionTypes.breadcrumb} isWidthLimited>\n            {DashboardBreadcrumb}\n          </PageSection>\n          <PageSection variant={PageSectionVariants.light}>\n            <TextContent>\n              <Text component=\"h1\">Main title</Text>\n              <Text component=\"p\">\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\n                of it’s relative line height of 1.5.\n              </Text>\n            </TextContent>\n          </PageSection>\n          <PageSection>\n            <Gallery hasGutter>\n              {Array.apply(0, Array(10)).map((x, i) => (\n                <GalleryItem key={i}>\n                  <Card>\n                    <CardBody>This is a card</CardBody>\n                  </Card>\n                </GalleryItem>\n              ))}\n            </Gallery>\n          </PageSection>\n        </Page>\n      </React.Fragment>\n    );\n  }\n}","title":"Horizontal subnav","lang":"js","isFullscreen":true}}>
      
    </Example>,
  'Horizontal nav with horizontal subnav': props => 
    <Example {...pageData} {...props} thumbnail={srcImporthorizontalnavwithhorizontalsubnav} {...{"code":"import React from 'react';\nimport {\n  Avatar,\n  Brand,\n  Button,\n  ButtonVariant,\n  Card,\n  CardBody,\n  Dropdown,\n  DropdownGroup,\n  DropdownToggle,\n  DropdownItem,\n  Gallery,\n  GalleryItem,\n  KebabToggle,\n  Nav,\n  NavItem,\n  NavList,\n  Page,\n  PageHeader,\n  PageSection,\n  PageSectionVariants,\n  PageSectionTypes,\n  SkipToContent,\n  TextContent,\n  Text,\n  PageHeaderTools,\n  PageHeaderToolsGroup,\n  PageHeaderToolsItem\n} from '@patternfly/react-core';\nimport { DashboardBreadcrumb } from './examples/DashboardWrapper';\nimport CogIcon from '@patternfly/react-icons/dist/esm/icons/cog-icon';\nimport HelpIcon from '@patternfly/react-icons/dist/esm/icons/help-icon';\nimport QuestionCircleIcon from '@patternfly/react-icons/dist/esm/icons/question-circle-icon';\nimport imgColorBrand from '@patternfly/react-core/src/demos/examples/pfColorLogo.svg';\nimport imgAvatar from '@patternfly/react-core/src/components/Avatar/examples/avatarImg.svg';\n\nclass HorizontalNavWithSubnav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDropdownOpen: false,\n      isKebabDropdownOpen: false,\n      activeItem: 0,\n      activeSubNavItem: 7\n    };\n\n    this.onDropdownToggle = isDropdownOpen => {\n      this.setState({\n        isDropdownOpen\n      });\n    };\n\n    this.onDropdownSelect = event => {\n      this.setState({\n        isDropdownOpen: !this.state.isDropdownOpen\n      });\n    };\n\n    this.onKebabDropdownToggle = isKebabDropdownOpen => {\n      this.setState({\n        isKebabDropdownOpen\n      });\n    };\n\n    this.onKebabDropdownSelect = event => {\n      this.setState({\n        isKebabDropdownOpen: !this.state.isKebabDropdownOpen\n      });\n    };\n\n    this.onNavSelect = result => {\n      this.setState({\n        activeItem: result.itemId\n      });\n    };\n\n    this.onSubNavSelect = result => {\n      this.setState({\n        activeSubNavItem: result.itemId\n      });\n    };\n  }\n\n  render() {\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem, activeSubNavItem } = this.state;\n\n    const PageNav = (\n      <Nav onSelect={this.onNavSelect} aria-label=\"Nav\" variant=\"horizontal\">\n        <NavList>\n          <NavItem itemId={0} isActive={activeItem === 0} to=\"#\">\n            System Panel\n          </NavItem>\n          <NavItem itemId={1} isActive={activeItem === 1} to=\"#\">\n            Policy\n          </NavItem>\n          <NavItem itemId={2} isActive={activeItem === 2} to=\"#\">\n            Authentication\n          </NavItem>\n          <NavItem itemId={3} isActive={activeItem === 3} to=\"#\">\n            Network Services\n          </NavItem>\n          <NavItem itemId={4} isActive={activeItem === 4} to=\"#\">\n            Server\n          </NavItem>\n          <NavItem itemId={5} isActive={activeItem === 5} to=\"#\">\n            Other horizontal nav item 1\n          </NavItem>\n          <NavItem itemId={6} isActive={activeItem === 6} to=\"#\">\n            Other horizontal nav item 2\n          </NavItem>\n        </NavList>\n      </Nav>\n    );\n    const kebabDropdownItems = [\n      <DropdownItem>\n        <CogIcon /> Settings\n      </DropdownItem>,\n      <DropdownItem>\n        <HelpIcon /> Help\n      </DropdownItem>\n    ];\n    const userDropdownItems = [\n      <DropdownGroup key=\"group 2\">\n        <DropdownItem key=\"group 2 profile\">My profile</DropdownItem>\n        <DropdownItem key=\"group 2 user\" component=\"button\">\n          User management\n        </DropdownItem>\n        <DropdownItem key=\"group 2 logout\">Logout</DropdownItem>\n      </DropdownGroup>\n    ];\n    const headerTools = (\n      <PageHeaderTools>\n        <PageHeaderToolsGroup\n          visibility={{\n            default: 'hidden',\n            lg: 'visible'\n          }} /** the settings and help icon buttons are only visible on desktop sizes and replaced by a kebab dropdown for other sizes */\n        >\n          <PageHeaderToolsItem>\n            <Button aria-label=\"Settings actions\" variant={ButtonVariant.plain}>\n              <CogIcon />\n            </Button>\n          </PageHeaderToolsItem>\n          <PageHeaderToolsItem>\n            <Button aria-label=\"Help actions\" variant={ButtonVariant.plain}>\n              <QuestionCircleIcon />\n            </Button>\n          </PageHeaderToolsItem>\n        </PageHeaderToolsGroup>\n        <PageHeaderToolsGroup>\n          <PageHeaderToolsItem\n            visibility={{\n              lg: 'hidden'\n            }} /** this kebab dropdown replaces the icon buttons and is hidden for desktop sizes */\n          >\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onKebabDropdownSelect}\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\n              isOpen={isKebabDropdownOpen}\n              dropdownItems={kebabDropdownItems}\n            />\n          </PageHeaderToolsItem>\n          <PageHeaderToolsItem\n            visibility={{ default: 'hidden', md: 'visible' }} /** this user dropdown is hidden on mobile sizes */\n          >\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onDropdownSelect}\n              isOpen={isDropdownOpen}\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>John Smith</DropdownToggle>}\n              dropdownItems={userDropdownItems}\n            />\n          </PageHeaderToolsItem>\n        </PageHeaderToolsGroup>\n        <Avatar src={imgAvatar} alt=\"Avatar image\" />\n      </PageHeaderTools>\n    );\n\n    const Header = (\n      <PageHeader\n        logo={<Brand src={imgColorBrand} alt=\"Patternfly Logo\" />}\n        headerTools={headerTools}\n        topNav={PageNav}\n      />\n    );\n\n    const pageId = 'main-content-page-layout-horizontal-nav';\n    const PageSkipToContent = <SkipToContent href={`#${pageId}`}>Skip to content</SkipToContent>;\n\n    const SubNav = (\n      <Nav onSelect={this.onSubNavSelect} aria-label=\"Nav\" variant=\"horizontal-subnav\">\n        <NavList>\n          <NavItem itemId={7} isActive={activeSubNavItem === 7} to=\"#\">\n            Horizontal subnav item 1\n          </NavItem>\n          <NavItem itemId={8} isActive={activeSubNavItem === 8} to=\"#\">\n            Horizontal subnav item 2\n          </NavItem>\n          <NavItem itemId={9} isActive={activeSubNavItem === 9} to=\"#\">\n            Horizontal subnav item 3\n          </NavItem>\n          <NavItem itemId={10} isActive={activeSubNavItem === 10} to=\"#\">\n            Horizontal subnav item 4\n          </NavItem>\n          <NavItem itemId={11} isActive={activeSubNavItem === 11} to=\"#\">\n            Horizontal subnav item 5\n          </NavItem>\n          <NavItem itemId={12} isActive={activeSubNavItem === 12} to=\"#\">\n            Horizontal subnav item 6\n          </NavItem>\n          <NavItem itemId={13} isActive={activeSubNavItem === 13} to=\"#\">\n            Horizontal subnav item 7\n          </NavItem>\n        </NavList>\n      </Nav>\n    );\n\n    return (\n      <React.Fragment>\n        <Page header={Header} skipToContent={PageSkipToContent} mainContainerId={pageId}>\n          <PageSection type={PageSectionTypes.subNav} isWidthLimited>\n            {SubNav}\n          </PageSection>\n          <PageSection type={PageSectionTypes.breadcrumb} isWidthLimited>\n            {DashboardBreadcrumb}\n          </PageSection>\n          <PageSection variant={PageSectionVariants.light}>\n            <TextContent>\n              <Text component=\"h1\">Main title</Text>\n              <Text component=\"p\">\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\n                of it’s relative line height of 1.5.\n              </Text>\n            </TextContent>\n          </PageSection>\n          <PageSection>\n            <Gallery hasGutter>\n              {Array.apply(0, Array(10)).map((x, i) => (\n                <GalleryItem key={i}>\n                  <Card>\n                    <CardBody>This is a card</CardBody>\n                  </Card>\n                </GalleryItem>\n              ))}\n            </Gallery>\n          </PageSection>\n        </Page>\n      </React.Fragment>\n    );\n  }\n}","title":"Horizontal nav with horizontal subnav","lang":"js","isFullscreen":true}}>
      
    </Example>,
  'Legacy tertiary nav': props => 
    <Example {...pageData} {...props} thumbnail={srcImportlegacytertiarynav} {...{"code":"import React from 'react';\nimport {\n  Card,\n  CardBody,\n  Gallery,\n  GalleryItem,\n  Nav,\n  NavItem,\n  NavList,\n  Page,\n  PageSection,\n  PageSectionVariants,\n  PageSidebar,\n  SkipToContent,\n  TextContent,\n  Text\n} from '@patternfly/react-core';\nimport { DashboardBreadcrumb } from './examples/DashboardWrapper';\nimport DashboardHeader from './examples/DashboardHeader';\n\nclass PageLayoutTertiaryNav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeItem: 0\n    };\n\n    this.onNavSelect = result => {\n      this.setState({\n        activeItem: result.itemId\n      });\n    };\n  }\n\n  render() {\n    const { activeItem } = this.state;\n\n    const PageNav = (\n      <Nav variant=\"tertiary\" onSelect={this.onNavSelect} aria-label=\"Nav\">\n        <NavList>\n          <NavItem itemId={0} isActive={activeItem === 0} to=\"#\">\n            System Panel\n          </NavItem>\n          <NavItem itemId={1} isActive={activeItem === 1} to=\"#\">\n            Policy\n          </NavItem>\n          <NavItem itemId={2} isActive={activeItem === 2} to=\"#\">\n            Authentication\n          </NavItem>\n          <NavItem itemId={3} isActive={activeItem === 3} to=\"#\">\n            Network Services\n          </NavItem>\n          <NavItem itemId={4} isActive={activeItem === 4} to=\"#\">\n            Server\n          </NavItem>\n        </NavList>\n      </Nav>\n    );\n\n    const pageId = 'main-content-page-layout-tertiary-nav';\n    const PageSkipToContent = <SkipToContent href={`#${pageId}`}>Skip to content</SkipToContent>;\n\n    return (\n      <React.Fragment>\n        <Page\n          header={<DashboardHeader />}\n          breadcrumb={DashboardBreadcrumb}\n          tertiaryNav={PageNav}\n          isManagedSidebar\n          isTertiaryNavWidthLimited\n          skipToContent={PageSkipToContent}\n          mainContainerId={pageId}\n        >\n          <PageSection variant={PageSectionVariants.light}>\n            <TextContent>\n              <Text component=\"h1\">Main title</Text>\n              <Text component=\"p\">\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\n                of its relative line height of 1.5.\n              </Text>\n            </TextContent>\n          </PageSection>\n          <PageSection>\n            <Gallery hasGutter>\n              {Array.apply(0, Array(10)).map((x, i) => (\n                <GalleryItem key={i}>\n                  <Card>\n                    <CardBody>This is a card</CardBody>\n                  </Card>\n                </GalleryItem>\n              ))}\n            </Gallery>\n          </PageSection>\n        </Page>\n      </React.Fragment>\n    );\n  }\n}","title":"Legacy tertiary nav","lang":"js","isFullscreen":true}}>
      
    </Example>,
  'Legacy/Light Nav': props => 
    <Example {...pageData} {...props} thumbnail={srcImportlegacylightnav} {...{"code":"import React from 'react';\nimport {\n  Card,\n  CardBody,\n  Gallery,\n  GalleryItem,\n  Nav,\n  NavItem,\n  NavList,\n  Page,\n  PageSection,\n  PageSectionVariants,\n  PageSidebar,\n  SkipToContent,\n  TextContent,\n  Text\n} from '@patternfly/react-core';\nimport DashboardHeader from './examples/DashboardHeader';\n\nclass PageLayoutLightNav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeItem: 0\n    };\n\n    this.onNavSelect = result => {\n      this.setState({\n        activeItem: result.itemId\n      });\n    };\n  }\n\n  render() {\n    const { activeItem } = this.state;\n\n    const PageNav = (\n      <Nav onSelect={this.onNavSelect} aria-label=\"Nav\" theme=\"light\">\n        <NavList>\n          <NavItem itemId={0} isActive={activeItem === 0} to=\"#\">\n            System Panel\n          </NavItem>\n          <NavItem itemId={1} isActive={activeItem === 1} to=\"#\">\n            Policy\n          </NavItem>\n          <NavItem itemId={2} isActive={activeItem === 2} to=\"#\">\n            Authentication\n          </NavItem>\n          <NavItem itemId={3} isActive={activeItem === 3} to=\"#\">\n            Network Services\n          </NavItem>\n          <NavItem itemId={4} isActive={activeItem === 4} to=\"#\">\n            Server\n          </NavItem>\n        </NavList>\n      </Nav>\n    );\n\n    const Sidebar = <PageSidebar nav={PageNav} theme=\"light\" />;\n    const pageId = 'main-content-page-layout-simple-nav';\n    const PageSkipToContent = <SkipToContent href={`#${pageId}`}>Skip to Content</SkipToContent>;\n\n    return (\n      <React.Fragment>\n        <Page\n          header={<DashboardHeader />}\n          sidebar={Sidebar}\n          isManagedSidebar\n          skipToContent={PageSkipToContent}\n          mainContainerId={pageId}\n        >\n          <PageSection variant={PageSectionVariants.light}>\n            <TextContent>\n              <Text component=\"h1\">Main title</Text>\n              <Text component=\"p\">\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\n                of its relative line height of 1.5.\n              </Text>\n            </TextContent>\n          </PageSection>\n          <PageSection>\n            <Gallery hasGutter>\n              {Array.apply(0, Array(10)).map((x, i) => (\n                <GalleryItem key={i}>\n                  <Card>\n                    <CardBody>This is a card</CardBody>\n                  </Card>\n                </GalleryItem>\n              ))}\n            </Gallery>\n          </PageSection>\n        </Page>\n      </React.Fragment>\n    );\n  }\n}","title":"Legacy/Light Nav","lang":"js","isFullscreen":true}}>
      
    </Example>,
  'Manual nav': props => 
    <Example {...pageData} {...props} thumbnail={srcImportmanualnav} {...{"code":"import React from 'react';\nimport {\n  Avatar,\n  Brand,\n  Button,\n  ButtonVariant,\n  Card,\n  CardBody,\n  Dropdown,\n  DropdownGroup,\n  DropdownToggle,\n  DropdownItem,\n  Gallery,\n  GalleryItem,\n  KebabToggle,\n  Nav,\n  NavItem,\n  NavList,\n  Page,\n  PageHeader,\n  PageSection,\n  PageSectionVariants,\n  PageSidebar,\n  SkipToContent,\n  TextContent,\n  Text,\n  PageHeaderTools,\n  PageHeaderToolsGroup,\n  PageHeaderToolsItem\n} from '@patternfly/react-core';\nimport CogIcon from '@patternfly/react-icons/dist/esm/icons/cog-icon';\nimport HelpIcon from '@patternfly/react-icons/dist/esm/icons/help-icon';\nimport QuestionCircleIcon from '@patternfly/react-icons/dist/esm/icons/question-circle-icon';\nimport imgBrand from '@patternfly/react-core/src/components/Brand/examples/pfLogo.svg';\nimport imgAvatar from '@patternfly/react-core/src/components/Avatar/examples/avatarImg.svg';\n\nclass PageLayoutManualNav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDropdownOpen: false,\n      isKebabDropdownOpen: false,\n      activeItem: 0,\n      isMobileView: false,\n      isNavOpenDesktop: true,\n      isNavOpenMobile: false\n    };\n\n    this.onDropdownToggle = isDropdownOpen => {\n      this.setState({\n        isDropdownOpen\n      });\n    };\n\n    this.onDropdownSelect = event => {\n      this.setState({\n        isDropdownOpen: !this.state.isDropdownOpen\n      });\n    };\n\n    this.onKebabDropdownToggle = isKebabDropdownOpen => {\n      this.setState({\n        isKebabDropdownOpen\n      });\n    };\n\n    this.onKebabDropdownSelect = event => {\n      this.setState({\n        isKebabDropdownOpen: !this.state.isKebabDropdownOpen\n      });\n    };\n\n    this.onNavSelect = result => {\n      this.setState({\n        activeItem: result.itemId\n      });\n    };\n\n    this.onNavToggleDesktop = () => {\n      this.setState({\n        isNavOpenDesktop: !this.state.isNavOpenDesktop\n      });\n    };\n\n    this.onNavToggleMobile = () => {\n      this.setState({\n        isNavOpenMobile: !this.state.isNavOpenMobile\n      });\n    };\n\n    this.onPageResize = ({ mobileView, windowSize }) => {\n      this.setState({\n        isMobileView: mobileView\n      });\n    };\n  }\n\n  render() {\n    const {\n      isDropdownOpen,\n      isKebabDropdownOpen,\n      activeItem,\n      isNavOpenDesktop,\n      isNavOpenMobile,\n      isMobileView\n    } = this.state;\n\n    const PageNav = (\n      <Nav onSelect={this.onNavSelect} aria-label=\"Nav\">\n        <NavList>\n          <NavItem itemId={0} isActive={activeItem === 0} to=\"#\">\n            System Panel\n          </NavItem>\n          <NavItem itemId={1} isActive={activeItem === 1} to=\"#\">\n            Policy\n          </NavItem>\n          <NavItem itemId={2} isActive={activeItem === 2} to=\"#\">\n            Authentication\n          </NavItem>\n          <NavItem itemId={3} isActive={activeItem === 3} to=\"#\">\n            Network Services\n          </NavItem>\n          <NavItem itemId={4} isActive={activeItem === 4} to=\"#\">\n            Server\n          </NavItem>\n        </NavList>\n      </Nav>\n    );\n    const kebabDropdownItems = [\n      <DropdownItem>\n        <CogIcon /> Settings\n      </DropdownItem>,\n      <DropdownItem>\n        <HelpIcon /> Help\n      </DropdownItem>\n    ];\n    const userDropdownItems = [\n      <DropdownGroup key=\"group 2\">\n        <DropdownItem key=\"group 2 profile\">My profile</DropdownItem>\n        <DropdownItem key=\"group 2 user\" component=\"button\">\n          User management\n        </DropdownItem>\n        <DropdownItem key=\"group 2 logout\">Logout</DropdownItem>\n      </DropdownGroup>\n    ];\n    const headerTools = (\n      <PageHeaderTools>\n        <PageHeaderToolsGroup\n          visibility={{\n            default: 'hidden',\n            lg: 'visible'\n          }} /** the settings and help icon buttons are only visible on desktop sizes and replaced by a kebab dropdown for other sizes */\n        >\n          <PageHeaderToolsItem>\n            <Button aria-label=\"Settings actions\" variant={ButtonVariant.plain}>\n              <CogIcon />\n            </Button>\n          </PageHeaderToolsItem>\n          <PageHeaderToolsItem>\n            <Button aria-label=\"Help actions\" variant={ButtonVariant.plain}>\n              <QuestionCircleIcon />\n            </Button>\n          </PageHeaderToolsItem>\n        </PageHeaderToolsGroup>\n        <PageHeaderToolsGroup>\n          <PageHeaderToolsItem\n            visibility={{\n              default: 'hidden',\n              breakpoint: 'lg'\n            }} /** this kebab dropdown replaces the icon buttons and is hidden for desktop sizes */\n          >\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onKebabDropdownSelect}\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\n              isOpen={isKebabDropdownOpen}\n              dropdownItems={kebabDropdownItems}\n            />\n          </PageHeaderToolsItem>\n          <PageHeaderToolsItem\n            visibility={{ default: 'hidden', md: 'visible' }} /** this user dropdown is hidden on mobile sizes */\n          >\n            <Dropdown\n              isPlain\n              position=\"right\"\n              onSelect={this.onDropdownSelect}\n              isOpen={isDropdownOpen}\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>John Smith</DropdownToggle>}\n              dropdownItems={userDropdownItems}\n            />\n          </PageHeaderToolsItem>\n        </PageHeaderToolsGroup>\n        <Avatar src={imgAvatar} alt=\"Avatar image\" />\n      </PageHeaderTools>\n    );\n\n    const Header = (\n      <PageHeader\n        logo={<Brand src={imgBrand} alt=\"Patternfly Logo\" />}\n        headerTools={headerTools}\n        showNavToggle\n        onNavToggle={isMobileView ? this.onNavToggleMobile : this.onNavToggleDesktop}\n        isNavOpen={isMobileView ? isNavOpenMobile : isNavOpenDesktop}\n      />\n    );\n    const Sidebar = <PageSidebar nav={PageNav} isNavOpen={isMobileView ? isNavOpenMobile : isNavOpenDesktop} />;\n    const pageId = 'main-content-page-layout-manual-nav';\n    const PageSkipToContent = <SkipToContent href={`#${pageId}`}>Skip to Content</SkipToContent>;\n\n    return (\n      <React.Fragment>\n        <Page\n          header={Header}\n          sidebar={Sidebar}\n          onPageResize={this.onPageResize}\n          skipToContent={PageSkipToContent}\n          mainContainerId={pageId}\n        >\n          <PageSection variant={PageSectionVariants.light}>\n            <TextContent>\n              <Text component=\"h1\">Main title</Text>\n              <Text component=\"p\">\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\n                of its relative line height of 1.5.\n              </Text>\n            </TextContent>\n          </PageSection>\n          <PageSection>\n            <Gallery hasGutter>\n              {Array.apply(0, Array(10)).map((x, i) => (\n                <GalleryItem key={i}>\n                  <Card>\n                    <CardBody>This is a card</CardBody>\n                  </Card>\n                </GalleryItem>\n              ))}\n            </Gallery>\n          </PageSection>\n        </Page>\n      </React.Fragment>\n    );\n  }\n}","title":"Manual nav","lang":"js","isFullscreen":true}}>
      
    </Example>,
  'Flyout nav': props => 
    <Example {...pageData} {...props} thumbnail={srcImportflyoutnav} {...{"code":"import React from 'react';\nimport {\n  Page,\n  Nav,\n  NavList,\n  NavItem,\n  PageHeader,\n  PageHeaderTools,\n  PageSidebar,\n  PageSection,\n  PageSectionVariants,\n  Menu,\n  MenuContent,\n  MenuList,\n  MenuItem\n} from '@patternfly/react-core';\nimport DashboardHeader from './examples/DashboardHeader';\n\nclass VerticalPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNavOpen: true,\n      activeItem: 0\n    };\n    this.onNavSelect = result => {\n      this.setState({\n        activeItem: result.itemId\n      });\n    };\n    this.onMenuSelect = (event, itemId) => {\n      this.setState({\n        activeItem: itemId\n      });\n    };\n  }\n\n  render() {\n    const numFlyouts = 5;\n    const FlyoutMenu = ({ depth, children }) => (\n      <Menu key={depth} containsFlyout isNavFlyout id={`menu-${depth}`} onSelect={this.onMenuSelect}>\n        <MenuContent>\n          <MenuList>\n            <MenuItem flyoutMenu={children} itemId={`next-menu-${depth}`} to={`#menu-link-${depth}`}>\n              Additional settings\n            </MenuItem>\n            {[...Array(numFlyouts - depth).keys()].map(j => (\n              <MenuItem key={`${depth}-${j}`} itemId={`${depth}-${j}`} to={`#menu-link-${depth}-${j}`}>\n                Settings menu {depth} item {j}\n              </MenuItem>\n            ))}\n            <MenuItem flyoutMenu={children} itemId={`next-menu-2-${depth}`} to={`#second-menu-link-${depth}`}>\n              Additional settings\n            </MenuItem>\n          </MenuList>\n        </MenuContent>\n      </Menu>\n    );\n    let curFlyout = <FlyoutMenu depth={1} />;\n    for (let i = 2; i < numFlyouts - 1; i++) {\n      curFlyout = <FlyoutMenu depth={i}>{curFlyout}</FlyoutMenu>;\n    }\n\n    const { activeItem } = this.state;\n\n    const Sidebar = (\n      <PageSidebar\n        nav={\n          <Nav onSelect={this.onNavSelect}>\n            <NavList>\n              <NavItem id=\"flyout-link1\" to=\"#flyout-link1\" itemId={0} isActive={activeItem === 0}>\n                System Panel\n              </NavItem>\n              <NavItem flyout={curFlyout} id=\"flyout-link2\" to=\"#flyout-link2\" itemId={1} isActive={activeItem === 1}>\n                Settings\n              </NavItem>\n              <NavItem id=\"flyout-link3\" to=\"#flyout-link3\" itemId={2} isActive={activeItem === 2}>\n                Authentication\n              </NavItem>\n            </NavList>\n          </Nav>\n        }\n      />\n    );\n\n    return (\n      <Page header={<DashboardHeader />} sidebar={Sidebar} isManagedSidebar>\n        <PageSection variant={PageSectionVariants.darker}>Section with darker background</PageSection>\n        <PageSection variant={PageSectionVariants.dark}>Section with dark background</PageSection>\n        <PageSection variant={PageSectionVariants.light}>Section with light background</PageSection>\n      </Page>\n    );\n  }\n}","title":"Flyout nav","lang":"js","isFullscreen":true}}>
      
    </Example>,
  'Drilldown nav': props => 
    <Example {...pageData} {...props} thumbnail={srcImportdrilldownnav} {...{"code":"import React from 'react';\n\nimport {\n  Page,\n  PageSidebar,\n  Nav,\n  MenuContent,\n  MenuItem,\n  MenuList,\n  DrilldownMenu,\n  Menu,\n  PageSection\n} from '@patternfly/react-core';\n\nimport DashboardHeader from '../DashboardHeader';\n\ninterface MenuHeights {\n  [menuId: string]: number;\n}\n\nfunction getNavLayer(menuId: string): number {\n  switch (menuId) {\n    case 'rootMenu':\n      return 1;\n    case 'subMenu-1':\n      return 2;\n    case 'subMenu-2':\n      return 3;\n  }\n}\n\nconst subMenuTwo: JSX.Element = (\n  <DrilldownMenu id=\"subMenu-2\">\n    <MenuItem itemId=\"subMenu-2-breadcrumb\" direction=\"up\">\n      SubMenu 1 - Item 1\n    </MenuItem>\n    <MenuItem itemId=\"subMenu-2_item-1\" to=\"#subMenu-2_item-1\">\n      SubMenu 2 - Item 1\n    </MenuItem>\n    <MenuItem itemId=\"subMenu-2_item-2\" to=\"#subMenu-2_item-2\">\n      SubMenu 2 - Item 2\n    </MenuItem>\n    <MenuItem itemId=\"subMenu-2_item-3\" to=\"#subMenu-2_item-3\">\n      SubMenu 2 - Item 3\n    </MenuItem>\n  </DrilldownMenu>\n);\n\nconst subMenuOne: JSX.Element = (\n  <DrilldownMenu id=\"subMenu-1\">\n    <MenuItem itemId=\"subMenu-1-breadcrumb\" direction=\"up\">\n      Item 1\n    </MenuItem>\n    <MenuItem itemId=\"subMenu-1_item-1\" description=\"SubMenu 2\" direction=\"down\" drilldownMenu={subMenuTwo}>\n      SubMenu 1 - Item 1\n    </MenuItem>\n    <MenuItem itemId=\"subMenu-1_item-2\" to=\"#subMenu-1_item-2\">\n      SubMenu 1 - Item 2\n    </MenuItem>\n    <MenuItem itemId=\"subMenu-1_item-3\" to=\"#subMenu-1_item-3\">\n      SubMenu 1 - Item 3\n    </MenuItem>\n  </DrilldownMenu>\n);\n\nexport const NavDrilldown: React.FunctionComponent = () => {\n  const [menuDrilledIn, setMenuDrilledIn] = React.useState<string[]>([]);\n  const [drilldownPath, setDrilldownPath] = React.useState<string[]>([]);\n  const [menuHeights, setMenuHeights] = React.useState<MenuHeights>({});\n  const [activeMenuId, setActiveMenuId] = React.useState('rootMenu');\n  const navLayer = getNavLayer(activeMenuId);\n\n  const onDrillIn = (fromItemId: string, toItemId: string, itemId: string) => {\n    setMenuDrilledIn(prevMenuDrilledIn => [...prevMenuDrilledIn, fromItemId]);\n    setDrilldownPath(prevDrilldownPath => [...prevDrilldownPath, itemId]);\n    setActiveMenuId(toItemId);\n  };\n\n  const onDrillOut = (toItemId: string, _itemId: string) => {\n    setMenuDrilledIn(prevMenuDrilledIn => prevMenuDrilledIn.slice(0, prevMenuDrilledIn.length - 1));\n    setDrilldownPath(prevDrilldownPath => prevDrilldownPath.slice(0, prevDrilldownPath.length - 1));\n    setActiveMenuId(toItemId);\n  };\n\n  const onGetMenuHeight = (menuId: string, height: number) => {\n    if (!menuHeights[menuId] && menuId !== 'rootMenu') {\n      setMenuHeights(prevMenuHeights => ({ ...prevMenuHeights, [menuId]: height }));\n    }\n  };\n\n  const sidebar = (\n    <PageSidebar\n      nav={\n        <Nav>\n          <Menu\n            id=\"rootMenu\"\n            containsDrilldown\n            drilldownItemPath={drilldownPath}\n            drilledInMenus={menuDrilledIn}\n            activeMenu={activeMenuId}\n            onDrillIn={onDrillIn}\n            onDrillOut={onDrillOut}\n            onGetMenuHeight={onGetMenuHeight}\n          >\n            <MenuContent menuHeight={`${menuHeights[activeMenuId]}px`}>\n              <MenuList>\n                <MenuItem itemId=\"item-1\" direction=\"down\" description=\"SubMenu 1\" drilldownMenu={subMenuOne}>\n                  Item 1\n                </MenuItem>\n                <MenuItem itemId=\"item-2\" to=\"#item-2\">\n                  Item 2\n                </MenuItem>\n                <MenuItem itemId=\"item-3\" to=\"#item-3\">\n                  Item 3\n                </MenuItem>\n              </MenuList>\n            </MenuContent>\n          </Menu>\n        </Nav>\n      }\n    />\n  );\n\n  return (\n    <Page header={<DashboardHeader />} sidebar={sidebar}>\n      <PageSection>\n        <strong>Nav Layer: </strong>\n        {navLayer}\n      </PageSection>\n    </Page>\n  );\n};\n","title":"Drilldown nav","lang":"js","isBeta":true,"isFullscreen":true}}>
      
    </Example>
};

const Component = () => (
  <React.Fragment>
    <AutoLinkHeader {...{"id":"demos","size":"h2","className":"ws-title ws-h2"}}>
      {`Demos`}
    </AutoLinkHeader>
    {React.createElement(pageData.examples["Default nav"])}
    {React.createElement(pageData.examples["Grouped nav"])}
    {React.createElement(pageData.examples["Expandable nav"])}
    {React.createElement(pageData.examples["Horizontal nav"])}
    {React.createElement(pageData.examples["Horizontal subnav"])}
    {React.createElement(pageData.examples["Horizontal nav with horizontal subnav"])}
    {React.createElement(pageData.examples["Legacy tertiary nav"])}
    {React.createElement(pageData.examples["Legacy/Light Nav"])}
    {React.createElement(pageData.examples["Manual nav"])}
    {React.createElement(pageData.examples["Flyout nav"])}
    {React.createElement(pageData.examples["Drilldown nav"])}
  </React.Fragment>
);
Component.displayName = 'ComponentsNavigationReactDemosDocs';
Component.pageData = pageData;

export default Component;
